// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="Systolic_Array_Conv,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu7ev-ffvc1156-2-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=13.323000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=8,HLS_SYN_DSP=392,HLS_SYN_FF=40777,HLS_SYN_LUT=50200,HLS_VERSION=2020_1}" *)

module Systolic_Array_Conv (
        ap_clk,
        ap_rst_n,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        stride,
        padding,
        Rin,
        Cin,
        CHin,
        R,
        C,
        CHout,
        K,
        s_axi_AXILiteS_AWVALID,
        s_axi_AXILiteS_AWREADY,
        s_axi_AXILiteS_AWADDR,
        s_axi_AXILiteS_WVALID,
        s_axi_AXILiteS_WREADY,
        s_axi_AXILiteS_WDATA,
        s_axi_AXILiteS_WSTRB,
        s_axi_AXILiteS_ARVALID,
        s_axi_AXILiteS_ARREADY,
        s_axi_AXILiteS_ARADDR,
        s_axi_AXILiteS_RVALID,
        s_axi_AXILiteS_RREADY,
        s_axi_AXILiteS_RDATA,
        s_axi_AXILiteS_RRESP,
        s_axi_AXILiteS_BVALID,
        s_axi_AXILiteS_BREADY,
        s_axi_AXILiteS_BRESP
);

parameter    ap_ST_fsm_state1 = 11'd1;
parameter    ap_ST_fsm_state2 = 11'd2;
parameter    ap_ST_fsm_state3 = 11'd4;
parameter    ap_ST_fsm_state4 = 11'd8;
parameter    ap_ST_fsm_state5 = 11'd16;
parameter    ap_ST_fsm_state6 = 11'd32;
parameter    ap_ST_fsm_state7 = 11'd64;
parameter    ap_ST_fsm_state8 = 11'd128;
parameter    ap_ST_fsm_state9 = 11'd256;
parameter    ap_ST_fsm_state10 = 11'd512;
parameter    ap_ST_fsm_state11 = 11'd1024;
parameter    C_S_AXI_AXILITES_DATA_WIDTH = 32;
parameter    C_S_AXI_AXILITES_ADDR_WIDTH = 6;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM_ID_WIDTH = 1;
parameter    C_M_AXI_GMEM_ADDR_WIDTH = 32;
parameter    C_M_AXI_GMEM_DATA_WIDTH = 32;
parameter    C_M_AXI_GMEM_AWUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_ARUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_WUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_RUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_BUSER_WIDTH = 1;
parameter    C_M_AXI_GMEM_USER_VALUE = 0;
parameter    C_M_AXI_GMEM_PROT_VALUE = 0;
parameter    C_M_AXI_GMEM_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_AXILITES_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_GMEM_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1:0] m_axi_gmem_AWADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_AWID;
output  [7:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [C_M_AXI_GMEM_AWUSER_WIDTH - 1:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [C_M_AXI_GMEM_DATA_WIDTH - 1:0] m_axi_gmem_WDATA;
output  [C_M_AXI_GMEM_WSTRB_WIDTH - 1:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_WID;
output  [C_M_AXI_GMEM_WUSER_WIDTH - 1:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [C_M_AXI_GMEM_ADDR_WIDTH - 1:0] m_axi_gmem_ARADDR;
output  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_ARID;
output  [7:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [C_M_AXI_GMEM_ARUSER_WIDTH - 1:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [C_M_AXI_GMEM_DATA_WIDTH - 1:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_RID;
input  [C_M_AXI_GMEM_RUSER_WIDTH - 1:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [C_M_AXI_GMEM_ID_WIDTH - 1:0] m_axi_gmem_BID;
input  [C_M_AXI_GMEM_BUSER_WIDTH - 1:0] m_axi_gmem_BUSER;
input  [31:0] stride;
input  [31:0] padding;
input  [31:0] Rin;
input  [31:0] Cin;
input  [31:0] CHin;
input  [31:0] R;
input  [31:0] C;
input  [31:0] CHout;
input  [31:0] K;
input   s_axi_AXILiteS_AWVALID;
output   s_axi_AXILiteS_AWREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_AWADDR;
input   s_axi_AXILiteS_WVALID;
output   s_axi_AXILiteS_WREADY;
input  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_WDATA;
input  [C_S_AXI_AXILITES_WSTRB_WIDTH - 1:0] s_axi_AXILiteS_WSTRB;
input   s_axi_AXILiteS_ARVALID;
output   s_axi_AXILiteS_ARREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_ARADDR;
output   s_axi_AXILiteS_RVALID;
input   s_axi_AXILiteS_RREADY;
output  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_RDATA;
output  [1:0] s_axi_AXILiteS_RRESP;
output   s_axi_AXILiteS_BVALID;
input   s_axi_AXILiteS_BREADY;
output  [1:0] s_axi_AXILiteS_BRESP;

reg ap_done;
reg ap_idle;
reg ap_ready;

 reg    ap_rst_n_inv;
(* fsm_encoding = "none" *) reg   [10:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [31:0] In_ddr;
wire   [31:0] W_ddr;
wire   [31:0] Out_ddr;
reg   [31:0] p_chin_s;
reg   [31:0] p_chout_s;
reg   [31:0] p_r_s;
reg   [31:0] p_c_s;
reg   [31:0] p_cin_s;
reg   [31:0] p_k_s;
reg   [31:0] p_s_s;
reg   [31:0] p_p_s;
reg   [31:0] p_rinp_s;
reg   [31:0] p_cinp_s;
reg   [31:0] In_buffer_length;
reg   [31:0] In_buffer_start;
reg   [31:0] In_buffer_end;
reg   [31:0] Out_buf_row;
reg   [31:0] In_buf_row;
reg   [31:0] Out_buf_cho;
reg   [31:0] Out_buf_row_count;
reg    gmem_AWVALID;
wire    gmem_AWREADY;
reg    gmem_WVALID;
wire    gmem_WREADY;
reg    gmem_ARVALID;
wire    gmem_ARREADY;
reg   [31:0] gmem_ARADDR;
reg   [0:0] gmem_ARID;
reg   [31:0] gmem_ARLEN;
reg   [2:0] gmem_ARSIZE;
reg   [1:0] gmem_ARBURST;
reg   [1:0] gmem_ARLOCK;
reg   [3:0] gmem_ARCACHE;
reg   [2:0] gmem_ARPROT;
reg   [3:0] gmem_ARQOS;
reg   [3:0] gmem_ARREGION;
reg   [0:0] gmem_ARUSER;
wire    gmem_RVALID;
reg    gmem_RREADY;
wire   [31:0] gmem_RDATA;
wire    gmem_RLAST;
wire   [0:0] gmem_RID;
wire   [0:0] gmem_RUSER;
wire   [1:0] gmem_RRESP;
wire    gmem_BVALID;
reg    gmem_BREADY;
wire   [1:0] gmem_BRESP;
wire   [0:0] gmem_BID;
wire   [0:0] gmem_BUSER;
reg   [29:0] Out_ddr5_reg_762;
reg   [29:0] W_ddr3_reg_767;
reg   [29:0] In_ddr1_reg_772;
wire   [31:0] mul_ln336_2_fu_500_p2;
reg   [31:0] mul_ln336_2_reg_777;
wire   [31:0] flush_row_count_fu_522_p2;
reg   [31:0] flush_row_count_reg_782;
wire    ap_CS_fsm_state3;
wire    grp_Read_W_buf_fu_311_ap_ready;
wire    grp_Read_W_buf_fu_311_ap_done;
wire   [31:0] add_ln337_fu_538_p2;
reg   [31:0] add_ln337_reg_787;
wire   [30:0] reuse_row_count_fu_560_p3;
reg   [30:0] reuse_row_count_reg_792;
wire   [31:0] zext_ln364_fu_568_p1;
reg   [31:0] zext_ln364_reg_797;
wire   [31:0] new_read_row_count_fu_582_p2;
reg   [31:0] new_read_row_count_reg_805;
wire    ap_CS_fsm_state4;
wire   [0:0] icmp_ln340_fu_572_p2;
wire   [30:0] i_fu_596_p2;
reg   [30:0] i_reg_813;
wire    ap_CS_fsm_state5;
wire   [31:0] add_ln346_fu_602_p2;
reg   [31:0] add_ln346_reg_818;
wire   [0:0] icmp_ln344_fu_591_p2;
reg   [31:0] Out_buf_cho_load_reg_823;
wire    ap_CS_fsm_state8;
reg   [31:0] Out_buf_row_load_1_reg_831;
wire   [0:0] icmp_ln351_fu_637_p2;
wire   [31:0] select_ln358_fu_655_p3;
reg   [31:0] select_ln358_reg_836;
wire   [63:0] add_ln360_fu_694_p2;
reg   [63:0] add_ln360_reg_841;
reg   [8:0] In_buffer_address0;
reg    In_buffer_ce0;
reg    In_buffer_we0;
wire   [31:0] In_buffer_q0;
reg    In_buffer_ce1;
wire   [31:0] In_buffer_q1;
reg   [8:0] W_buffer_address0;
reg    W_buffer_ce0;
reg    W_buffer_we0;
wire   [31:0] W_buffer_q0;
reg    W_buffer_ce1;
wire   [31:0] W_buffer_q1;
reg   [8:0] Out_buffer_address0;
reg    Out_buffer_ce0;
reg    Out_buffer_we0;
wire   [31:0] Out_buffer_q0;
reg    Out_buffer_ce1;
reg    Out_buffer_we1;
wire   [8:0] grp_PE_array_fu_246_In_buf_address0;
wire    grp_PE_array_fu_246_In_buf_ce0;
wire   [31:0] grp_PE_array_fu_246_In_buf_d0;
wire    grp_PE_array_fu_246_In_buf_we0;
wire   [8:0] grp_PE_array_fu_246_In_buf_address1;
wire    grp_PE_array_fu_246_In_buf_ce1;
wire   [31:0] grp_PE_array_fu_246_In_buf_d1;
wire    grp_PE_array_fu_246_In_buf_we1;
wire   [8:0] grp_PE_array_fu_246_W_buf_address0;
wire    grp_PE_array_fu_246_W_buf_ce0;
wire   [31:0] grp_PE_array_fu_246_W_buf_d0;
wire    grp_PE_array_fu_246_W_buf_we0;
wire   [8:0] grp_PE_array_fu_246_W_buf_address1;
wire    grp_PE_array_fu_246_W_buf_ce1;
wire   [31:0] grp_PE_array_fu_246_W_buf_d1;
wire    grp_PE_array_fu_246_W_buf_we1;
wire   [8:0] grp_PE_array_fu_246_Out_buf_address0;
wire    grp_PE_array_fu_246_Out_buf_ce0;
wire   [31:0] grp_PE_array_fu_246_Out_buf_d0;
wire    grp_PE_array_fu_246_Out_buf_we0;
wire   [8:0] grp_PE_array_fu_246_Out_buf_address1;
wire    grp_PE_array_fu_246_Out_buf_ce1;
wire   [31:0] grp_PE_array_fu_246_Out_buf_d1;
wire    grp_PE_array_fu_246_Out_buf_we1;
wire    grp_PE_array_fu_246_ap_start;
wire    grp_PE_array_fu_246_ap_done;
wire    grp_PE_array_fu_246_ap_ready;
wire    grp_PE_array_fu_246_ap_idle;
reg    grp_PE_array_fu_246_ap_continue;
wire    grp_Read_In_buf_line_fu_275_ap_start;
wire    grp_Read_In_buf_line_fu_275_ap_done;
wire    grp_Read_In_buf_line_fu_275_ap_idle;
wire    grp_Read_In_buf_line_fu_275_ap_ready;
wire   [8:0] grp_Read_In_buf_line_fu_275_In_buf_address0;
wire    grp_Read_In_buf_line_fu_275_In_buf_ce0;
wire    grp_Read_In_buf_line_fu_275_In_buf_we0;
wire   [31:0] grp_Read_In_buf_line_fu_275_In_buf_d0;
wire    grp_Read_In_buf_line_fu_275_m_axi_In_ddr_AWVALID;
wire   [31:0] grp_Read_In_buf_line_fu_275_m_axi_In_ddr_AWADDR;
wire   [0:0] grp_Read_In_buf_line_fu_275_m_axi_In_ddr_AWID;
wire   [31:0] grp_Read_In_buf_line_fu_275_m_axi_In_ddr_AWLEN;
wire   [2:0] grp_Read_In_buf_line_fu_275_m_axi_In_ddr_AWSIZE;
wire   [1:0] grp_Read_In_buf_line_fu_275_m_axi_In_ddr_AWBURST;
wire   [1:0] grp_Read_In_buf_line_fu_275_m_axi_In_ddr_AWLOCK;
wire   [3:0] grp_Read_In_buf_line_fu_275_m_axi_In_ddr_AWCACHE;
wire   [2:0] grp_Read_In_buf_line_fu_275_m_axi_In_ddr_AWPROT;
wire   [3:0] grp_Read_In_buf_line_fu_275_m_axi_In_ddr_AWQOS;
wire   [3:0] grp_Read_In_buf_line_fu_275_m_axi_In_ddr_AWREGION;
wire   [0:0] grp_Read_In_buf_line_fu_275_m_axi_In_ddr_AWUSER;
wire    grp_Read_In_buf_line_fu_275_m_axi_In_ddr_WVALID;
wire   [31:0] grp_Read_In_buf_line_fu_275_m_axi_In_ddr_WDATA;
wire   [3:0] grp_Read_In_buf_line_fu_275_m_axi_In_ddr_WSTRB;
wire    grp_Read_In_buf_line_fu_275_m_axi_In_ddr_WLAST;
wire   [0:0] grp_Read_In_buf_line_fu_275_m_axi_In_ddr_WID;
wire   [0:0] grp_Read_In_buf_line_fu_275_m_axi_In_ddr_WUSER;
wire    grp_Read_In_buf_line_fu_275_m_axi_In_ddr_ARVALID;
wire   [31:0] grp_Read_In_buf_line_fu_275_m_axi_In_ddr_ARADDR;
wire   [0:0] grp_Read_In_buf_line_fu_275_m_axi_In_ddr_ARID;
wire   [31:0] grp_Read_In_buf_line_fu_275_m_axi_In_ddr_ARLEN;
wire   [2:0] grp_Read_In_buf_line_fu_275_m_axi_In_ddr_ARSIZE;
wire   [1:0] grp_Read_In_buf_line_fu_275_m_axi_In_ddr_ARBURST;
wire   [1:0] grp_Read_In_buf_line_fu_275_m_axi_In_ddr_ARLOCK;
wire   [3:0] grp_Read_In_buf_line_fu_275_m_axi_In_ddr_ARCACHE;
wire   [2:0] grp_Read_In_buf_line_fu_275_m_axi_In_ddr_ARPROT;
wire   [3:0] grp_Read_In_buf_line_fu_275_m_axi_In_ddr_ARQOS;
wire   [3:0] grp_Read_In_buf_line_fu_275_m_axi_In_ddr_ARREGION;
wire   [0:0] grp_Read_In_buf_line_fu_275_m_axi_In_ddr_ARUSER;
wire    grp_Read_In_buf_line_fu_275_m_axi_In_ddr_RREADY;
wire    grp_Read_In_buf_line_fu_275_m_axi_In_ddr_BREADY;
wire    grp_Write_C_buf_fu_296_ap_start;
wire    grp_Write_C_buf_fu_296_ap_done;
wire    grp_Write_C_buf_fu_296_ap_idle;
wire    grp_Write_C_buf_fu_296_ap_ready;
wire   [8:0] grp_Write_C_buf_fu_296_Out_buf_address0;
wire    grp_Write_C_buf_fu_296_Out_buf_ce0;
wire   [8:0] grp_Write_C_buf_fu_296_Out_buf_address1;
wire    grp_Write_C_buf_fu_296_Out_buf_ce1;
wire    grp_Write_C_buf_fu_296_Out_buf_we1;
wire   [31:0] grp_Write_C_buf_fu_296_Out_buf_d1;
wire    grp_Write_C_buf_fu_296_m_axi_Out_ddr_AWVALID;
wire   [31:0] grp_Write_C_buf_fu_296_m_axi_Out_ddr_AWADDR;
wire   [0:0] grp_Write_C_buf_fu_296_m_axi_Out_ddr_AWID;
wire   [31:0] grp_Write_C_buf_fu_296_m_axi_Out_ddr_AWLEN;
wire   [2:0] grp_Write_C_buf_fu_296_m_axi_Out_ddr_AWSIZE;
wire   [1:0] grp_Write_C_buf_fu_296_m_axi_Out_ddr_AWBURST;
wire   [1:0] grp_Write_C_buf_fu_296_m_axi_Out_ddr_AWLOCK;
wire   [3:0] grp_Write_C_buf_fu_296_m_axi_Out_ddr_AWCACHE;
wire   [2:0] grp_Write_C_buf_fu_296_m_axi_Out_ddr_AWPROT;
wire   [3:0] grp_Write_C_buf_fu_296_m_axi_Out_ddr_AWQOS;
wire   [3:0] grp_Write_C_buf_fu_296_m_axi_Out_ddr_AWREGION;
wire   [0:0] grp_Write_C_buf_fu_296_m_axi_Out_ddr_AWUSER;
wire    grp_Write_C_buf_fu_296_m_axi_Out_ddr_WVALID;
wire   [31:0] grp_Write_C_buf_fu_296_m_axi_Out_ddr_WDATA;
wire   [3:0] grp_Write_C_buf_fu_296_m_axi_Out_ddr_WSTRB;
wire    grp_Write_C_buf_fu_296_m_axi_Out_ddr_WLAST;
wire   [0:0] grp_Write_C_buf_fu_296_m_axi_Out_ddr_WID;
wire   [0:0] grp_Write_C_buf_fu_296_m_axi_Out_ddr_WUSER;
wire    grp_Write_C_buf_fu_296_m_axi_Out_ddr_ARVALID;
wire   [31:0] grp_Write_C_buf_fu_296_m_axi_Out_ddr_ARADDR;
wire   [0:0] grp_Write_C_buf_fu_296_m_axi_Out_ddr_ARID;
wire   [31:0] grp_Write_C_buf_fu_296_m_axi_Out_ddr_ARLEN;
wire   [2:0] grp_Write_C_buf_fu_296_m_axi_Out_ddr_ARSIZE;
wire   [1:0] grp_Write_C_buf_fu_296_m_axi_Out_ddr_ARBURST;
wire   [1:0] grp_Write_C_buf_fu_296_m_axi_Out_ddr_ARLOCK;
wire   [3:0] grp_Write_C_buf_fu_296_m_axi_Out_ddr_ARCACHE;
wire   [2:0] grp_Write_C_buf_fu_296_m_axi_Out_ddr_ARPROT;
wire   [3:0] grp_Write_C_buf_fu_296_m_axi_Out_ddr_ARQOS;
wire   [3:0] grp_Write_C_buf_fu_296_m_axi_Out_ddr_ARREGION;
wire   [0:0] grp_Write_C_buf_fu_296_m_axi_Out_ddr_ARUSER;
wire    grp_Write_C_buf_fu_296_m_axi_Out_ddr_RREADY;
wire    grp_Write_C_buf_fu_296_m_axi_Out_ddr_BREADY;
wire    grp_Read_W_buf_fu_311_ap_start;
wire    grp_Read_W_buf_fu_311_ap_idle;
wire   [8:0] grp_Read_W_buf_fu_311_W_address0;
wire    grp_Read_W_buf_fu_311_W_ce0;
wire    grp_Read_W_buf_fu_311_W_we0;
wire   [31:0] grp_Read_W_buf_fu_311_W_d0;
wire    grp_Read_W_buf_fu_311_m_axi_W_ddr_AWVALID;
wire   [31:0] grp_Read_W_buf_fu_311_m_axi_W_ddr_AWADDR;
wire   [0:0] grp_Read_W_buf_fu_311_m_axi_W_ddr_AWID;
wire   [31:0] grp_Read_W_buf_fu_311_m_axi_W_ddr_AWLEN;
wire   [2:0] grp_Read_W_buf_fu_311_m_axi_W_ddr_AWSIZE;
wire   [1:0] grp_Read_W_buf_fu_311_m_axi_W_ddr_AWBURST;
wire   [1:0] grp_Read_W_buf_fu_311_m_axi_W_ddr_AWLOCK;
wire   [3:0] grp_Read_W_buf_fu_311_m_axi_W_ddr_AWCACHE;
wire   [2:0] grp_Read_W_buf_fu_311_m_axi_W_ddr_AWPROT;
wire   [3:0] grp_Read_W_buf_fu_311_m_axi_W_ddr_AWQOS;
wire   [3:0] grp_Read_W_buf_fu_311_m_axi_W_ddr_AWREGION;
wire   [0:0] grp_Read_W_buf_fu_311_m_axi_W_ddr_AWUSER;
wire    grp_Read_W_buf_fu_311_m_axi_W_ddr_WVALID;
wire   [31:0] grp_Read_W_buf_fu_311_m_axi_W_ddr_WDATA;
wire   [3:0] grp_Read_W_buf_fu_311_m_axi_W_ddr_WSTRB;
wire    grp_Read_W_buf_fu_311_m_axi_W_ddr_WLAST;
wire   [0:0] grp_Read_W_buf_fu_311_m_axi_W_ddr_WID;
wire   [0:0] grp_Read_W_buf_fu_311_m_axi_W_ddr_WUSER;
wire    grp_Read_W_buf_fu_311_m_axi_W_ddr_ARVALID;
wire   [31:0] grp_Read_W_buf_fu_311_m_axi_W_ddr_ARADDR;
wire   [0:0] grp_Read_W_buf_fu_311_m_axi_W_ddr_ARID;
wire   [31:0] grp_Read_W_buf_fu_311_m_axi_W_ddr_ARLEN;
wire   [2:0] grp_Read_W_buf_fu_311_m_axi_W_ddr_ARSIZE;
wire   [1:0] grp_Read_W_buf_fu_311_m_axi_W_ddr_ARBURST;
wire   [1:0] grp_Read_W_buf_fu_311_m_axi_W_ddr_ARLOCK;
wire   [3:0] grp_Read_W_buf_fu_311_m_axi_W_ddr_ARCACHE;
wire   [2:0] grp_Read_W_buf_fu_311_m_axi_W_ddr_ARPROT;
wire   [3:0] grp_Read_W_buf_fu_311_m_axi_W_ddr_ARQOS;
wire   [3:0] grp_Read_W_buf_fu_311_m_axi_W_ddr_ARREGION;
wire   [0:0] grp_Read_W_buf_fu_311_m_axi_W_ddr_ARUSER;
wire    grp_Read_W_buf_fu_311_m_axi_W_ddr_RREADY;
wire    grp_Read_W_buf_fu_311_m_axi_W_ddr_BREADY;
reg   [63:0] p_0_rec_reg_212;
wire    ap_CS_fsm_state11;
reg   [30:0] reuse_row_count_0_reg_224;
reg   [30:0] i_0_reg_235;
wire    ap_CS_fsm_state7;
reg    grp_PE_array_fu_246_ap_start_reg;
wire    ap_CS_fsm_state9;
wire    ap_sync_grp_PE_array_fu_246_ap_ready;
wire    ap_sync_grp_PE_array_fu_246_ap_done;
reg    ap_block_state9_on_subcall_done;
reg    ap_sync_reg_grp_PE_array_fu_246_ap_ready;
reg    ap_sync_reg_grp_PE_array_fu_246_ap_done;
reg    grp_Read_In_buf_line_fu_275_ap_start_reg;
wire    ap_CS_fsm_state6;
reg    grp_Write_C_buf_fu_296_ap_start_reg;
reg    grp_Read_W_buf_fu_311_ap_start_reg;
wire    ap_CS_fsm_state2;
wire   [31:0] add_ln324_fu_416_p2;
wire   [31:0] add_ln325_fu_428_p2;
wire   [31:0] mul_ln332_1_fu_464_p2;
wire   [31:0] sub_ln365_fu_722_p2;
wire   [31:0] add_ln347_fu_621_p2;
wire   [31:0] add_ln361_fu_750_p2;
wire   [31:0] add_ln362_fu_700_p2;
wire   [31:0] add_ln354_fu_734_p2;
wire    ap_CS_fsm_state10;
wire  signed [31:0] add_ln325_fu_428_p0;
wire   [31:0] shl_ln332_fu_440_p2;
wire   [31:0] sub_ln332_fu_446_p2;
wire  signed [31:0] add_ln332_fu_452_p1;
wire  signed [31:0] add_ln332_fu_452_p2;
wire  signed [31:0] mul_ln332_fu_458_p1;
wire  signed [31:0] mul_ln332_fu_458_p2;
wire  signed [31:0] mul_ln332_1_fu_464_p1;
wire  signed [31:0] mul_ln336_fu_488_p0;
wire  signed [31:0] mul_ln336_fu_488_p1;
wire  signed [31:0] mul_ln336_1_fu_494_p0;
wire  signed [31:0] mul_ln336_1_fu_494_p1;
wire  signed [31:0] mul_ln336_fu_488_p2;
wire  signed [31:0] mul_ln336_1_fu_494_p2;
wire   [31:0] sub_ln337_fu_528_p2;
wire   [31:0] sub_ln364_fu_544_p2;
wire   [0:0] icmp_ln364_fu_554_p2;
wire   [30:0] trunc_ln364_fu_550_p1;
wire   [31:0] zext_ln340_fu_578_p1;
wire   [31:0] zext_ln344_fu_587_p1;
wire  signed [31:0] mul_ln347_fu_615_p0;
wire  signed [31:0] mul_ln347_fu_615_p1;
wire   [31:0] mul_ln347_fu_615_p2;
wire   [31:0] sub_ln358_fu_643_p2;
wire   [0:0] icmp_ln358_fu_649_p2;
wire  signed [31:0] mul_ln360_fu_678_p0;
wire  signed [31:0] mul_ln360_fu_678_p1;
wire   [31:0] mul_ln360_fu_678_p2;
wire   [31:0] shl_ln360_fu_684_p2;
wire  signed [63:0] sext_ln360_fu_690_p1;
wire  signed [31:0] mul_ln365_fu_711_p0;
wire   [30:0] mul_ln365_fu_711_p1;
wire  signed [31:0] mul_ln365_fu_711_p2;
wire  signed [31:0] mul_ln365_1_fu_716_p1;
wire   [31:0] mul_ln365_1_fu_716_p2;
reg   [10:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 11'd1;
#0 p_chin_s = 32'd0;
#0 p_chout_s = 32'd0;
#0 p_r_s = 32'd0;
#0 p_c_s = 32'd0;
#0 p_cin_s = 32'd0;
#0 p_k_s = 32'd0;
#0 p_s_s = 32'd0;
#0 p_p_s = 32'd0;
#0 p_rinp_s = 32'd0;
#0 p_cinp_s = 32'd0;
#0 In_buffer_length = 32'd0;
#0 In_buffer_start = 32'd0;
#0 In_buffer_end = 32'd0;
#0 Out_buf_row = 32'd0;
#0 In_buf_row = 32'd0;
#0 Out_buf_cho = 32'd0;
#0 Out_buf_row_count = 32'd0;
#0 grp_PE_array_fu_246_ap_start_reg = 1'b0;
#0 ap_sync_reg_grp_PE_array_fu_246_ap_ready = 1'b0;
#0 ap_sync_reg_grp_PE_array_fu_246_ap_done = 1'b0;
#0 grp_Read_In_buf_line_fu_275_ap_start_reg = 1'b0;
#0 grp_Write_C_buf_fu_296_ap_start_reg = 1'b0;
#0 grp_Read_W_buf_fu_311_ap_start_reg = 1'b0;
end

Systolic_Array_Conv_AXILiteS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_AXILITES_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_AXILITES_DATA_WIDTH ))
Systolic_Array_Conv_AXILiteS_s_axi_U(
    .AWVALID(s_axi_AXILiteS_AWVALID),
    .AWREADY(s_axi_AXILiteS_AWREADY),
    .AWADDR(s_axi_AXILiteS_AWADDR),
    .WVALID(s_axi_AXILiteS_WVALID),
    .WREADY(s_axi_AXILiteS_WREADY),
    .WDATA(s_axi_AXILiteS_WDATA),
    .WSTRB(s_axi_AXILiteS_WSTRB),
    .ARVALID(s_axi_AXILiteS_ARVALID),
    .ARREADY(s_axi_AXILiteS_ARREADY),
    .ARADDR(s_axi_AXILiteS_ARADDR),
    .RVALID(s_axi_AXILiteS_RVALID),
    .RREADY(s_axi_AXILiteS_RREADY),
    .RDATA(s_axi_AXILiteS_RDATA),
    .RRESP(s_axi_AXILiteS_RRESP),
    .BVALID(s_axi_AXILiteS_BVALID),
    .BREADY(s_axi_AXILiteS_BREADY),
    .BRESP(s_axi_AXILiteS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .In_ddr(In_ddr),
    .W_ddr(W_ddr),
    .Out_ddr(Out_ddr)
);

Systolic_Array_Conv_gmem_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 32 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_GMEM_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_GMEM_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_GMEM_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_GMEM_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_GMEM_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_GMEM_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_GMEM_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_GMEM_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_GMEM_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_GMEM_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_GMEM_CACHE_VALUE ))
Systolic_Array_Conv_gmem_m_axi_U(
    .AWVALID(m_axi_gmem_AWVALID),
    .AWREADY(m_axi_gmem_AWREADY),
    .AWADDR(m_axi_gmem_AWADDR),
    .AWID(m_axi_gmem_AWID),
    .AWLEN(m_axi_gmem_AWLEN),
    .AWSIZE(m_axi_gmem_AWSIZE),
    .AWBURST(m_axi_gmem_AWBURST),
    .AWLOCK(m_axi_gmem_AWLOCK),
    .AWCACHE(m_axi_gmem_AWCACHE),
    .AWPROT(m_axi_gmem_AWPROT),
    .AWQOS(m_axi_gmem_AWQOS),
    .AWREGION(m_axi_gmem_AWREGION),
    .AWUSER(m_axi_gmem_AWUSER),
    .WVALID(m_axi_gmem_WVALID),
    .WREADY(m_axi_gmem_WREADY),
    .WDATA(m_axi_gmem_WDATA),
    .WSTRB(m_axi_gmem_WSTRB),
    .WLAST(m_axi_gmem_WLAST),
    .WID(m_axi_gmem_WID),
    .WUSER(m_axi_gmem_WUSER),
    .ARVALID(m_axi_gmem_ARVALID),
    .ARREADY(m_axi_gmem_ARREADY),
    .ARADDR(m_axi_gmem_ARADDR),
    .ARID(m_axi_gmem_ARID),
    .ARLEN(m_axi_gmem_ARLEN),
    .ARSIZE(m_axi_gmem_ARSIZE),
    .ARBURST(m_axi_gmem_ARBURST),
    .ARLOCK(m_axi_gmem_ARLOCK),
    .ARCACHE(m_axi_gmem_ARCACHE),
    .ARPROT(m_axi_gmem_ARPROT),
    .ARQOS(m_axi_gmem_ARQOS),
    .ARREGION(m_axi_gmem_ARREGION),
    .ARUSER(m_axi_gmem_ARUSER),
    .RVALID(m_axi_gmem_RVALID),
    .RREADY(m_axi_gmem_RREADY),
    .RDATA(m_axi_gmem_RDATA),
    .RLAST(m_axi_gmem_RLAST),
    .RID(m_axi_gmem_RID),
    .RUSER(m_axi_gmem_RUSER),
    .RRESP(m_axi_gmem_RRESP),
    .BVALID(m_axi_gmem_BVALID),
    .BREADY(m_axi_gmem_BREADY),
    .BRESP(m_axi_gmem_BRESP),
    .BID(m_axi_gmem_BID),
    .BUSER(m_axi_gmem_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(gmem_ARVALID),
    .I_ARREADY(gmem_ARREADY),
    .I_ARADDR(gmem_ARADDR),
    .I_ARID(gmem_ARID),
    .I_ARLEN(gmem_ARLEN),
    .I_ARSIZE(gmem_ARSIZE),
    .I_ARLOCK(gmem_ARLOCK),
    .I_ARCACHE(gmem_ARCACHE),
    .I_ARQOS(gmem_ARQOS),
    .I_ARPROT(gmem_ARPROT),
    .I_ARUSER(gmem_ARUSER),
    .I_ARBURST(gmem_ARBURST),
    .I_ARREGION(gmem_ARREGION),
    .I_RVALID(gmem_RVALID),
    .I_RREADY(gmem_RREADY),
    .I_RDATA(gmem_RDATA),
    .I_RID(gmem_RID),
    .I_RUSER(gmem_RUSER),
    .I_RRESP(gmem_RRESP),
    .I_RLAST(gmem_RLAST),
    .I_AWVALID(gmem_AWVALID),
    .I_AWREADY(gmem_AWREADY),
    .I_AWADDR(grp_Write_C_buf_fu_296_m_axi_Out_ddr_AWADDR),
    .I_AWID(grp_Write_C_buf_fu_296_m_axi_Out_ddr_AWID),
    .I_AWLEN(grp_Write_C_buf_fu_296_m_axi_Out_ddr_AWLEN),
    .I_AWSIZE(grp_Write_C_buf_fu_296_m_axi_Out_ddr_AWSIZE),
    .I_AWLOCK(grp_Write_C_buf_fu_296_m_axi_Out_ddr_AWLOCK),
    .I_AWCACHE(grp_Write_C_buf_fu_296_m_axi_Out_ddr_AWCACHE),
    .I_AWQOS(grp_Write_C_buf_fu_296_m_axi_Out_ddr_AWQOS),
    .I_AWPROT(grp_Write_C_buf_fu_296_m_axi_Out_ddr_AWPROT),
    .I_AWUSER(grp_Write_C_buf_fu_296_m_axi_Out_ddr_AWUSER),
    .I_AWBURST(grp_Write_C_buf_fu_296_m_axi_Out_ddr_AWBURST),
    .I_AWREGION(grp_Write_C_buf_fu_296_m_axi_Out_ddr_AWREGION),
    .I_WVALID(gmem_WVALID),
    .I_WREADY(gmem_WREADY),
    .I_WDATA(grp_Write_C_buf_fu_296_m_axi_Out_ddr_WDATA),
    .I_WID(grp_Write_C_buf_fu_296_m_axi_Out_ddr_WID),
    .I_WUSER(grp_Write_C_buf_fu_296_m_axi_Out_ddr_WUSER),
    .I_WLAST(grp_Write_C_buf_fu_296_m_axi_Out_ddr_WLAST),
    .I_WSTRB(grp_Write_C_buf_fu_296_m_axi_Out_ddr_WSTRB),
    .I_BVALID(gmem_BVALID),
    .I_BREADY(gmem_BREADY),
    .I_BRESP(gmem_BRESP),
    .I_BID(gmem_BID),
    .I_BUSER(gmem_BUSER)
);

Systolic_Array_Coudo #(
    .DataWidth( 32 ),
    .AddressRange( 500 ),
    .AddressWidth( 9 ))
In_buffer_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(In_buffer_address0),
    .ce0(In_buffer_ce0),
    .we0(In_buffer_we0),
    .d0(grp_Read_In_buf_line_fu_275_In_buf_d0),
    .q0(In_buffer_q0),
    .address1(grp_PE_array_fu_246_In_buf_address1),
    .ce1(In_buffer_ce1),
    .q1(In_buffer_q1)
);

Systolic_Array_Coudo #(
    .DataWidth( 32 ),
    .AddressRange( 500 ),
    .AddressWidth( 9 ))
W_buffer_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(W_buffer_address0),
    .ce0(W_buffer_ce0),
    .we0(W_buffer_we0),
    .d0(grp_Read_W_buf_fu_311_W_d0),
    .q0(W_buffer_q0),
    .address1(grp_PE_array_fu_246_W_buf_address1),
    .ce1(W_buffer_ce1),
    .q1(W_buffer_q1)
);

Systolic_Array_CowdI #(
    .DataWidth( 32 ),
    .AddressRange( 500 ),
    .AddressWidth( 9 ))
Out_buffer_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(Out_buffer_address0),
    .ce0(Out_buffer_ce0),
    .we0(Out_buffer_we0),
    .d0(grp_PE_array_fu_246_Out_buf_d0),
    .q0(Out_buffer_q0),
    .address1(grp_Write_C_buf_fu_296_Out_buf_address1),
    .ce1(Out_buffer_ce1),
    .we1(Out_buffer_we1),
    .d1(grp_Write_C_buf_fu_296_Out_buf_d1)
);

PE_array grp_PE_array_fu_246(
    .In_buf_address0(grp_PE_array_fu_246_In_buf_address0),
    .In_buf_ce0(grp_PE_array_fu_246_In_buf_ce0),
    .In_buf_d0(grp_PE_array_fu_246_In_buf_d0),
    .In_buf_q0(In_buffer_q0),
    .In_buf_we0(grp_PE_array_fu_246_In_buf_we0),
    .In_buf_address1(grp_PE_array_fu_246_In_buf_address1),
    .In_buf_ce1(grp_PE_array_fu_246_In_buf_ce1),
    .In_buf_d1(grp_PE_array_fu_246_In_buf_d1),
    .In_buf_q1(In_buffer_q1),
    .In_buf_we1(grp_PE_array_fu_246_In_buf_we1),
    .W_buf_address0(grp_PE_array_fu_246_W_buf_address0),
    .W_buf_ce0(grp_PE_array_fu_246_W_buf_ce0),
    .W_buf_d0(grp_PE_array_fu_246_W_buf_d0),
    .W_buf_q0(W_buffer_q0),
    .W_buf_we0(grp_PE_array_fu_246_W_buf_we0),
    .W_buf_address1(grp_PE_array_fu_246_W_buf_address1),
    .W_buf_ce1(grp_PE_array_fu_246_W_buf_ce1),
    .W_buf_d1(grp_PE_array_fu_246_W_buf_d1),
    .W_buf_q1(W_buffer_q1),
    .W_buf_we1(grp_PE_array_fu_246_W_buf_we1),
    .Out_buf_address0(grp_PE_array_fu_246_Out_buf_address0),
    .Out_buf_ce0(grp_PE_array_fu_246_Out_buf_ce0),
    .Out_buf_d0(grp_PE_array_fu_246_Out_buf_d0),
    .Out_buf_q0(32'd0),
    .Out_buf_we0(grp_PE_array_fu_246_Out_buf_we0),
    .Out_buf_address1(grp_PE_array_fu_246_Out_buf_address1),
    .Out_buf_ce1(grp_PE_array_fu_246_Out_buf_ce1),
    .Out_buf_d1(grp_PE_array_fu_246_Out_buf_d1),
    .Out_buf_q1(32'd0),
    .Out_buf_we1(grp_PE_array_fu_246_Out_buf_we1),
    .row(Out_buf_row_load_1_reg_831),
    .cho(Out_buf_cho_load_reg_823),
    .p_c_s(p_c_s),
    .p_chin_s(p_chin_s),
    .p_k_s(p_k_s),
    .p_s_s(p_s_s),
    .In_buffer_start(In_buffer_start),
    .p_cin_s(p_cin_s),
    .In_buffer_length(In_buffer_length),
    .p_chout_s(p_chout_s),
    .p_r_s(p_r_s),
    .Out_buf_cho(Out_buf_cho),
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .row_ap_vld(1'b1),
    .cho_ap_vld(1'b1),
    .ap_start(grp_PE_array_fu_246_ap_start),
    .p_c_s_ap_vld(1'b1),
    .p_chin_s_ap_vld(1'b1),
    .p_k_s_ap_vld(1'b1),
    .p_s_s_ap_vld(1'b1),
    .In_buffer_start_ap_vld(1'b1),
    .p_cin_s_ap_vld(1'b1),
    .In_buffer_length_ap_vld(1'b1),
    .p_chout_s_ap_vld(1'b1),
    .p_r_s_ap_vld(1'b1),
    .Out_buf_cho_ap_vld(1'b1),
    .ap_done(grp_PE_array_fu_246_ap_done),
    .ap_ready(grp_PE_array_fu_246_ap_ready),
    .ap_idle(grp_PE_array_fu_246_ap_idle),
    .ap_continue(grp_PE_array_fu_246_ap_continue)
);

Read_In_buf_line grp_Read_In_buf_line_fu_275(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_Read_In_buf_line_fu_275_ap_start),
    .ap_done(grp_Read_In_buf_line_fu_275_ap_done),
    .ap_idle(grp_Read_In_buf_line_fu_275_ap_idle),
    .ap_ready(grp_Read_In_buf_line_fu_275_ap_ready),
    .In_buf_address0(grp_Read_In_buf_line_fu_275_In_buf_address0),
    .In_buf_ce0(grp_Read_In_buf_line_fu_275_In_buf_ce0),
    .In_buf_we0(grp_Read_In_buf_line_fu_275_In_buf_we0),
    .In_buf_d0(grp_Read_In_buf_line_fu_275_In_buf_d0),
    .m_axi_In_ddr_AWVALID(grp_Read_In_buf_line_fu_275_m_axi_In_ddr_AWVALID),
    .m_axi_In_ddr_AWREADY(1'b0),
    .m_axi_In_ddr_AWADDR(grp_Read_In_buf_line_fu_275_m_axi_In_ddr_AWADDR),
    .m_axi_In_ddr_AWID(grp_Read_In_buf_line_fu_275_m_axi_In_ddr_AWID),
    .m_axi_In_ddr_AWLEN(grp_Read_In_buf_line_fu_275_m_axi_In_ddr_AWLEN),
    .m_axi_In_ddr_AWSIZE(grp_Read_In_buf_line_fu_275_m_axi_In_ddr_AWSIZE),
    .m_axi_In_ddr_AWBURST(grp_Read_In_buf_line_fu_275_m_axi_In_ddr_AWBURST),
    .m_axi_In_ddr_AWLOCK(grp_Read_In_buf_line_fu_275_m_axi_In_ddr_AWLOCK),
    .m_axi_In_ddr_AWCACHE(grp_Read_In_buf_line_fu_275_m_axi_In_ddr_AWCACHE),
    .m_axi_In_ddr_AWPROT(grp_Read_In_buf_line_fu_275_m_axi_In_ddr_AWPROT),
    .m_axi_In_ddr_AWQOS(grp_Read_In_buf_line_fu_275_m_axi_In_ddr_AWQOS),
    .m_axi_In_ddr_AWREGION(grp_Read_In_buf_line_fu_275_m_axi_In_ddr_AWREGION),
    .m_axi_In_ddr_AWUSER(grp_Read_In_buf_line_fu_275_m_axi_In_ddr_AWUSER),
    .m_axi_In_ddr_WVALID(grp_Read_In_buf_line_fu_275_m_axi_In_ddr_WVALID),
    .m_axi_In_ddr_WREADY(1'b0),
    .m_axi_In_ddr_WDATA(grp_Read_In_buf_line_fu_275_m_axi_In_ddr_WDATA),
    .m_axi_In_ddr_WSTRB(grp_Read_In_buf_line_fu_275_m_axi_In_ddr_WSTRB),
    .m_axi_In_ddr_WLAST(grp_Read_In_buf_line_fu_275_m_axi_In_ddr_WLAST),
    .m_axi_In_ddr_WID(grp_Read_In_buf_line_fu_275_m_axi_In_ddr_WID),
    .m_axi_In_ddr_WUSER(grp_Read_In_buf_line_fu_275_m_axi_In_ddr_WUSER),
    .m_axi_In_ddr_ARVALID(grp_Read_In_buf_line_fu_275_m_axi_In_ddr_ARVALID),
    .m_axi_In_ddr_ARREADY(gmem_ARREADY),
    .m_axi_In_ddr_ARADDR(grp_Read_In_buf_line_fu_275_m_axi_In_ddr_ARADDR),
    .m_axi_In_ddr_ARID(grp_Read_In_buf_line_fu_275_m_axi_In_ddr_ARID),
    .m_axi_In_ddr_ARLEN(grp_Read_In_buf_line_fu_275_m_axi_In_ddr_ARLEN),
    .m_axi_In_ddr_ARSIZE(grp_Read_In_buf_line_fu_275_m_axi_In_ddr_ARSIZE),
    .m_axi_In_ddr_ARBURST(grp_Read_In_buf_line_fu_275_m_axi_In_ddr_ARBURST),
    .m_axi_In_ddr_ARLOCK(grp_Read_In_buf_line_fu_275_m_axi_In_ddr_ARLOCK),
    .m_axi_In_ddr_ARCACHE(grp_Read_In_buf_line_fu_275_m_axi_In_ddr_ARCACHE),
    .m_axi_In_ddr_ARPROT(grp_Read_In_buf_line_fu_275_m_axi_In_ddr_ARPROT),
    .m_axi_In_ddr_ARQOS(grp_Read_In_buf_line_fu_275_m_axi_In_ddr_ARQOS),
    .m_axi_In_ddr_ARREGION(grp_Read_In_buf_line_fu_275_m_axi_In_ddr_ARREGION),
    .m_axi_In_ddr_ARUSER(grp_Read_In_buf_line_fu_275_m_axi_In_ddr_ARUSER),
    .m_axi_In_ddr_RVALID(gmem_RVALID),
    .m_axi_In_ddr_RREADY(grp_Read_In_buf_line_fu_275_m_axi_In_ddr_RREADY),
    .m_axi_In_ddr_RDATA(gmem_RDATA),
    .m_axi_In_ddr_RLAST(gmem_RLAST),
    .m_axi_In_ddr_RID(gmem_RID),
    .m_axi_In_ddr_RUSER(gmem_RUSER),
    .m_axi_In_ddr_RRESP(gmem_RRESP),
    .m_axi_In_ddr_BVALID(1'b0),
    .m_axi_In_ddr_BREADY(grp_Read_In_buf_line_fu_275_m_axi_In_ddr_BREADY),
    .m_axi_In_ddr_BRESP(2'd0),
    .m_axi_In_ddr_BID(1'd0),
    .m_axi_In_ddr_BUSER(1'd0),
    .In_ddr_offset(In_ddr1_reg_772),
    .row(add_ln346_reg_818),
    .p_p_s(p_p_s),
    .p_cinp_s(p_cinp_s),
    .p_chin_s(p_chin_s),
    .In_buffer_end(In_buffer_end),
    .In_buffer_length(In_buffer_length),
    .p_rinp_s(p_rinp_s)
);

Write_C_buf grp_Write_C_buf_fu_296(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_Write_C_buf_fu_296_ap_start),
    .ap_done(grp_Write_C_buf_fu_296_ap_done),
    .ap_idle(grp_Write_C_buf_fu_296_ap_idle),
    .ap_ready(grp_Write_C_buf_fu_296_ap_ready),
    .Out_buf_address0(grp_Write_C_buf_fu_296_Out_buf_address0),
    .Out_buf_ce0(grp_Write_C_buf_fu_296_Out_buf_ce0),
    .Out_buf_q0(Out_buffer_q0),
    .Out_buf_address1(grp_Write_C_buf_fu_296_Out_buf_address1),
    .Out_buf_ce1(grp_Write_C_buf_fu_296_Out_buf_ce1),
    .Out_buf_we1(grp_Write_C_buf_fu_296_Out_buf_we1),
    .Out_buf_d1(grp_Write_C_buf_fu_296_Out_buf_d1),
    .m_axi_Out_ddr_AWVALID(grp_Write_C_buf_fu_296_m_axi_Out_ddr_AWVALID),
    .m_axi_Out_ddr_AWREADY(gmem_AWREADY),
    .m_axi_Out_ddr_AWADDR(grp_Write_C_buf_fu_296_m_axi_Out_ddr_AWADDR),
    .m_axi_Out_ddr_AWID(grp_Write_C_buf_fu_296_m_axi_Out_ddr_AWID),
    .m_axi_Out_ddr_AWLEN(grp_Write_C_buf_fu_296_m_axi_Out_ddr_AWLEN),
    .m_axi_Out_ddr_AWSIZE(grp_Write_C_buf_fu_296_m_axi_Out_ddr_AWSIZE),
    .m_axi_Out_ddr_AWBURST(grp_Write_C_buf_fu_296_m_axi_Out_ddr_AWBURST),
    .m_axi_Out_ddr_AWLOCK(grp_Write_C_buf_fu_296_m_axi_Out_ddr_AWLOCK),
    .m_axi_Out_ddr_AWCACHE(grp_Write_C_buf_fu_296_m_axi_Out_ddr_AWCACHE),
    .m_axi_Out_ddr_AWPROT(grp_Write_C_buf_fu_296_m_axi_Out_ddr_AWPROT),
    .m_axi_Out_ddr_AWQOS(grp_Write_C_buf_fu_296_m_axi_Out_ddr_AWQOS),
    .m_axi_Out_ddr_AWREGION(grp_Write_C_buf_fu_296_m_axi_Out_ddr_AWREGION),
    .m_axi_Out_ddr_AWUSER(grp_Write_C_buf_fu_296_m_axi_Out_ddr_AWUSER),
    .m_axi_Out_ddr_WVALID(grp_Write_C_buf_fu_296_m_axi_Out_ddr_WVALID),
    .m_axi_Out_ddr_WREADY(gmem_WREADY),
    .m_axi_Out_ddr_WDATA(grp_Write_C_buf_fu_296_m_axi_Out_ddr_WDATA),
    .m_axi_Out_ddr_WSTRB(grp_Write_C_buf_fu_296_m_axi_Out_ddr_WSTRB),
    .m_axi_Out_ddr_WLAST(grp_Write_C_buf_fu_296_m_axi_Out_ddr_WLAST),
    .m_axi_Out_ddr_WID(grp_Write_C_buf_fu_296_m_axi_Out_ddr_WID),
    .m_axi_Out_ddr_WUSER(grp_Write_C_buf_fu_296_m_axi_Out_ddr_WUSER),
    .m_axi_Out_ddr_ARVALID(grp_Write_C_buf_fu_296_m_axi_Out_ddr_ARVALID),
    .m_axi_Out_ddr_ARREADY(1'b0),
    .m_axi_Out_ddr_ARADDR(grp_Write_C_buf_fu_296_m_axi_Out_ddr_ARADDR),
    .m_axi_Out_ddr_ARID(grp_Write_C_buf_fu_296_m_axi_Out_ddr_ARID),
    .m_axi_Out_ddr_ARLEN(grp_Write_C_buf_fu_296_m_axi_Out_ddr_ARLEN),
    .m_axi_Out_ddr_ARSIZE(grp_Write_C_buf_fu_296_m_axi_Out_ddr_ARSIZE),
    .m_axi_Out_ddr_ARBURST(grp_Write_C_buf_fu_296_m_axi_Out_ddr_ARBURST),
    .m_axi_Out_ddr_ARLOCK(grp_Write_C_buf_fu_296_m_axi_Out_ddr_ARLOCK),
    .m_axi_Out_ddr_ARCACHE(grp_Write_C_buf_fu_296_m_axi_Out_ddr_ARCACHE),
    .m_axi_Out_ddr_ARPROT(grp_Write_C_buf_fu_296_m_axi_Out_ddr_ARPROT),
    .m_axi_Out_ddr_ARQOS(grp_Write_C_buf_fu_296_m_axi_Out_ddr_ARQOS),
    .m_axi_Out_ddr_ARREGION(grp_Write_C_buf_fu_296_m_axi_Out_ddr_ARREGION),
    .m_axi_Out_ddr_ARUSER(grp_Write_C_buf_fu_296_m_axi_Out_ddr_ARUSER),
    .m_axi_Out_ddr_RVALID(1'b0),
    .m_axi_Out_ddr_RREADY(grp_Write_C_buf_fu_296_m_axi_Out_ddr_RREADY),
    .m_axi_Out_ddr_RDATA(32'd0),
    .m_axi_Out_ddr_RLAST(1'b0),
    .m_axi_Out_ddr_RID(1'd0),
    .m_axi_Out_ddr_RUSER(1'd0),
    .m_axi_Out_ddr_RRESP(2'd0),
    .m_axi_Out_ddr_BVALID(gmem_BVALID),
    .m_axi_Out_ddr_BREADY(grp_Write_C_buf_fu_296_m_axi_Out_ddr_BREADY),
    .m_axi_Out_ddr_BRESP(gmem_BRESP),
    .m_axi_Out_ddr_BID(gmem_BID),
    .m_axi_Out_ddr_BUSER(gmem_BUSER),
    .Out_ddr_offset(Out_ddr5_reg_762),
    .Out_ddr_offset1(p_0_rec_reg_212),
    .row(select_ln358_reg_836),
    .p_c_s(p_c_s),
    .p_chout_s(p_chout_s)
);

Read_W_buf grp_Read_W_buf_fu_311(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_Read_W_buf_fu_311_ap_start),
    .ap_done(grp_Read_W_buf_fu_311_ap_done),
    .ap_idle(grp_Read_W_buf_fu_311_ap_idle),
    .ap_ready(grp_Read_W_buf_fu_311_ap_ready),
    .W_address0(grp_Read_W_buf_fu_311_W_address0),
    .W_ce0(grp_Read_W_buf_fu_311_W_ce0),
    .W_we0(grp_Read_W_buf_fu_311_W_we0),
    .W_d0(grp_Read_W_buf_fu_311_W_d0),
    .m_axi_W_ddr_AWVALID(grp_Read_W_buf_fu_311_m_axi_W_ddr_AWVALID),
    .m_axi_W_ddr_AWREADY(1'b0),
    .m_axi_W_ddr_AWADDR(grp_Read_W_buf_fu_311_m_axi_W_ddr_AWADDR),
    .m_axi_W_ddr_AWID(grp_Read_W_buf_fu_311_m_axi_W_ddr_AWID),
    .m_axi_W_ddr_AWLEN(grp_Read_W_buf_fu_311_m_axi_W_ddr_AWLEN),
    .m_axi_W_ddr_AWSIZE(grp_Read_W_buf_fu_311_m_axi_W_ddr_AWSIZE),
    .m_axi_W_ddr_AWBURST(grp_Read_W_buf_fu_311_m_axi_W_ddr_AWBURST),
    .m_axi_W_ddr_AWLOCK(grp_Read_W_buf_fu_311_m_axi_W_ddr_AWLOCK),
    .m_axi_W_ddr_AWCACHE(grp_Read_W_buf_fu_311_m_axi_W_ddr_AWCACHE),
    .m_axi_W_ddr_AWPROT(grp_Read_W_buf_fu_311_m_axi_W_ddr_AWPROT),
    .m_axi_W_ddr_AWQOS(grp_Read_W_buf_fu_311_m_axi_W_ddr_AWQOS),
    .m_axi_W_ddr_AWREGION(grp_Read_W_buf_fu_311_m_axi_W_ddr_AWREGION),
    .m_axi_W_ddr_AWUSER(grp_Read_W_buf_fu_311_m_axi_W_ddr_AWUSER),
    .m_axi_W_ddr_WVALID(grp_Read_W_buf_fu_311_m_axi_W_ddr_WVALID),
    .m_axi_W_ddr_WREADY(1'b0),
    .m_axi_W_ddr_WDATA(grp_Read_W_buf_fu_311_m_axi_W_ddr_WDATA),
    .m_axi_W_ddr_WSTRB(grp_Read_W_buf_fu_311_m_axi_W_ddr_WSTRB),
    .m_axi_W_ddr_WLAST(grp_Read_W_buf_fu_311_m_axi_W_ddr_WLAST),
    .m_axi_W_ddr_WID(grp_Read_W_buf_fu_311_m_axi_W_ddr_WID),
    .m_axi_W_ddr_WUSER(grp_Read_W_buf_fu_311_m_axi_W_ddr_WUSER),
    .m_axi_W_ddr_ARVALID(grp_Read_W_buf_fu_311_m_axi_W_ddr_ARVALID),
    .m_axi_W_ddr_ARREADY(gmem_ARREADY),
    .m_axi_W_ddr_ARADDR(grp_Read_W_buf_fu_311_m_axi_W_ddr_ARADDR),
    .m_axi_W_ddr_ARID(grp_Read_W_buf_fu_311_m_axi_W_ddr_ARID),
    .m_axi_W_ddr_ARLEN(grp_Read_W_buf_fu_311_m_axi_W_ddr_ARLEN),
    .m_axi_W_ddr_ARSIZE(grp_Read_W_buf_fu_311_m_axi_W_ddr_ARSIZE),
    .m_axi_W_ddr_ARBURST(grp_Read_W_buf_fu_311_m_axi_W_ddr_ARBURST),
    .m_axi_W_ddr_ARLOCK(grp_Read_W_buf_fu_311_m_axi_W_ddr_ARLOCK),
    .m_axi_W_ddr_ARCACHE(grp_Read_W_buf_fu_311_m_axi_W_ddr_ARCACHE),
    .m_axi_W_ddr_ARPROT(grp_Read_W_buf_fu_311_m_axi_W_ddr_ARPROT),
    .m_axi_W_ddr_ARQOS(grp_Read_W_buf_fu_311_m_axi_W_ddr_ARQOS),
    .m_axi_W_ddr_ARREGION(grp_Read_W_buf_fu_311_m_axi_W_ddr_ARREGION),
    .m_axi_W_ddr_ARUSER(grp_Read_W_buf_fu_311_m_axi_W_ddr_ARUSER),
    .m_axi_W_ddr_RVALID(gmem_RVALID),
    .m_axi_W_ddr_RREADY(grp_Read_W_buf_fu_311_m_axi_W_ddr_RREADY),
    .m_axi_W_ddr_RDATA(gmem_RDATA),
    .m_axi_W_ddr_RLAST(gmem_RLAST),
    .m_axi_W_ddr_RID(gmem_RID),
    .m_axi_W_ddr_RUSER(gmem_RUSER),
    .m_axi_W_ddr_RRESP(gmem_RRESP),
    .m_axi_W_ddr_BVALID(1'b0),
    .m_axi_W_ddr_BREADY(grp_Read_W_buf_fu_311_m_axi_W_ddr_BREADY),
    .m_axi_W_ddr_BRESP(2'd0),
    .m_axi_W_ddr_BID(1'd0),
    .m_axi_W_ddr_BUSER(1'd0),
    .W_ddr_offset(W_ddr3_reg_767),
    .length_r(mul_ln336_2_reg_777)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_grp_PE_array_fu_246_ap_done <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_state9_on_subcall_done) & (1'b1 == ap_CS_fsm_state9))) begin
            ap_sync_reg_grp_PE_array_fu_246_ap_done <= 1'b0;
        end else if ((grp_PE_array_fu_246_ap_done == 1'b1)) begin
            ap_sync_reg_grp_PE_array_fu_246_ap_done <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_grp_PE_array_fu_246_ap_ready <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_state9_on_subcall_done) & (1'b1 == ap_CS_fsm_state9))) begin
            ap_sync_reg_grp_PE_array_fu_246_ap_ready <= 1'b0;
        end else if ((grp_PE_array_fu_246_ap_ready == 1'b1)) begin
            ap_sync_reg_grp_PE_array_fu_246_ap_ready <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_PE_array_fu_246_ap_start_reg <= 1'b0;
    end else begin
        if ((((ap_sync_grp_PE_array_fu_246_ap_ready == 1'b0) & (1'b1 == ap_CS_fsm_state9)) | ((icmp_ln351_fu_637_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8)))) begin
            grp_PE_array_fu_246_ap_start_reg <= 1'b1;
        end else if ((grp_PE_array_fu_246_ap_ready == 1'b1)) begin
            grp_PE_array_fu_246_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_Read_In_buf_line_fu_275_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln344_fu_591_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
            grp_Read_In_buf_line_fu_275_ap_start_reg <= 1'b1;
        end else if ((grp_Read_In_buf_line_fu_275_ap_ready == 1'b1)) begin
            grp_Read_In_buf_line_fu_275_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_Read_W_buf_fu_311_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state2)) begin
            grp_Read_W_buf_fu_311_ap_start_reg <= 1'b1;
        end else if ((grp_Read_W_buf_fu_311_ap_ready == 1'b1)) begin
            grp_Read_W_buf_fu_311_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_Write_C_buf_fu_296_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln351_fu_637_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
            grp_Write_C_buf_fu_296_ap_start_reg <= 1'b1;
        end else if ((grp_Write_C_buf_fu_296_ap_ready == 1'b1)) begin
            grp_Write_C_buf_fu_296_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        In_buffer_end <= add_ln347_fu_621_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        In_buffer_end <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln351_fu_637_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        In_buffer_start <= sub_ln365_fu_722_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        In_buffer_start <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        Out_buf_cho <= add_ln354_fu_734_p2;
    end else if (((icmp_ln344_fu_591_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        Out_buf_cho <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        i_0_reg_235 <= i_reg_813;
    end else if (((icmp_ln340_fu_572_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        i_0_reg_235 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_Write_C_buf_fu_296_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
        p_0_rec_reg_212 <= add_ln360_reg_841;
    end else if (((grp_Read_W_buf_fu_311_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        p_0_rec_reg_212 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_Write_C_buf_fu_296_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
        reuse_row_count_0_reg_224 <= reuse_row_count_reg_792;
    end else if (((grp_Read_W_buf_fu_311_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        reuse_row_count_0_reg_224 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln351_fu_637_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        In_buf_row <= add_ln362_fu_700_p2;
        Out_buf_row_count <= select_ln358_fu_655_p3;
        add_ln360_reg_841 <= add_ln360_fu_694_p2;
        select_ln358_reg_836 <= select_ln358_fu_655_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        In_buffer_length <= mul_ln332_1_fu_464_p2;
        In_ddr1_reg_772 <= {{In_ddr[31:2]}};
        Out_ddr5_reg_762 <= {{Out_ddr[31:2]}};
        W_ddr3_reg_767 <= {{W_ddr[31:2]}};
        mul_ln336_2_reg_777 <= mul_ln336_2_fu_500_p2;
        p_chin_s <= CHin;
        p_chout_s <= CHout;
        p_cin_s <= Cin;
        p_cinp_s <= add_ln325_fu_428_p2;
        p_k_s <= K;
        p_p_s <= padding;
        p_rinp_s <= add_ln324_fu_416_p2;
        p_s_s <= stride;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        Out_buf_cho_load_reg_823 <= Out_buf_cho;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_Write_C_buf_fu_296_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
        Out_buf_row <= add_ln361_fu_750_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln351_fu_637_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        Out_buf_row_load_1_reg_831 <= Out_buf_row;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_Read_W_buf_fu_311_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        add_ln337_reg_787 <= add_ln337_fu_538_p2;
        flush_row_count_reg_782[31 : 2] <= flush_row_count_fu_522_p2[31 : 2];
        p_c_s <= C;
        p_r_s <= R;
        reuse_row_count_reg_792 <= reuse_row_count_fu_560_p3;
        zext_ln364_reg_797[30 : 0] <= zext_ln364_fu_568_p1[30 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln344_fu_591_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        add_ln346_reg_818 <= add_ln346_fu_602_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        i_reg_813 <= i_fu_596_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln340_fu_572_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        new_read_row_count_reg_805 <= new_read_row_count_fu_582_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        In_buffer_address0 = grp_Read_In_buf_line_fu_275_In_buf_address0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        In_buffer_address0 = grp_PE_array_fu_246_In_buf_address0;
    end else begin
        In_buffer_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        In_buffer_ce0 = grp_Read_In_buf_line_fu_275_In_buf_ce0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        In_buffer_ce0 = grp_PE_array_fu_246_In_buf_ce0;
    end else begin
        In_buffer_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        In_buffer_ce1 = grp_PE_array_fu_246_In_buf_ce1;
    end else begin
        In_buffer_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        In_buffer_we0 = grp_Read_In_buf_line_fu_275_In_buf_we0;
    end else begin
        In_buffer_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        Out_buffer_address0 = grp_Write_C_buf_fu_296_Out_buf_address0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        Out_buffer_address0 = grp_PE_array_fu_246_Out_buf_address0;
    end else begin
        Out_buffer_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        Out_buffer_ce0 = grp_Write_C_buf_fu_296_Out_buf_ce0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        Out_buffer_ce0 = grp_PE_array_fu_246_Out_buf_ce0;
    end else begin
        Out_buffer_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        Out_buffer_ce1 = grp_Write_C_buf_fu_296_Out_buf_ce1;
    end else begin
        Out_buffer_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        Out_buffer_we0 = grp_PE_array_fu_246_Out_buf_we0;
    end else begin
        Out_buffer_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        Out_buffer_we1 = grp_Write_C_buf_fu_296_Out_buf_we1;
    end else begin
        Out_buffer_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        W_buffer_address0 = grp_Read_W_buf_fu_311_W_address0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        W_buffer_address0 = grp_PE_array_fu_246_W_buf_address0;
    end else begin
        W_buffer_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        W_buffer_ce0 = grp_Read_W_buf_fu_311_W_ce0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        W_buffer_ce0 = grp_PE_array_fu_246_W_buf_ce0;
    end else begin
        W_buffer_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        W_buffer_ce1 = grp_PE_array_fu_246_W_buf_ce1;
    end else begin
        W_buffer_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        W_buffer_we0 = grp_Read_W_buf_fu_311_W_we0;
    end else begin
        W_buffer_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln340_fu_572_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln340_fu_572_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state3))) begin
        gmem_ARADDR = grp_Read_W_buf_fu_311_m_axi_W_ddr_ARADDR;
    end else if (((1'b1 == ap_CS_fsm_state6) | ((icmp_ln344_fu_591_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5)))) begin
        gmem_ARADDR = grp_Read_In_buf_line_fu_275_m_axi_In_ddr_ARADDR;
    end else begin
        gmem_ARADDR = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state3))) begin
        gmem_ARBURST = grp_Read_W_buf_fu_311_m_axi_W_ddr_ARBURST;
    end else if (((1'b1 == ap_CS_fsm_state6) | ((icmp_ln344_fu_591_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5)))) begin
        gmem_ARBURST = grp_Read_In_buf_line_fu_275_m_axi_In_ddr_ARBURST;
    end else begin
        gmem_ARBURST = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state3))) begin
        gmem_ARCACHE = grp_Read_W_buf_fu_311_m_axi_W_ddr_ARCACHE;
    end else if (((1'b1 == ap_CS_fsm_state6) | ((icmp_ln344_fu_591_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5)))) begin
        gmem_ARCACHE = grp_Read_In_buf_line_fu_275_m_axi_In_ddr_ARCACHE;
    end else begin
        gmem_ARCACHE = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state3))) begin
        gmem_ARID = grp_Read_W_buf_fu_311_m_axi_W_ddr_ARID;
    end else if (((1'b1 == ap_CS_fsm_state6) | ((icmp_ln344_fu_591_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5)))) begin
        gmem_ARID = grp_Read_In_buf_line_fu_275_m_axi_In_ddr_ARID;
    end else begin
        gmem_ARID = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state3))) begin
        gmem_ARLEN = grp_Read_W_buf_fu_311_m_axi_W_ddr_ARLEN;
    end else if (((1'b1 == ap_CS_fsm_state6) | ((icmp_ln344_fu_591_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5)))) begin
        gmem_ARLEN = grp_Read_In_buf_line_fu_275_m_axi_In_ddr_ARLEN;
    end else begin
        gmem_ARLEN = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state3))) begin
        gmem_ARLOCK = grp_Read_W_buf_fu_311_m_axi_W_ddr_ARLOCK;
    end else if (((1'b1 == ap_CS_fsm_state6) | ((icmp_ln344_fu_591_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5)))) begin
        gmem_ARLOCK = grp_Read_In_buf_line_fu_275_m_axi_In_ddr_ARLOCK;
    end else begin
        gmem_ARLOCK = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state3))) begin
        gmem_ARPROT = grp_Read_W_buf_fu_311_m_axi_W_ddr_ARPROT;
    end else if (((1'b1 == ap_CS_fsm_state6) | ((icmp_ln344_fu_591_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5)))) begin
        gmem_ARPROT = grp_Read_In_buf_line_fu_275_m_axi_In_ddr_ARPROT;
    end else begin
        gmem_ARPROT = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state3))) begin
        gmem_ARQOS = grp_Read_W_buf_fu_311_m_axi_W_ddr_ARQOS;
    end else if (((1'b1 == ap_CS_fsm_state6) | ((icmp_ln344_fu_591_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5)))) begin
        gmem_ARQOS = grp_Read_In_buf_line_fu_275_m_axi_In_ddr_ARQOS;
    end else begin
        gmem_ARQOS = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state3))) begin
        gmem_ARREGION = grp_Read_W_buf_fu_311_m_axi_W_ddr_ARREGION;
    end else if (((1'b1 == ap_CS_fsm_state6) | ((icmp_ln344_fu_591_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5)))) begin
        gmem_ARREGION = grp_Read_In_buf_line_fu_275_m_axi_In_ddr_ARREGION;
    end else begin
        gmem_ARREGION = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state3))) begin
        gmem_ARSIZE = grp_Read_W_buf_fu_311_m_axi_W_ddr_ARSIZE;
    end else if (((1'b1 == ap_CS_fsm_state6) | ((icmp_ln344_fu_591_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5)))) begin
        gmem_ARSIZE = grp_Read_In_buf_line_fu_275_m_axi_In_ddr_ARSIZE;
    end else begin
        gmem_ARSIZE = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state3))) begin
        gmem_ARUSER = grp_Read_W_buf_fu_311_m_axi_W_ddr_ARUSER;
    end else if (((1'b1 == ap_CS_fsm_state6) | ((icmp_ln344_fu_591_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5)))) begin
        gmem_ARUSER = grp_Read_In_buf_line_fu_275_m_axi_In_ddr_ARUSER;
    end else begin
        gmem_ARUSER = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state3))) begin
        gmem_ARVALID = grp_Read_W_buf_fu_311_m_axi_W_ddr_ARVALID;
    end else if (((1'b1 == ap_CS_fsm_state6) | ((icmp_ln344_fu_591_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5)))) begin
        gmem_ARVALID = grp_Read_In_buf_line_fu_275_m_axi_In_ddr_ARVALID;
    end else begin
        gmem_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | ((icmp_ln351_fu_637_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8)))) begin
        gmem_AWVALID = grp_Write_C_buf_fu_296_m_axi_Out_ddr_AWVALID;
    end else begin
        gmem_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | ((icmp_ln351_fu_637_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8)))) begin
        gmem_BREADY = grp_Write_C_buf_fu_296_m_axi_Out_ddr_BREADY;
    end else begin
        gmem_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state3))) begin
        gmem_RREADY = grp_Read_W_buf_fu_311_m_axi_W_ddr_RREADY;
    end else if (((1'b1 == ap_CS_fsm_state6) | ((icmp_ln344_fu_591_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5)))) begin
        gmem_RREADY = grp_Read_In_buf_line_fu_275_m_axi_In_ddr_RREADY;
    end else begin
        gmem_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | ((icmp_ln351_fu_637_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8)))) begin
        gmem_WVALID = grp_Write_C_buf_fu_296_m_axi_Out_ddr_WVALID;
    end else begin
        gmem_WVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state9_on_subcall_done) & (1'b1 == ap_CS_fsm_state9))) begin
        grp_PE_array_fu_246_ap_continue = 1'b1;
    end else begin
        grp_PE_array_fu_246_ap_continue = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((grp_Read_W_buf_fu_311_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((icmp_ln340_fu_572_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((icmp_ln344_fu_591_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((grp_Read_In_buf_line_fu_275_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state8 : begin
            if (((icmp_ln351_fu_637_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((1'b0 == ap_block_state9_on_subcall_done) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state11 : begin
            if (((grp_Write_C_buf_fu_296_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln324_fu_416_p2 = (Rin + padding);

assign add_ln325_fu_428_p0 = Cin;

assign add_ln325_fu_428_p2 = ($signed(add_ln325_fu_428_p0) + $signed(padding));

assign add_ln332_fu_452_p1 = K;

assign add_ln332_fu_452_p2 = ($signed(sub_ln332_fu_446_p2) + $signed(add_ln332_fu_452_p1));

assign add_ln337_fu_538_p2 = (sub_ln337_fu_528_p2 + p_k_s);

assign add_ln346_fu_602_p2 = (zext_ln344_fu_587_p1 + In_buf_row);

assign add_ln347_fu_621_p2 = (mul_ln347_fu_615_p2 + In_buffer_end);

assign add_ln354_fu_734_p2 = (Out_buf_cho + 32'd4);

assign add_ln360_fu_694_p2 = ($signed(sext_ln360_fu_690_p1) + $signed(p_0_rec_reg_212));

assign add_ln361_fu_750_p2 = (Out_buf_row + Out_buf_row_count);

assign add_ln362_fu_700_p2 = (In_buf_row + flush_row_count_reg_782);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state9_on_subcall_done = ((ap_sync_grp_PE_array_fu_246_ap_ready & ap_sync_grp_PE_array_fu_246_ap_done) == 1'b0);
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ap_sync_grp_PE_array_fu_246_ap_done = (grp_PE_array_fu_246_ap_done | ap_sync_reg_grp_PE_array_fu_246_ap_done);

assign ap_sync_grp_PE_array_fu_246_ap_ready = (grp_PE_array_fu_246_ap_ready | ap_sync_reg_grp_PE_array_fu_246_ap_ready);

assign flush_row_count_fu_522_p2 = p_s_s << 32'd2;

assign grp_PE_array_fu_246_ap_start = grp_PE_array_fu_246_ap_start_reg;

assign grp_Read_In_buf_line_fu_275_ap_start = grp_Read_In_buf_line_fu_275_ap_start_reg;

assign grp_Read_W_buf_fu_311_ap_start = grp_Read_W_buf_fu_311_ap_start_reg;

assign grp_Write_C_buf_fu_296_ap_start = grp_Write_C_buf_fu_296_ap_start_reg;

assign i_fu_596_p2 = (i_0_reg_235 + 31'd1);

assign icmp_ln340_fu_572_p2 = (($signed(Out_buf_row) < $signed(p_r_s)) ? 1'b1 : 1'b0);

assign icmp_ln344_fu_591_p2 = (($signed(zext_ln344_fu_587_p1) < $signed(new_read_row_count_reg_805)) ? 1'b1 : 1'b0);

assign icmp_ln351_fu_637_p2 = (($signed(Out_buf_cho) < $signed(p_chout_s)) ? 1'b1 : 1'b0);

assign icmp_ln358_fu_649_p2 = (($signed(sub_ln358_fu_643_p2) > $signed(32'd4)) ? 1'b1 : 1'b0);

assign icmp_ln364_fu_554_p2 = (($signed(sub_ln364_fu_544_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign mul_ln332_1_fu_464_p1 = Cin;

assign mul_ln332_1_fu_464_p2 = ($signed(mul_ln332_fu_458_p2) * $signed(mul_ln332_1_fu_464_p1));

assign mul_ln332_fu_458_p1 = CHin;

assign mul_ln332_fu_458_p2 = ($signed(add_ln332_fu_452_p2) * $signed(mul_ln332_fu_458_p1));

assign mul_ln336_1_fu_494_p0 = K;

assign mul_ln336_1_fu_494_p1 = K;

assign mul_ln336_1_fu_494_p2 = ($signed(mul_ln336_1_fu_494_p0) * $signed(mul_ln336_1_fu_494_p1));

assign mul_ln336_2_fu_500_p2 = ($signed(mul_ln336_fu_488_p2) * $signed(mul_ln336_1_fu_494_p2));

assign mul_ln336_fu_488_p0 = CHout;

assign mul_ln336_fu_488_p1 = CHin;

assign mul_ln336_fu_488_p2 = ($signed(mul_ln336_fu_488_p0) * $signed(mul_ln336_fu_488_p1));

assign mul_ln347_fu_615_p0 = p_cinp_s;

assign mul_ln347_fu_615_p1 = p_chin_s;

assign mul_ln347_fu_615_p2 = ($signed(mul_ln347_fu_615_p0) * $signed(mul_ln347_fu_615_p1));

assign mul_ln360_fu_678_p0 = p_chout_s;

assign mul_ln360_fu_678_p1 = p_c_s;

assign mul_ln360_fu_678_p2 = ($signed(mul_ln360_fu_678_p0) * $signed(mul_ln360_fu_678_p1));

assign mul_ln365_1_fu_716_p1 = p_chin_s;

assign mul_ln365_1_fu_716_p2 = ($signed(mul_ln365_fu_711_p2) * $signed(mul_ln365_1_fu_716_p1));

assign mul_ln365_fu_711_p0 = p_cinp_s;

assign mul_ln365_fu_711_p1 = zext_ln364_reg_797;

assign mul_ln365_fu_711_p2 = ($signed(mul_ln365_fu_711_p0) * $signed({{1'b0}, {mul_ln365_fu_711_p1}}));

assign new_read_row_count_fu_582_p2 = (add_ln337_reg_787 - zext_ln340_fu_578_p1);

assign reuse_row_count_fu_560_p3 = ((icmp_ln364_fu_554_p2[0:0] === 1'b1) ? trunc_ln364_fu_550_p1 : 31'd0);

assign select_ln358_fu_655_p3 = ((icmp_ln358_fu_649_p2[0:0] === 1'b1) ? 32'd4 : sub_ln358_fu_643_p2);

assign sext_ln360_fu_690_p1 = $signed(shl_ln360_fu_684_p2);

assign shl_ln332_fu_440_p2 = stride << 32'd2;

assign shl_ln360_fu_684_p2 = mul_ln360_fu_678_p2 << 32'd2;

assign sub_ln332_fu_446_p2 = (shl_ln332_fu_440_p2 - stride);

assign sub_ln337_fu_528_p2 = (flush_row_count_fu_522_p2 - p_s_s);

assign sub_ln358_fu_643_p2 = (p_r_s - Out_buf_row);

assign sub_ln364_fu_544_p2 = (add_ln337_fu_538_p2 - flush_row_count_fu_522_p2);

assign sub_ln365_fu_722_p2 = (In_buffer_end - mul_ln365_1_fu_716_p2);

assign trunc_ln364_fu_550_p1 = sub_ln364_fu_544_p2[30:0];

assign zext_ln340_fu_578_p1 = reuse_row_count_0_reg_224;

assign zext_ln344_fu_587_p1 = i_0_reg_235;

assign zext_ln364_fu_568_p1 = reuse_row_count_fu_560_p3;

always @ (posedge ap_clk) begin
    flush_row_count_reg_782[1:0] <= 2'b00;
    zext_ln364_reg_797[31] <= 1'b0;
end

endmodule //Systolic_Array_Conv
