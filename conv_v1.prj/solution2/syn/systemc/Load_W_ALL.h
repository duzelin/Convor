// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _Load_W_ALL_HH_
#define _Load_W_ALL_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct Load_W_ALL : public sc_module {
    // Port declarations 40
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_in< sc_logic > start_full_n;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > start_out;
    sc_out< sc_logic > start_write;
    sc_in< sc_lv<32> > cho_dout;
    sc_in< sc_logic > cho_empty_n;
    sc_out< sc_logic > cho_read;
    sc_out< sc_lv<9> > W_buf_address0;
    sc_out< sc_logic > W_buf_ce0;
    sc_in< sc_lv<32> > W_buf_q0;
    sc_out< sc_lv<9> > W_buf_address1;
    sc_out< sc_logic > W_buf_ce1;
    sc_in< sc_lv<32> > W_buf_q1;
    sc_out< sc_lv<32> > W_next_0_0_V_din;
    sc_in< sc_logic > W_next_0_0_V_full_n;
    sc_out< sc_logic > W_next_0_0_V_write;
    sc_out< sc_lv<32> > W_next_0_1_V_din;
    sc_in< sc_logic > W_next_0_1_V_full_n;
    sc_out< sc_logic > W_next_0_1_V_write;
    sc_out< sc_lv<32> > W_next_0_2_V_din;
    sc_in< sc_logic > W_next_0_2_V_full_n;
    sc_out< sc_logic > W_next_0_2_V_write;
    sc_out< sc_lv<32> > W_next_0_3_V_din;
    sc_in< sc_logic > W_next_0_3_V_full_n;
    sc_out< sc_logic > W_next_0_3_V_write;
    sc_in< sc_lv<32> > p_c_s_dout;
    sc_in< sc_logic > p_c_s_empty_n;
    sc_out< sc_logic > p_c_s_read;
    sc_in< sc_lv<32> > p_chin_s_dout;
    sc_in< sc_logic > p_chin_s_empty_n;
    sc_out< sc_logic > p_chin_s_read;
    sc_in< sc_lv<32> > p_k_s_dout;
    sc_in< sc_logic > p_k_s_empty_n;
    sc_out< sc_logic > p_k_s_read;


    // Module declarations
    Load_W_ALL(sc_module_name name);
    SC_HAS_PROCESS(Load_W_ALL);

    ~Load_W_ALL();

    sc_trace_file* mVcdFile;

    sc_signal< sc_logic > real_start;
    sc_signal< sc_logic > start_once_reg;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<6> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > internal_ap_ready;
    sc_signal< sc_logic > cho_blk_n;
    sc_signal< sc_logic > W_next_0_0_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp0_stage1;
    sc_signal< sc_lv<1> > icmp_ln69_reg_744;
    sc_signal< sc_lv<1> > icmp_ln69_reg_744_pp0_iter1_reg;
    sc_signal< sc_logic > W_next_0_1_V_blk_n;
    sc_signal< sc_logic > W_next_0_2_V_blk_n;
    sc_signal< sc_logic > W_next_0_3_V_blk_n;
    sc_signal< sc_logic > p_c_s_blk_n;
    sc_signal< sc_logic > p_chin_s_blk_n;
    sc_signal< sc_logic > p_k_s_blk_n;
    sc_signal< sc_lv<128> > indvar_flatten58_reg_177;
    sc_signal< sc_lv<96> > indvar_flatten21_reg_189;
    sc_signal< sc_lv<31> > chi_0_i_i_reg_200;
    sc_signal< sc_lv<64> > indvar_flatten_reg_211;
    sc_signal< sc_lv<32> > kc_0_i_i_reg_222;
    sc_signal< sc_lv<31> > kr_0_i_i_reg_233;
    sc_signal< sc_lv<32> > cho_read_reg_648;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<32> > p_c_read_reg_656;
    sc_signal< sc_lv<32> > p_chin_read_reg_661;
    sc_signal< sc_lv<32> > p_k_read_reg_668;
    sc_signal< sc_lv<10> > trunc_ln78_1_fu_244_p1;
    sc_signal< sc_lv<10> > trunc_ln78_1_reg_685;
    sc_signal< sc_lv<10> > trunc_ln78_fu_262_p1;
    sc_signal< sc_lv<10> > trunc_ln78_reg_691;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<10> > trunc_ln78_2_fu_286_p1;
    sc_signal< sc_lv<10> > trunc_ln78_2_reg_696;
    sc_signal< sc_lv<10> > trunc_ln78_3_fu_306_p1;
    sc_signal< sc_lv<10> > trunc_ln78_3_reg_701;
    sc_signal< sc_lv<10> > trunc_ln78_4_fu_326_p1;
    sc_signal< sc_lv<10> > trunc_ln78_4_reg_706;
    sc_signal< sc_lv<64> > bound_fu_333_p2;
    sc_signal< sc_lv<64> > bound_reg_711;
    sc_signal< sc_lv<96> > bound4_fu_346_p2;
    sc_signal< sc_lv<96> > bound4_reg_717;
    sc_signal< sc_lv<128> > bound26_fu_358_p2;
    sc_signal< sc_lv<128> > bound26_reg_723;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > icmp_ln75_fu_364_p2;
    sc_signal< sc_lv<1> > icmp_ln75_reg_728;
    sc_signal< sc_lv<1> > icmp_ln73_fu_369_p2;
    sc_signal< sc_lv<1> > icmp_ln73_reg_734;
    sc_signal< sc_lv<10> > trunc_ln78_5_fu_388_p1;
    sc_signal< sc_lv<10> > trunc_ln78_5_reg_739;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state6_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > icmp_ln69_fu_392_p2;
    sc_signal< sc_lv<1> > icmp_ln71_fu_397_p2;
    sc_signal< sc_lv<1> > icmp_ln71_reg_748;
    sc_signal< sc_lv<31> > select_ln71_fu_402_p3;
    sc_signal< sc_lv<31> > select_ln71_reg_754;
    sc_signal< sc_lv<1> > select_ln71_3_fu_427_p3;
    sc_signal< sc_lv<1> > select_ln71_3_reg_759;
    sc_signal< sc_lv<31> > chi_fu_434_p2;
    sc_signal< sc_lv<31> > chi_reg_765;
    sc_signal< sc_lv<1> > or_ln71_fu_444_p2;
    sc_signal< sc_lv<1> > or_ln71_reg_770;
    sc_signal< sc_lv<32> > mul_ln78_13_fu_450_p2;
    sc_signal< sc_lv<32> > mul_ln78_13_reg_777;
    sc_signal< sc_lv<1> > select_ln71_7_fu_455_p3;
    sc_signal< sc_lv<1> > select_ln71_7_reg_782;
    sc_signal< sc_lv<32> > select_ln73_fu_474_p3;
    sc_signal< sc_lv<32> > select_ln73_reg_788;
    sc_signal< sc_lv<10> > trunc_ln78_9_fu_482_p1;
    sc_signal< sc_lv<10> > trunc_ln78_9_reg_793;
    sc_signal< sc_lv<64> > add_ln73_1_fu_486_p2;
    sc_signal< sc_lv<64> > add_ln73_1_reg_798;
    sc_signal< sc_lv<96> > add_ln71_1_fu_492_p2;
    sc_signal< sc_lv<96> > add_ln71_1_reg_803;
    sc_signal< sc_lv<128> > add_ln69_fu_507_p2;
    sc_signal< sc_lv<128> > add_ln69_reg_808;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< bool > ap_block_state5_pp0_stage1_iter0;
    sc_signal< bool > ap_block_state7_pp0_stage1_iter1;
    sc_signal< bool > ap_block_pp0_stage1_11001;
    sc_signal< sc_lv<31> > select_ln71_8_fu_548_p3;
    sc_signal< sc_lv<31> > select_ln71_8_reg_813;
    sc_signal< sc_lv<31> > select_ln73_2_fu_575_p3;
    sc_signal< sc_lv<31> > select_ln73_2_reg_818;
    sc_signal< sc_lv<10> > add_ln78_4_fu_587_p2;
    sc_signal< sc_lv<10> > add_ln78_4_reg_823;
    sc_signal< sc_lv<32> > kc_fu_613_p2;
    sc_signal< sc_lv<32> > kc_reg_839;
    sc_signal< sc_lv<64> > select_ln73_3_fu_618_p3;
    sc_signal< sc_lv<64> > select_ln73_3_reg_844;
    sc_signal< sc_lv<96> > select_ln71_9_fu_624_p3;
    sc_signal< sc_lv<96> > select_ln71_9_reg_849;
    sc_signal< sc_lv<32> > tmp_reg_854;
    sc_signal< sc_lv<32> > tmp_73_reg_859;
    sc_signal< bool > ap_block_pp0_stage1_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state5;
    sc_signal< sc_lv<128> > ap_phi_mux_indvar_flatten58_phi_fu_181_p4;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<96> > ap_phi_mux_indvar_flatten21_phi_fu_193_p4;
    sc_signal< sc_lv<31> > ap_phi_mux_chi_0_i_i_phi_fu_204_p4;
    sc_signal< sc_lv<64> > ap_phi_mux_indvar_flatten_phi_fu_215_p4;
    sc_signal< sc_lv<32> > ap_phi_mux_kc_0_i_i_phi_fu_226_p4;
    sc_signal< sc_lv<31> > ap_phi_mux_kr_0_i_i_phi_fu_237_p4;
    sc_signal< sc_lv<64> > sext_ln78_fu_598_p1;
    sc_signal< sc_lv<64> > sext_ln78_1_fu_608_p1;
    sc_signal< sc_lv<64> > sext_ln78_2_fu_634_p1;
    sc_signal< sc_lv<64> > sext_ln78_3_fu_643_p1;
    sc_signal< bool > ap_block_pp0_stage1_01001;
    sc_signal< sc_lv<32> > trunc_ln78_1_fu_244_p0;
    sc_signal< sc_lv<32> > mul_ln78_1_fu_252_p2;
    sc_signal< sc_lv<32> > mul_ln78_fu_248_p2;
    sc_signal< sc_lv<32> > mul_ln78_2_fu_256_p2;
    sc_signal< sc_lv<32> > add_ln78_fu_266_p2;
    sc_signal< sc_lv<32> > mul_ln78_4_fu_275_p2;
    sc_signal< sc_lv<32> > mul_ln78_3_fu_271_p2;
    sc_signal< sc_lv<32> > mul_ln78_5_fu_280_p2;
    sc_signal< sc_lv<32> > add_ln78_1_fu_290_p2;
    sc_signal< sc_lv<32> > mul_ln78_6_fu_295_p2;
    sc_signal< sc_lv<32> > mul_ln78_7_fu_300_p2;
    sc_signal< sc_lv<32> > add_ln78_2_fu_310_p2;
    sc_signal< sc_lv<32> > mul_ln78_8_fu_315_p2;
    sc_signal< sc_lv<32> > mul_ln78_9_fu_320_p2;
    sc_signal< sc_lv<32> > bound_fu_333_p0;
    sc_signal< sc_lv<64> > cast_fu_330_p1;
    sc_signal< sc_lv<32> > bound_fu_333_p1;
    sc_signal< sc_lv<64> > bound4_fu_346_p0;
    sc_signal< sc_lv<32> > bound4_fu_346_p1;
    sc_signal< sc_lv<96> > bound26_fu_358_p0;
    sc_signal< sc_lv<32> > bound26_fu_358_p1;
    sc_signal< sc_lv<31> > mul_ln78_10_fu_378_p1;
    sc_signal< sc_lv<32> > mul_ln78_10_fu_378_p2;
    sc_signal< sc_lv<32> > mul_ln78_11_fu_383_p2;
    sc_signal< sc_lv<1> > icmp_ln75_1_fu_410_p2;
    sc_signal< sc_lv<1> > icmp_ln73_1_fu_422_p2;
    sc_signal< sc_lv<31> > mul_ln78_13_fu_450_p0;
    sc_signal< sc_lv<1> > select_ln71_2_fu_415_p3;
    sc_signal< sc_lv<1> > or_ln73_fu_462_p2;
    sc_signal< sc_lv<1> > or_ln73_1_fu_468_p2;
    sc_signal< sc_lv<10> > trunc_ln78_6_fu_498_p1;
    sc_signal< sc_lv<32> > mul_ln78_14_fu_526_p2;
    sc_signal< sc_lv<10> > trunc_ln78_7_fu_530_p1;
    sc_signal< sc_lv<10> > select_ln71_1_fu_513_p3;
    sc_signal< sc_lv<10> > mul_ln78_12_fu_502_p2;
    sc_signal< sc_lv<31> > select_ln71_4_fu_519_p3;
    sc_signal< sc_lv<31> > kr_fu_553_p2;
    sc_signal< sc_lv<10> > trunc_ln78_8_fu_559_p1;
    sc_signal< sc_lv<10> > mul_ln78_15_fu_563_p2;
    sc_signal< sc_lv<10> > select_ln71_6_fu_541_p3;
    sc_signal< sc_lv<10> > select_ln73_1_fu_568_p3;
    sc_signal< sc_lv<10> > select_ln71_5_fu_534_p3;
    sc_signal< sc_lv<10> > add_ln78_3_fu_582_p2;
    sc_signal< sc_lv<10> > add_ln78_5_fu_593_p2;
    sc_signal< sc_lv<10> > add_ln78_6_fu_603_p2;
    sc_signal< sc_lv<10> > add_ln78_7_fu_630_p2;
    sc_signal< sc_lv<10> > add_ln78_8_fu_639_p2;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<6> > ap_NS_fsm;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_lv<128> > bound26_fu_358_p00;
    sc_signal< sc_lv<128> > bound26_fu_358_p10;
    sc_signal< sc_lv<96> > bound4_fu_346_p00;
    sc_signal< sc_lv<96> > bound4_fu_346_p10;
    sc_signal< sc_lv<32> > mul_ln78_10_fu_378_p10;
    sc_signal< sc_lv<32> > mul_ln78_13_fu_450_p00;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<6> ap_ST_fsm_state1;
    static const sc_lv<6> ap_ST_fsm_state2;
    static const sc_lv<6> ap_ST_fsm_state3;
    static const sc_lv<6> ap_ST_fsm_pp0_stage0;
    static const sc_lv<6> ap_ST_fsm_pp0_stage1;
    static const sc_lv<6> ap_ST_fsm_state8;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<128> ap_const_lv128_lc_1;
    static const sc_lv<96> ap_const_lv96_0;
    static const sc_lv<31> ap_const_lv31_0;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<31> ap_const_lv31_1;
    static const sc_lv<64> ap_const_lv64_1;
    static const sc_lv<96> ap_const_lv96_1;
    static const sc_lv<128> ap_const_lv128_lc_2;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_lv<32> ap_const_lv32_5;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_W_buf_address0();
    void thread_W_buf_address1();
    void thread_W_buf_ce0();
    void thread_W_buf_ce1();
    void thread_W_next_0_0_V_blk_n();
    void thread_W_next_0_0_V_din();
    void thread_W_next_0_0_V_write();
    void thread_W_next_0_1_V_blk_n();
    void thread_W_next_0_1_V_din();
    void thread_W_next_0_1_V_write();
    void thread_W_next_0_2_V_blk_n();
    void thread_W_next_0_2_V_din();
    void thread_W_next_0_2_V_write();
    void thread_W_next_0_3_V_blk_n();
    void thread_W_next_0_3_V_din();
    void thread_W_next_0_3_V_write();
    void thread_add_ln69_fu_507_p2();
    void thread_add_ln71_1_fu_492_p2();
    void thread_add_ln73_1_fu_486_p2();
    void thread_add_ln78_1_fu_290_p2();
    void thread_add_ln78_2_fu_310_p2();
    void thread_add_ln78_3_fu_582_p2();
    void thread_add_ln78_4_fu_587_p2();
    void thread_add_ln78_5_fu_593_p2();
    void thread_add_ln78_6_fu_603_p2();
    void thread_add_ln78_7_fu_630_p2();
    void thread_add_ln78_8_fu_639_p2();
    void thread_add_ln78_fu_266_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp0_stage1();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state8();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp0_stage1();
    void thread_ap_block_pp0_stage1_01001();
    void thread_ap_block_pp0_stage1_11001();
    void thread_ap_block_pp0_stage1_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state4_pp0_stage0_iter0();
    void thread_ap_block_state5_pp0_stage1_iter0();
    void thread_ap_block_state6_pp0_stage0_iter1();
    void thread_ap_block_state7_pp0_stage1_iter1();
    void thread_ap_condition_pp0_exit_iter0_state5();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_phi_mux_chi_0_i_i_phi_fu_204_p4();
    void thread_ap_phi_mux_indvar_flatten21_phi_fu_193_p4();
    void thread_ap_phi_mux_indvar_flatten58_phi_fu_181_p4();
    void thread_ap_phi_mux_indvar_flatten_phi_fu_215_p4();
    void thread_ap_phi_mux_kc_0_i_i_phi_fu_226_p4();
    void thread_ap_phi_mux_kr_0_i_i_phi_fu_237_p4();
    void thread_ap_ready();
    void thread_bound26_fu_358_p0();
    void thread_bound26_fu_358_p00();
    void thread_bound26_fu_358_p1();
    void thread_bound26_fu_358_p10();
    void thread_bound26_fu_358_p2();
    void thread_bound4_fu_346_p0();
    void thread_bound4_fu_346_p00();
    void thread_bound4_fu_346_p1();
    void thread_bound4_fu_346_p10();
    void thread_bound4_fu_346_p2();
    void thread_bound_fu_333_p0();
    void thread_bound_fu_333_p1();
    void thread_bound_fu_333_p2();
    void thread_cast_fu_330_p1();
    void thread_chi_fu_434_p2();
    void thread_cho_blk_n();
    void thread_cho_read();
    void thread_icmp_ln69_fu_392_p2();
    void thread_icmp_ln71_fu_397_p2();
    void thread_icmp_ln73_1_fu_422_p2();
    void thread_icmp_ln73_fu_369_p2();
    void thread_icmp_ln75_1_fu_410_p2();
    void thread_icmp_ln75_fu_364_p2();
    void thread_internal_ap_ready();
    void thread_kc_fu_613_p2();
    void thread_kr_fu_553_p2();
    void thread_mul_ln78_10_fu_378_p1();
    void thread_mul_ln78_10_fu_378_p10();
    void thread_mul_ln78_10_fu_378_p2();
    void thread_mul_ln78_11_fu_383_p2();
    void thread_mul_ln78_12_fu_502_p2();
    void thread_mul_ln78_13_fu_450_p0();
    void thread_mul_ln78_13_fu_450_p00();
    void thread_mul_ln78_13_fu_450_p2();
    void thread_mul_ln78_14_fu_526_p2();
    void thread_mul_ln78_15_fu_563_p2();
    void thread_mul_ln78_1_fu_252_p2();
    void thread_mul_ln78_2_fu_256_p2();
    void thread_mul_ln78_3_fu_271_p2();
    void thread_mul_ln78_4_fu_275_p2();
    void thread_mul_ln78_5_fu_280_p2();
    void thread_mul_ln78_6_fu_295_p2();
    void thread_mul_ln78_7_fu_300_p2();
    void thread_mul_ln78_8_fu_315_p2();
    void thread_mul_ln78_9_fu_320_p2();
    void thread_mul_ln78_fu_248_p2();
    void thread_or_ln71_fu_444_p2();
    void thread_or_ln73_1_fu_468_p2();
    void thread_or_ln73_fu_462_p2();
    void thread_p_c_s_blk_n();
    void thread_p_c_s_read();
    void thread_p_chin_s_blk_n();
    void thread_p_chin_s_read();
    void thread_p_k_s_blk_n();
    void thread_p_k_s_read();
    void thread_real_start();
    void thread_select_ln71_1_fu_513_p3();
    void thread_select_ln71_2_fu_415_p3();
    void thread_select_ln71_3_fu_427_p3();
    void thread_select_ln71_4_fu_519_p3();
    void thread_select_ln71_5_fu_534_p3();
    void thread_select_ln71_6_fu_541_p3();
    void thread_select_ln71_7_fu_455_p3();
    void thread_select_ln71_8_fu_548_p3();
    void thread_select_ln71_9_fu_624_p3();
    void thread_select_ln71_fu_402_p3();
    void thread_select_ln73_1_fu_568_p3();
    void thread_select_ln73_2_fu_575_p3();
    void thread_select_ln73_3_fu_618_p3();
    void thread_select_ln73_fu_474_p3();
    void thread_sext_ln78_1_fu_608_p1();
    void thread_sext_ln78_2_fu_634_p1();
    void thread_sext_ln78_3_fu_643_p1();
    void thread_sext_ln78_fu_598_p1();
    void thread_start_out();
    void thread_start_write();
    void thread_trunc_ln78_1_fu_244_p0();
    void thread_trunc_ln78_1_fu_244_p1();
    void thread_trunc_ln78_2_fu_286_p1();
    void thread_trunc_ln78_3_fu_306_p1();
    void thread_trunc_ln78_4_fu_326_p1();
    void thread_trunc_ln78_5_fu_388_p1();
    void thread_trunc_ln78_6_fu_498_p1();
    void thread_trunc_ln78_7_fu_530_p1();
    void thread_trunc_ln78_8_fu_559_p1();
    void thread_trunc_ln78_9_fu_482_p1();
    void thread_trunc_ln78_fu_262_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
