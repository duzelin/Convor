// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module PE35 (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        W_inter_3_2_dout,
        W_inter_3_2_empty_n,
        W_inter_3_2_read,
        In_inter_3_2_dout,
        In_inter_3_2_empty_n,
        In_inter_3_2_read,
        W_inter_4_2_din,
        W_inter_4_2_full_n,
        W_inter_4_2_write,
        In_inter_3_3_din,
        In_inter_3_3_full_n,
        In_inter_3_3_write,
        add_ln207_5_loc_dout,
        add_ln207_5_loc_empty_n,
        add_ln207_5_loc_read,
        add_ln207_1_loc_dout,
        add_ln207_1_loc_empty_n,
        add_ln207_1_loc_read,
        O_inter_3_2_din,
        O_inter_3_2_full_n,
        O_inter_3_2_write,
        p_c_s_dout,
        p_c_s_empty_n,
        p_c_s_read,
        p_chin_s_dout,
        p_chin_s_empty_n,
        p_chin_s_read,
        p_chout_s_dout,
        p_chout_s_empty_n,
        p_chout_s_read,
        p_k_s_dout,
        p_k_s_empty_n,
        p_k_s_read,
        p_r_s_dout,
        p_r_s_empty_n,
        p_r_s_read,
        p_c_out_din,
        p_c_out_full_n,
        p_c_out_write,
        p_chin_out_din,
        p_chin_out_full_n,
        p_chin_out_write,
        p_k_out_din,
        p_k_out_full_n,
        p_k_out_write
);

parameter    ap_ST_fsm_state1 = 11'd1;
parameter    ap_ST_fsm_state2 = 11'd2;
parameter    ap_ST_fsm_state3 = 11'd4;
parameter    ap_ST_fsm_state4 = 11'd8;
parameter    ap_ST_fsm_state5 = 11'd16;
parameter    ap_ST_fsm_state6 = 11'd32;
parameter    ap_ST_fsm_state7 = 11'd64;
parameter    ap_ST_fsm_state8 = 11'd128;
parameter    ap_ST_fsm_state9 = 11'd256;
parameter    ap_ST_fsm_state10 = 11'd512;
parameter    ap_ST_fsm_state11 = 11'd1024;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [31:0] W_inter_3_2_dout;
input   W_inter_3_2_empty_n;
output   W_inter_3_2_read;
input  [31:0] In_inter_3_2_dout;
input   In_inter_3_2_empty_n;
output   In_inter_3_2_read;
output  [31:0] W_inter_4_2_din;
input   W_inter_4_2_full_n;
output   W_inter_4_2_write;
output  [31:0] In_inter_3_3_din;
input   In_inter_3_3_full_n;
output   In_inter_3_3_write;
input  [31:0] add_ln207_5_loc_dout;
input   add_ln207_5_loc_empty_n;
output   add_ln207_5_loc_read;
input  [31:0] add_ln207_1_loc_dout;
input   add_ln207_1_loc_empty_n;
output   add_ln207_1_loc_read;
output  [31:0] O_inter_3_2_din;
input   O_inter_3_2_full_n;
output   O_inter_3_2_write;
input  [31:0] p_c_s_dout;
input   p_c_s_empty_n;
output   p_c_s_read;
input  [31:0] p_chin_s_dout;
input   p_chin_s_empty_n;
output   p_chin_s_read;
input  [31:0] p_chout_s_dout;
input   p_chout_s_empty_n;
output   p_chout_s_read;
input  [31:0] p_k_s_dout;
input   p_k_s_empty_n;
output   p_k_s_read;
input  [31:0] p_r_s_dout;
input   p_r_s_empty_n;
output   p_r_s_read;
output  [31:0] p_c_out_din;
input   p_c_out_full_n;
output   p_c_out_write;
output  [31:0] p_chin_out_din;
input   p_chin_out_full_n;
output   p_chin_out_write;
output  [31:0] p_k_out_din;
input   p_k_out_full_n;
output   p_k_out_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg W_inter_3_2_read;
reg In_inter_3_2_read;
reg W_inter_4_2_write;
reg In_inter_3_3_write;
reg add_ln207_5_loc_read;
reg add_ln207_1_loc_read;
reg O_inter_3_2_write;
reg p_c_s_read;
reg p_chin_s_read;
reg p_chout_s_read;
reg p_k_s_read;
reg p_r_s_read;
reg p_c_out_write;
reg p_chin_out_write;
reg p_k_out_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [10:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    W_inter_3_2_blk_n;
wire    ap_CS_fsm_state5;
wire   [0:0] icmp_ln126_fu_332_p2;
reg    In_inter_3_2_blk_n;
reg    W_inter_4_2_blk_n;
reg    In_inter_3_3_blk_n;
reg    add_ln207_5_loc_blk_n;
reg    add_ln207_1_loc_blk_n;
reg    O_inter_3_2_blk_n;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln122_fu_306_p2;
reg    p_c_s_blk_n;
reg    p_chin_s_blk_n;
reg    p_chout_s_blk_n;
reg    p_k_s_blk_n;
reg    p_r_s_blk_n;
reg    p_c_out_blk_n;
reg    p_chin_out_blk_n;
reg    p_k_out_blk_n;
reg   [31:0] p_c_read_reg_350;
reg    ap_block_state1;
reg   [31:0] p_chin_read_reg_355;
reg   [31:0] p_k_read_reg_360;
wire   [0:0] and_ln130_fu_281_p2;
reg   [0:0] and_ln130_reg_366;
wire   [30:0] col_fu_296_p2;
reg   [30:0] col_reg_374;
wire    ap_CS_fsm_state2;
wire   [30:0] chi_fu_311_p2;
reg   [30:0] chi_reg_382;
reg    ap_block_state3;
wire   [30:0] kr_fu_326_p2;
reg   [30:0] kr_reg_390;
wire    ap_CS_fsm_state4;
wire   [31:0] kc_fu_337_p2;
reg   [31:0] kc_reg_398;
reg    ap_block_state5;
reg   [31:0] tmp_19_reg_403;
reg   [31:0] tmp_reg_408;
wire   [31:0] grp_fu_265_p2;
reg   [31:0] tmp_4_i_i_i_reg_413;
wire    ap_CS_fsm_state7;
wire   [31:0] O_temp_2_fu_343_p3;
wire    ap_CS_fsm_state11;
reg   [30:0] col_0_i_i_i_reg_179;
reg   [31:0] tmp_8_reg_190;
wire   [0:0] icmp_ln119_fu_291_p2;
wire   [0:0] icmp_ln124_fu_321_p2;
reg   [30:0] chi_0_i_i_i_reg_203;
reg   [31:0] p_0_1_i_i_i_reg_214;
reg   [30:0] kr_0_i_i_i_reg_226;
reg   [31:0] p_0_2_i_i_i_reg_237;
reg   [31:0] kc_0_i_i_i_reg_249;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state6;
wire   [0:0] icmp_ln130_fu_269_p2;
wire   [0:0] icmp_ln130_2_fu_275_p2;
wire   [31:0] zext_ln119_fu_287_p1;
wire   [31:0] zext_ln122_fu_302_p1;
wire   [31:0] zext_ln124_fu_317_p1;
wire   [31:0] grp_fu_260_p2;
reg   [10:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 11'd1;
end

Systolic_Array_Cocud #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Systolic_Array_Cocud_U387(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(p_0_2_i_i_i_reg_237),
    .din1(tmp_4_i_i_i_reg_413),
    .ce(1'b1),
    .dout(grp_fu_260_p2)
);

Systolic_Array_CodEe #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Systolic_Array_CodEe_U388(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_reg_408),
    .din1(tmp_19_reg_403),
    .ce(1'b1),
    .dout(grp_fu_265_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln119_fu_291_p2 == 1'd0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln124_fu_321_p2 == 1'd0))) begin
        chi_0_i_i_i_reg_203 <= chi_reg_382;
    end else if (((icmp_ln119_fu_291_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        chi_0_i_i_i_reg_203 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b0 == O_inter_3_2_full_n) & (icmp_ln122_fu_306_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln122_fu_306_p2 == 1'd0))) begin
        col_0_i_i_i_reg_179 <= col_reg_374;
    end else if ((~((p_c_out_full_n == 1'b0) | (p_r_s_empty_n == 1'b0) | (p_k_s_empty_n == 1'b0) | (p_chout_s_empty_n == 1'b0) | (p_chin_s_empty_n == 1'b0) | (p_c_s_empty_n == 1'b0) | (1'b0 == add_ln207_1_loc_empty_n) | (1'b0 == add_ln207_5_loc_empty_n) | (real_start == 1'b0) | (p_k_out_full_n == 1'b0) | (p_chin_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        col_0_i_i_i_reg_179 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        kc_0_i_i_i_reg_249 <= kc_reg_398;
    end else if (((icmp_ln124_fu_321_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        kc_0_i_i_i_reg_249 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((1'b0 == W_inter_4_2_full_n) & (icmp_ln126_fu_332_p2 == 1'd0)) | ((1'b0 == In_inter_3_3_full_n) & (icmp_ln126_fu_332_p2 == 1'd0)) | ((1'b0 == In_inter_3_2_empty_n) & (icmp_ln126_fu_332_p2 == 1'd0)) | ((1'b0 == W_inter_3_2_empty_n) & (icmp_ln126_fu_332_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state5) & (icmp_ln126_fu_332_p2 == 1'd1))) begin
        kr_0_i_i_i_reg_226 <= kr_reg_390;
    end else if ((~((1'b0 == O_inter_3_2_full_n) & (icmp_ln122_fu_306_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln122_fu_306_p2 == 1'd1))) begin
        kr_0_i_i_i_reg_226 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((1'b0 == W_inter_4_2_full_n) & (icmp_ln126_fu_332_p2 == 1'd0)) | ((1'b0 == In_inter_3_3_full_n) & (icmp_ln126_fu_332_p2 == 1'd0)) | ((1'b0 == In_inter_3_2_empty_n) & (icmp_ln126_fu_332_p2 == 1'd0)) | ((1'b0 == W_inter_3_2_empty_n) & (icmp_ln126_fu_332_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state5) & (icmp_ln126_fu_332_p2 == 1'd1))) begin
        p_0_1_i_i_i_reg_214 <= p_0_2_i_i_i_reg_237;
    end else if ((~((1'b0 == O_inter_3_2_full_n) & (icmp_ln122_fu_306_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln122_fu_306_p2 == 1'd1))) begin
        p_0_1_i_i_i_reg_214 <= tmp_8_reg_190;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        p_0_2_i_i_i_reg_237 <= O_temp_2_fu_343_p3;
    end else if (((icmp_ln124_fu_321_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state4))) begin
        p_0_2_i_i_i_reg_237 <= p_0_1_i_i_i_reg_214;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln124_fu_321_p2 == 1'd0))) begin
        tmp_8_reg_190 <= p_0_1_i_i_i_reg_214;
    end else if (((icmp_ln119_fu_291_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        tmp_8_reg_190 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((p_c_out_full_n == 1'b0) | (p_r_s_empty_n == 1'b0) | (p_k_s_empty_n == 1'b0) | (p_chout_s_empty_n == 1'b0) | (p_chin_s_empty_n == 1'b0) | (p_c_s_empty_n == 1'b0) | (1'b0 == add_ln207_1_loc_empty_n) | (1'b0 == add_ln207_5_loc_empty_n) | (real_start == 1'b0) | (p_k_out_full_n == 1'b0) | (p_chin_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        and_ln130_reg_366 <= and_ln130_fu_281_p2;
        p_c_read_reg_350 <= p_c_s_dout;
        p_chin_read_reg_355 <= p_chin_s_dout;
        p_k_read_reg_360 <= p_k_s_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b0 == O_inter_3_2_full_n) & (icmp_ln122_fu_306_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state3))) begin
        chi_reg_382 <= chi_fu_311_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        col_reg_374 <= col_fu_296_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((1'b0 == W_inter_4_2_full_n) & (icmp_ln126_fu_332_p2 == 1'd0)) | ((1'b0 == In_inter_3_3_full_n) & (icmp_ln126_fu_332_p2 == 1'd0)) | ((1'b0 == In_inter_3_2_empty_n) & (icmp_ln126_fu_332_p2 == 1'd0)) | ((1'b0 == W_inter_3_2_empty_n) & (icmp_ln126_fu_332_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state5))) begin
        kc_reg_398 <= kc_fu_337_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        kr_reg_390 <= kr_fu_326_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((1'b0 == W_inter_4_2_full_n) & (icmp_ln126_fu_332_p2 == 1'd0)) | ((1'b0 == In_inter_3_3_full_n) & (icmp_ln126_fu_332_p2 == 1'd0)) | ((1'b0 == In_inter_3_2_empty_n) & (icmp_ln126_fu_332_p2 == 1'd0)) | ((1'b0 == W_inter_3_2_empty_n) & (icmp_ln126_fu_332_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state5) & (icmp_ln126_fu_332_p2 == 1'd0))) begin
        tmp_19_reg_403 <= W_inter_3_2_dout;
        tmp_reg_408 <= In_inter_3_2_dout;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (1'd1 == and_ln130_reg_366))) begin
        tmp_4_i_i_i_reg_413 <= grp_fu_265_p2;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln126_fu_332_p2 == 1'd0))) begin
        In_inter_3_2_blk_n = In_inter_3_2_empty_n;
    end else begin
        In_inter_3_2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~(((1'b0 == W_inter_4_2_full_n) & (icmp_ln126_fu_332_p2 == 1'd0)) | ((1'b0 == In_inter_3_3_full_n) & (icmp_ln126_fu_332_p2 == 1'd0)) | ((1'b0 == In_inter_3_2_empty_n) & (icmp_ln126_fu_332_p2 == 1'd0)) | ((1'b0 == W_inter_3_2_empty_n) & (icmp_ln126_fu_332_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state5) & (icmp_ln126_fu_332_p2 == 1'd0))) begin
        In_inter_3_2_read = 1'b1;
    end else begin
        In_inter_3_2_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln126_fu_332_p2 == 1'd0))) begin
        In_inter_3_3_blk_n = In_inter_3_3_full_n;
    end else begin
        In_inter_3_3_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~(((1'b0 == W_inter_4_2_full_n) & (icmp_ln126_fu_332_p2 == 1'd0)) | ((1'b0 == In_inter_3_3_full_n) & (icmp_ln126_fu_332_p2 == 1'd0)) | ((1'b0 == In_inter_3_2_empty_n) & (icmp_ln126_fu_332_p2 == 1'd0)) | ((1'b0 == W_inter_3_2_empty_n) & (icmp_ln126_fu_332_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state5) & (icmp_ln126_fu_332_p2 == 1'd0))) begin
        In_inter_3_3_write = 1'b1;
    end else begin
        In_inter_3_3_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln122_fu_306_p2 == 1'd0))) begin
        O_inter_3_2_blk_n = O_inter_3_2_full_n;
    end else begin
        O_inter_3_2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b0 == O_inter_3_2_full_n) & (icmp_ln122_fu_306_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln122_fu_306_p2 == 1'd0))) begin
        O_inter_3_2_write = 1'b1;
    end else begin
        O_inter_3_2_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln126_fu_332_p2 == 1'd0))) begin
        W_inter_3_2_blk_n = W_inter_3_2_empty_n;
    end else begin
        W_inter_3_2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~(((1'b0 == W_inter_4_2_full_n) & (icmp_ln126_fu_332_p2 == 1'd0)) | ((1'b0 == In_inter_3_3_full_n) & (icmp_ln126_fu_332_p2 == 1'd0)) | ((1'b0 == In_inter_3_2_empty_n) & (icmp_ln126_fu_332_p2 == 1'd0)) | ((1'b0 == W_inter_3_2_empty_n) & (icmp_ln126_fu_332_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state5) & (icmp_ln126_fu_332_p2 == 1'd0))) begin
        W_inter_3_2_read = 1'b1;
    end else begin
        W_inter_3_2_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln126_fu_332_p2 == 1'd0))) begin
        W_inter_4_2_blk_n = W_inter_4_2_full_n;
    end else begin
        W_inter_4_2_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~(((1'b0 == W_inter_4_2_full_n) & (icmp_ln126_fu_332_p2 == 1'd0)) | ((1'b0 == In_inter_3_3_full_n) & (icmp_ln126_fu_332_p2 == 1'd0)) | ((1'b0 == In_inter_3_2_empty_n) & (icmp_ln126_fu_332_p2 == 1'd0)) | ((1'b0 == W_inter_3_2_empty_n) & (icmp_ln126_fu_332_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state5) & (icmp_ln126_fu_332_p2 == 1'd0))) begin
        W_inter_4_2_write = 1'b1;
    end else begin
        W_inter_4_2_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        add_ln207_1_loc_blk_n = add_ln207_1_loc_empty_n;
    end else begin
        add_ln207_1_loc_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_c_out_full_n == 1'b0) | (p_r_s_empty_n == 1'b0) | (p_k_s_empty_n == 1'b0) | (p_chout_s_empty_n == 1'b0) | (p_chin_s_empty_n == 1'b0) | (p_c_s_empty_n == 1'b0) | (1'b0 == add_ln207_1_loc_empty_n) | (1'b0 == add_ln207_5_loc_empty_n) | (real_start == 1'b0) | (p_k_out_full_n == 1'b0) | (p_chin_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        add_ln207_1_loc_read = 1'b1;
    end else begin
        add_ln207_1_loc_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        add_ln207_5_loc_blk_n = add_ln207_5_loc_empty_n;
    end else begin
        add_ln207_5_loc_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_c_out_full_n == 1'b0) | (p_r_s_empty_n == 1'b0) | (p_k_s_empty_n == 1'b0) | (p_chout_s_empty_n == 1'b0) | (p_chin_s_empty_n == 1'b0) | (p_c_s_empty_n == 1'b0) | (1'b0 == add_ln207_1_loc_empty_n) | (1'b0 == add_ln207_5_loc_empty_n) | (real_start == 1'b0) | (p_k_out_full_n == 1'b0) | (p_chin_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        add_ln207_5_loc_read = 1'b1;
    end else begin
        add_ln207_5_loc_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln119_fu_291_p2 == 1'd0))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln119_fu_291_p2 == 1'd0))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_c_out_blk_n = p_c_out_full_n;
    end else begin
        p_c_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_c_out_full_n == 1'b0) | (p_r_s_empty_n == 1'b0) | (p_k_s_empty_n == 1'b0) | (p_chout_s_empty_n == 1'b0) | (p_chin_s_empty_n == 1'b0) | (p_c_s_empty_n == 1'b0) | (1'b0 == add_ln207_1_loc_empty_n) | (1'b0 == add_ln207_5_loc_empty_n) | (real_start == 1'b0) | (p_k_out_full_n == 1'b0) | (p_chin_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_c_out_write = 1'b1;
    end else begin
        p_c_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_c_s_blk_n = p_c_s_empty_n;
    end else begin
        p_c_s_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_c_out_full_n == 1'b0) | (p_r_s_empty_n == 1'b0) | (p_k_s_empty_n == 1'b0) | (p_chout_s_empty_n == 1'b0) | (p_chin_s_empty_n == 1'b0) | (p_c_s_empty_n == 1'b0) | (1'b0 == add_ln207_1_loc_empty_n) | (1'b0 == add_ln207_5_loc_empty_n) | (real_start == 1'b0) | (p_k_out_full_n == 1'b0) | (p_chin_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_c_s_read = 1'b1;
    end else begin
        p_c_s_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_chin_out_blk_n = p_chin_out_full_n;
    end else begin
        p_chin_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_c_out_full_n == 1'b0) | (p_r_s_empty_n == 1'b0) | (p_k_s_empty_n == 1'b0) | (p_chout_s_empty_n == 1'b0) | (p_chin_s_empty_n == 1'b0) | (p_c_s_empty_n == 1'b0) | (1'b0 == add_ln207_1_loc_empty_n) | (1'b0 == add_ln207_5_loc_empty_n) | (real_start == 1'b0) | (p_k_out_full_n == 1'b0) | (p_chin_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_chin_out_write = 1'b1;
    end else begin
        p_chin_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_chin_s_blk_n = p_chin_s_empty_n;
    end else begin
        p_chin_s_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_c_out_full_n == 1'b0) | (p_r_s_empty_n == 1'b0) | (p_k_s_empty_n == 1'b0) | (p_chout_s_empty_n == 1'b0) | (p_chin_s_empty_n == 1'b0) | (p_c_s_empty_n == 1'b0) | (1'b0 == add_ln207_1_loc_empty_n) | (1'b0 == add_ln207_5_loc_empty_n) | (real_start == 1'b0) | (p_k_out_full_n == 1'b0) | (p_chin_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_chin_s_read = 1'b1;
    end else begin
        p_chin_s_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_chout_s_blk_n = p_chout_s_empty_n;
    end else begin
        p_chout_s_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_c_out_full_n == 1'b0) | (p_r_s_empty_n == 1'b0) | (p_k_s_empty_n == 1'b0) | (p_chout_s_empty_n == 1'b0) | (p_chin_s_empty_n == 1'b0) | (p_c_s_empty_n == 1'b0) | (1'b0 == add_ln207_1_loc_empty_n) | (1'b0 == add_ln207_5_loc_empty_n) | (real_start == 1'b0) | (p_k_out_full_n == 1'b0) | (p_chin_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_chout_s_read = 1'b1;
    end else begin
        p_chout_s_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_k_out_blk_n = p_k_out_full_n;
    end else begin
        p_k_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_c_out_full_n == 1'b0) | (p_r_s_empty_n == 1'b0) | (p_k_s_empty_n == 1'b0) | (p_chout_s_empty_n == 1'b0) | (p_chin_s_empty_n == 1'b0) | (p_c_s_empty_n == 1'b0) | (1'b0 == add_ln207_1_loc_empty_n) | (1'b0 == add_ln207_5_loc_empty_n) | (real_start == 1'b0) | (p_k_out_full_n == 1'b0) | (p_chin_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_k_out_write = 1'b1;
    end else begin
        p_k_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_k_s_blk_n = p_k_s_empty_n;
    end else begin
        p_k_s_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_c_out_full_n == 1'b0) | (p_r_s_empty_n == 1'b0) | (p_k_s_empty_n == 1'b0) | (p_chout_s_empty_n == 1'b0) | (p_chin_s_empty_n == 1'b0) | (p_c_s_empty_n == 1'b0) | (1'b0 == add_ln207_1_loc_empty_n) | (1'b0 == add_ln207_5_loc_empty_n) | (real_start == 1'b0) | (p_k_out_full_n == 1'b0) | (p_chin_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_k_s_read = 1'b1;
    end else begin
        p_k_s_read = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_r_s_blk_n = p_r_s_empty_n;
    end else begin
        p_r_s_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((p_c_out_full_n == 1'b0) | (p_r_s_empty_n == 1'b0) | (p_k_s_empty_n == 1'b0) | (p_chout_s_empty_n == 1'b0) | (p_chin_s_empty_n == 1'b0) | (p_c_s_empty_n == 1'b0) | (1'b0 == add_ln207_1_loc_empty_n) | (1'b0 == add_ln207_5_loc_empty_n) | (real_start == 1'b0) | (p_k_out_full_n == 1'b0) | (p_chin_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        p_r_s_read = 1'b1;
    end else begin
        p_r_s_read = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((p_c_out_full_n == 1'b0) | (p_r_s_empty_n == 1'b0) | (p_k_s_empty_n == 1'b0) | (p_chout_s_empty_n == 1'b0) | (p_chin_s_empty_n == 1'b0) | (p_c_s_empty_n == 1'b0) | (1'b0 == add_ln207_1_loc_empty_n) | (1'b0 == add_ln207_5_loc_empty_n) | (real_start == 1'b0) | (p_k_out_full_n == 1'b0) | (p_chin_out_full_n == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln119_fu_291_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if ((~((1'b0 == O_inter_3_2_full_n) & (icmp_ln122_fu_306_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln122_fu_306_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else if ((~((1'b0 == O_inter_3_2_full_n) & (icmp_ln122_fu_306_p2 == 1'd0)) & (1'b1 == ap_CS_fsm_state3) & (icmp_ln122_fu_306_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln124_fu_321_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            if ((~(((1'b0 == W_inter_4_2_full_n) & (icmp_ln126_fu_332_p2 == 1'd0)) | ((1'b0 == In_inter_3_3_full_n) & (icmp_ln126_fu_332_p2 == 1'd0)) | ((1'b0 == In_inter_3_2_empty_n) & (icmp_ln126_fu_332_p2 == 1'd0)) | ((1'b0 == W_inter_3_2_empty_n) & (icmp_ln126_fu_332_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state5) & (icmp_ln126_fu_332_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else if ((~(((1'b0 == W_inter_4_2_full_n) & (icmp_ln126_fu_332_p2 == 1'd0)) | ((1'b0 == In_inter_3_3_full_n) & (icmp_ln126_fu_332_p2 == 1'd0)) | ((1'b0 == In_inter_3_2_empty_n) & (icmp_ln126_fu_332_p2 == 1'd0)) | ((1'b0 == W_inter_3_2_empty_n) & (icmp_ln126_fu_332_p2 == 1'd0))) & (1'b1 == ap_CS_fsm_state5) & (icmp_ln126_fu_332_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign In_inter_3_3_din = In_inter_3_2_dout;

assign O_inter_3_2_din = tmp_8_reg_190;

assign O_temp_2_fu_343_p3 = ((and_ln130_reg_366[0:0] === 1'b1) ? grp_fu_260_p2 : p_0_2_i_i_i_reg_237);

assign W_inter_4_2_din = W_inter_3_2_dout;

assign and_ln130_fu_281_p2 = (icmp_ln130_fu_269_p2 & icmp_ln130_2_fu_275_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

always @ (*) begin
    ap_block_state1 = ((p_c_out_full_n == 1'b0) | (p_r_s_empty_n == 1'b0) | (p_k_s_empty_n == 1'b0) | (p_chout_s_empty_n == 1'b0) | (p_chin_s_empty_n == 1'b0) | (p_c_s_empty_n == 1'b0) | (1'b0 == add_ln207_1_loc_empty_n) | (1'b0 == add_ln207_5_loc_empty_n) | (real_start == 1'b0) | (p_k_out_full_n == 1'b0) | (p_chin_out_full_n == 1'b0) | (ap_done_reg == 1'b1));
end

always @ (*) begin
    ap_block_state3 = ((1'b0 == O_inter_3_2_full_n) & (icmp_ln122_fu_306_p2 == 1'd0));
end

always @ (*) begin
    ap_block_state5 = (((1'b0 == W_inter_4_2_full_n) & (icmp_ln126_fu_332_p2 == 1'd0)) | ((1'b0 == In_inter_3_3_full_n) & (icmp_ln126_fu_332_p2 == 1'd0)) | ((1'b0 == In_inter_3_2_empty_n) & (icmp_ln126_fu_332_p2 == 1'd0)) | ((1'b0 == W_inter_3_2_empty_n) & (icmp_ln126_fu_332_p2 == 1'd0)));
end

assign ap_ready = internal_ap_ready;

assign chi_fu_311_p2 = (chi_0_i_i_i_reg_203 + 31'd1);

assign col_fu_296_p2 = (col_0_i_i_i_reg_179 + 31'd1);

assign icmp_ln119_fu_291_p2 = (($signed(zext_ln119_fu_287_p1) < $signed(p_c_read_reg_350)) ? 1'b1 : 1'b0);

assign icmp_ln122_fu_306_p2 = (($signed(zext_ln122_fu_302_p1) < $signed(p_chin_read_reg_355)) ? 1'b1 : 1'b0);

assign icmp_ln124_fu_321_p2 = (($signed(zext_ln124_fu_317_p1) < $signed(p_k_read_reg_360)) ? 1'b1 : 1'b0);

assign icmp_ln126_fu_332_p2 = ((kc_0_i_i_i_reg_249 == p_k_read_reg_360) ? 1'b1 : 1'b0);

assign icmp_ln130_2_fu_275_p2 = (($signed(p_chout_s_dout) > $signed(add_ln207_1_loc_dout)) ? 1'b1 : 1'b0);

assign icmp_ln130_fu_269_p2 = (($signed(p_r_s_dout) > $signed(add_ln207_5_loc_dout)) ? 1'b1 : 1'b0);

assign kc_fu_337_p2 = (kc_0_i_i_i_reg_249 + 32'd1);

assign kr_fu_326_p2 = (kr_0_i_i_i_reg_226 + 31'd1);

assign p_c_out_din = p_c_s_dout;

assign p_chin_out_din = p_chin_s_dout;

assign p_k_out_din = p_k_s_dout;

assign start_out = real_start;

assign zext_ln119_fu_287_p1 = col_0_i_i_i_reg_179;

assign zext_ln122_fu_302_p1 = chi_0_i_i_i_reg_203;

assign zext_ln124_fu_317_p1 = kr_0_i_i_i_reg_226;

endmodule //PE35
