

================================================================
== Vivado HLS Report for 'Write_C_buf'
================================================================
* Date:           Sun Feb 28 10:35:30 2021

* Version:        2020.1 (Build 2897737 on Wed May 27 20:21:37 MDT 2020)
* Project:        conv_v1.prj
* Solution:       solution1
* Product family: zynquplus
* Target device:  xczu7ev-ffvc1156-2-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  | 10.00 ns | 8.750 ns |   1.25 ns  |
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+-----+------+---------+
    |  Latency (cycles) |   Latency (absolute)  |  Interval  | Pipeline|
    |   min   |   max   |    min    |    max    | min |  max |   Type  |
    +---------+---------+-----------+-----------+-----+------+---------+
    |        1|     3289| 10.000 ns | 32.890 us |    1|  3289|   none  |
    +---------+---------+-----------+-----------+-----+------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +-----------------+---------+---------+----------+-----------+-----------+--------+----------+
        |                 |  Latency (cycles) | Iteration|  Initiation Interval  |  Trip  |          |
        |    Loop Name    |   min   |   max   |  Latency |  achieved |   target  |  Count | Pipelined|
        +-----------------+---------+---------+----------+-----------+-----------+--------+----------+
        |- Loop 1         |        0|     3288| 12 ~ 822 |          -|          -|  0 ~ 4 |    no    |
        | + Loop 1.1      |       10|      820|  10 ~ 82 |          -|          -| 1 ~ 10 |    no    |
        |  ++ Loop 1.1.1  |        8|       80|         8|          -|          -| 1 ~ 10 |    no    |
        +-----------------+---------+---------+----------+-----------+-----------+--------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 11
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 2 
4 --> 5 3 
5 --> 6 
6 --> 7 
7 --> 8 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 4 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.65>
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%p_0_idx = alloca i64"   --->   Operation 12 'alloca' 'p_0_idx' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%row_read = call i32 @_ssdm_op_Read.ap_auto.i32(i32 %row)"   --->   Operation 13 'read' 'row_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%Out_ddr_offset1_read = call i64 @_ssdm_op_Read.ap_auto.i64(i64 %Out_ddr_offset1)"   --->   Operation 14 'read' 'Out_ddr_offset1_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%Out_ddr_offset_read = call i30 @_ssdm_op_Read.ap_auto.i30(i30 %Out_ddr_offset)"   --->   Operation 15 'read' 'Out_ddr_offset_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(float* %Out_ddr, [6 x i8]* @p_str36, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 64, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"   --->   Operation 16 'specinterface' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%p_c_load = load i32* @p_c_s, align 4" [conv_v1.cpp:295]   --->   Operation 17 'load' 'p_c_load' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%sext = zext i30 %Out_ddr_offset_read to i64"   --->   Operation 18 'zext' 'sext' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 19 [1/1] (0.65ns)   --->   "store i64 0, i64* %p_0_idx" [conv_v1.cpp:293]   --->   Operation 19 'store' <Predicate = true> <Delay = 0.65>
ST_1 : Operation 20 [1/1] (0.65ns)   --->   "br label %.loopexit" [conv_v1.cpp:293]   --->   Operation 20 'br' <Predicate = true> <Delay = 0.65>

State 2 <SV = 1> <Delay = 3.42>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%r_0 = phi i3 [ 0, %0 ], [ %r, %.loopexit.loopexit ]"   --->   Operation 21 'phi' 'r_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "%zext_ln293 = zext i3 %r_0 to i32" [conv_v1.cpp:293]   --->   Operation 22 'zext' 'zext_ln293' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 23 [1/1] (0.99ns)   --->   "%icmp_ln293 = icmp slt i32 %zext_ln293, %row_read" [conv_v1.cpp:293]   --->   Operation 23 'icmp' 'icmp_ln293' <Predicate = true> <Delay = 0.99> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopTripCount(i64 0, i64 4, i64 0)"   --->   Operation 24 'speclooptripcount' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (0.67ns)   --->   "%r = add i3 %r_0, 1" [conv_v1.cpp:293]   --->   Operation 25 'add' 'r' <Predicate = true> <Delay = 0.67> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "br i1 %icmp_ln293, label %.preheader, label %3" [conv_v1.cpp:293]   --->   Operation 26 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 27 [1/1] (3.42ns)   --->   "%mul_ln299 = mul i32 %p_c_load, %zext_ln293" [conv_v1.cpp:299]   --->   Operation 27 'mul' 'mul_ln299' <Predicate = (icmp_ln293)> <Delay = 3.42> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 28 [1/1] (0.65ns)   --->   "br label %1" [conv_v1.cpp:295]   --->   Operation 28 'br' <Predicate = (icmp_ln293)> <Delay = 0.65>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "ret void" [conv_v1.cpp:305]   --->   Operation 29 'ret' <Predicate = (!icmp_ln293)> <Delay = 0.00>

State 3 <SV = 2> <Delay = 1.00>
ST_3 : Operation 30 [1/1] (0.00ns)   --->   "%c_0 = phi i31 [ %c, %hls_label_24_end ], [ 0, %.preheader ]"   --->   Operation 30 'phi' 'c_0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 31 [1/1] (0.00ns)   --->   "%zext_ln295 = zext i31 %c_0 to i32" [conv_v1.cpp:295]   --->   Operation 31 'zext' 'zext_ln295' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 32 [1/1] (0.99ns)   --->   "%icmp_ln295 = icmp slt i32 %zext_ln295, %p_c_load" [conv_v1.cpp:295]   --->   Operation 32 'icmp' 'icmp_ln295' <Predicate = true> <Delay = 0.99> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 33 [1/1] (1.00ns)   --->   "%c = add i31 %c_0, 1" [conv_v1.cpp:295]   --->   Operation 33 'add' 'c' <Predicate = true> <Delay = 1.00> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 34 [1/1] (0.00ns)   --->   "br i1 %icmp_ln295, label %hls_label_24_begin, label %.loopexit.loopexit" [conv_v1.cpp:295]   --->   Operation 34 'br' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 35 [1/1] (0.00ns)   --->   "%tmp_2 = call i32 (...)* @_ssdm_op_SpecRegionBegin([13 x i8]* @p_str33)" [conv_v1.cpp:295]   --->   Operation 35 'specregionbegin' 'tmp_2' <Predicate = (icmp_ln295)> <Delay = 0.00>
ST_3 : Operation 36 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopTripCount(i32 1, i32 10, i32 5, [1 x i8]* @p_str) nounwind" [conv_v1.cpp:296]   --->   Operation 36 'speclooptripcount' <Predicate = (icmp_ln295)> <Delay = 0.00>
ST_3 : Operation 37 [1/1] (0.00ns)   --->   "%trunc_ln299 = trunc i31 %c_0 to i10" [conv_v1.cpp:299]   --->   Operation 37 'trunc' 'trunc_ln299' <Predicate = (icmp_ln295)> <Delay = 0.00>
ST_3 : Operation 38 [1/1] (0.65ns)   --->   "br label %2" [conv_v1.cpp:297]   --->   Operation 38 'br' <Predicate = (icmp_ln295)> <Delay = 0.65>
ST_3 : Operation 39 [1/1] (0.00ns)   --->   "br label %.loopexit"   --->   Operation 39 'br' <Predicate = (!icmp_ln295)> <Delay = 0.00>

State 4 <SV = 3> <Delay = 7.80>
ST_4 : Operation 40 [1/1] (0.00ns)   --->   "%p_2_rec = phi i64 [ 0, %hls_label_24_begin ], [ %add_ln299_2, %hls_label_25 ]" [conv_v1.cpp:299]   --->   Operation 40 'phi' 'p_2_rec' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 41 [1/1] (0.00ns)   --->   "%cho_0 = phi i32 [ 0, %hls_label_24_begin ], [ %cho, %hls_label_25 ]"   --->   Operation 41 'phi' 'cho_0' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 42 [1/1] (0.00ns)   --->   "%p_0_idx_load = load i64* %p_0_idx"   --->   Operation 42 'load' 'p_0_idx_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 43 [1/1] (1.08ns)   --->   "%p_1_idx8 = add i64 %p_2_rec, %p_0_idx_load" [conv_v1.cpp:299]   --->   Operation 43 'add' 'p_1_idx8' <Predicate = true> <Delay = 1.08> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 44 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%sum1 = add i64 %p_1_idx8, %Out_ddr_offset1_read" [conv_v1.cpp:299]   --->   Operation 44 'add' 'sum1' <Predicate = true> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.48> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 45 [1/1] (0.81ns) (root node of TernaryAdder)   --->   "%sum = add i64 %sum1, %sext" [conv_v1.cpp:299]   --->   Operation 45 'add' 'sum' <Predicate = true> <Delay = 0.81> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.48> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 46 [1/1] (0.00ns)   --->   "%Out_ddr_addr = getelementptr float* %Out_ddr, i64 %sum" [conv_v1.cpp:299]   --->   Operation 46 'getelementptr' 'Out_ddr_addr' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 47 [1/1] (0.00ns)   --->   "%p_chout_load = load i32* @p_chout_s, align 4" [conv_v1.cpp:297]   --->   Operation 47 'load' 'p_chout_load' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 48 [1/1] (0.99ns)   --->   "%icmp_ln297 = icmp slt i32 %cho_0, %p_chout_load" [conv_v1.cpp:297]   --->   Operation 48 'icmp' 'icmp_ln297' <Predicate = true> <Delay = 0.99> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 0.99> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 49 [1/1] (1.08ns)   --->   "%add_ln299_2 = add i64 %p_2_rec, 1" [conv_v1.cpp:299]   --->   Operation 49 'add' 'add_ln299_2' <Predicate = true> <Delay = 1.08> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 50 [1/1] (0.00ns)   --->   "br i1 %icmp_ln297, label %hls_label_25, label %hls_label_24_end" [conv_v1.cpp:297]   --->   Operation 50 'br' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 51 [1/1] (3.42ns)   --->   "%mul_ln299_1 = mul i32 %mul_ln299, %p_chout_load" [conv_v1.cpp:299]   --->   Operation 51 'mul' 'mul_ln299_1' <Predicate = (icmp_ln297)> <Delay = 3.42> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 52 [1/1] (0.00ns)   --->   "%trunc_ln299_1 = trunc i32 %mul_ln299_1 to i10" [conv_v1.cpp:299]   --->   Operation 52 'trunc' 'trunc_ln299_1' <Predicate = (icmp_ln297)> <Delay = 0.00>
ST_4 : Operation 53 [1/1] (0.00ns)   --->   "%trunc_ln299_2 = trunc i32 %p_chout_load to i10" [conv_v1.cpp:299]   --->   Operation 53 'trunc' 'trunc_ln299_2' <Predicate = (icmp_ln297)> <Delay = 0.00>
ST_4 : Operation 54 [1/1] (2.11ns)   --->   "%mul_ln299_2 = mul i10 %trunc_ln299_2, %trunc_ln299" [conv_v1.cpp:299]   --->   Operation 54 'mul' 'mul_ln299_2' <Predicate = (icmp_ln297)> <Delay = 2.11> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 55 [1/1] (0.00ns)   --->   "%trunc_ln299_3 = trunc i32 %cho_0 to i10" [conv_v1.cpp:299]   --->   Operation 55 'trunc' 'trunc_ln299_3' <Predicate = (icmp_ln297)> <Delay = 0.00>
ST_4 : Operation 56 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln299 = add i10 %trunc_ln299_3, %trunc_ln299_1" [conv_v1.cpp:299]   --->   Operation 56 'add' 'add_ln299' <Predicate = (icmp_ln297)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.48> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 57 [1/1] (0.96ns) (root node of TernaryAdder)   --->   "%add_ln299_1 = add i10 %add_ln299, %mul_ln299_2" [conv_v1.cpp:299]   --->   Operation 57 'add' 'add_ln299_1' <Predicate = (icmp_ln297)> <Delay = 0.96> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.48> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 58 [1/1] (0.00ns)   --->   "%sext_ln299 = sext i10 %add_ln299_1 to i64" [conv_v1.cpp:299]   --->   Operation 58 'sext' 'sext_ln299' <Predicate = (icmp_ln297)> <Delay = 0.00>
ST_4 : Operation 59 [1/1] (0.00ns)   --->   "%Out_buf_addr = getelementptr [500 x float]* %Out_buf, i64 0, i64 %sext_ln299" [conv_v1.cpp:299]   --->   Operation 59 'getelementptr' 'Out_buf_addr' <Predicate = (icmp_ln297)> <Delay = 0.00>
ST_4 : Operation 60 [2/2] (1.23ns)   --->   "%Out_buf_load = load float* %Out_buf_addr, align 4" [conv_v1.cpp:299]   --->   Operation 60 'load' 'Out_buf_load' <Predicate = (icmp_ln297)> <Delay = 1.23> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 500> <RAM>
ST_4 : Operation 61 [1/1] (3.42ns)   --->   "%mul_ln301 = mul i32 %p_chout_load, %zext_ln293" [conv_v1.cpp:301]   --->   Operation 61 'mul' 'mul_ln301' <Predicate = (icmp_ln297)> <Delay = 3.42> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 62 [1/1] (3.42ns)   --->   "%mul_ln301_1 = mul i32 %mul_ln301, %p_c_load" [conv_v1.cpp:301]   --->   Operation 62 'mul' 'mul_ln301_1' <Predicate = (icmp_ln297)> <Delay = 3.42> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 3.42> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 63 [1/1] (0.00ns)   --->   "%trunc_ln301 = trunc i32 %mul_ln301_1 to i10" [conv_v1.cpp:301]   --->   Operation 63 'trunc' 'trunc_ln301' <Predicate = (icmp_ln297)> <Delay = 0.00>
ST_4 : Operation 64 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln301 = add i10 %trunc_ln299_3, %mul_ln299_2" [conv_v1.cpp:301]   --->   Operation 64 'add' 'add_ln301' <Predicate = (icmp_ln297)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.48> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 65 [1/1] (0.96ns) (root node of TernaryAdder)   --->   "%add_ln301_1 = add i10 %add_ln301, %trunc_ln301" [conv_v1.cpp:301]   --->   Operation 65 'add' 'add_ln301_1' <Predicate = (icmp_ln297)> <Delay = 0.96> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.48> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_4 : Operation 66 [1/1] (1.01ns)   --->   "%cho = add nsw i32 1, %cho_0" [conv_v1.cpp:297]   --->   Operation 66 'add' 'cho' <Predicate = (icmp_ln297)> <Delay = 1.01> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 67 [1/1] (0.00ns)   --->   "%empty_11 = call i32 (...)* @_ssdm_op_SpecRegionEnd([13 x i8]* @p_str33, i32 %tmp_2)" [conv_v1.cpp:303]   --->   Operation 67 'specregionend' 'empty_11' <Predicate = (!icmp_ln297)> <Delay = 0.00>
ST_4 : Operation 68 [1/1] (0.65ns)   --->   "store i64 %p_1_idx8, i64* %p_0_idx" [conv_v1.cpp:295]   --->   Operation 68 'store' <Predicate = (!icmp_ln297)> <Delay = 0.65>
ST_4 : Operation 69 [1/1] (0.00ns)   --->   "br label %1" [conv_v1.cpp:295]   --->   Operation 69 'br' <Predicate = (!icmp_ln297)> <Delay = 0.00>

State 5 <SV = 4> <Delay = 8.75>
ST_5 : Operation 70 [1/2] (1.23ns)   --->   "%Out_buf_load = load float* %Out_buf_addr, align 4" [conv_v1.cpp:299]   --->   Operation 70 'load' 'Out_buf_load' <Predicate = true> <Delay = 1.23> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 500> <RAM>
ST_5 : Operation 71 [1/1] (8.75ns)   --->   "%Out_ddr_addr_req = call i1 @_ssdm_op_WriteReq.m_axi.floatP(float* %Out_ddr_addr, i32 1)" [conv_v1.cpp:299]   --->   Operation 71 'writereq' 'Out_ddr_addr_req' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_5 : Operation 72 [1/1] (0.00ns)   --->   "%sext_ln301 = sext i10 %add_ln301_1 to i64" [conv_v1.cpp:301]   --->   Operation 72 'sext' 'sext_ln301' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 73 [1/1] (0.00ns)   --->   "%Out_buf_addr_1 = getelementptr [500 x float]* %Out_buf, i64 0, i64 %sext_ln301" [conv_v1.cpp:301]   --->   Operation 73 'getelementptr' 'Out_buf_addr_1' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 74 [1/1] (1.23ns)   --->   "store float 0.000000e+00, float* %Out_buf_addr_1, align 4" [conv_v1.cpp:301]   --->   Operation 74 'store' <Predicate = true> <Delay = 1.23> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 500> <RAM>

State 6 <SV = 5> <Delay = 8.75>
ST_6 : Operation 75 [1/1] (8.75ns)   --->   "call void @_ssdm_op_Write.m_axi.floatP(float* %Out_ddr_addr, float %Out_buf_load, i4 -1)" [conv_v1.cpp:299]   --->   Operation 75 'write' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 7 <SV = 6> <Delay = 8.75>
ST_7 : Operation 76 [5/5] (8.75ns)   --->   "%Out_ddr_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %Out_ddr_addr)" [conv_v1.cpp:299]   --->   Operation 76 'writeresp' 'Out_ddr_addr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 8 <SV = 7> <Delay = 8.75>
ST_8 : Operation 77 [4/5] (8.75ns)   --->   "%Out_ddr_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %Out_ddr_addr)" [conv_v1.cpp:299]   --->   Operation 77 'writeresp' 'Out_ddr_addr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 9 <SV = 8> <Delay = 8.75>
ST_9 : Operation 78 [3/5] (8.75ns)   --->   "%Out_ddr_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %Out_ddr_addr)" [conv_v1.cpp:299]   --->   Operation 78 'writeresp' 'Out_ddr_addr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 10 <SV = 9> <Delay = 8.75>
ST_10 : Operation 79 [2/5] (8.75ns)   --->   "%Out_ddr_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %Out_ddr_addr)" [conv_v1.cpp:299]   --->   Operation 79 'writeresp' 'Out_ddr_addr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

State 11 <SV = 10> <Delay = 8.75>
ST_11 : Operation 80 [1/1] (0.00ns)   --->   "%tmp_3 = call i32 (...)* @_ssdm_op_SpecRegionBegin([13 x i8]* @p_str34)" [conv_v1.cpp:297]   --->   Operation 80 'specregionbegin' 'tmp_3' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 81 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopTripCount(i32 1, i32 10, i32 5, [1 x i8]* @p_str) nounwind" [conv_v1.cpp:298]   --->   Operation 81 'speclooptripcount' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 82 [1/5] (8.75ns)   --->   "%Out_ddr_addr_resp = call i1 @_ssdm_op_WriteResp.m_axi.floatP(float* %Out_ddr_addr)" [conv_v1.cpp:299]   --->   Operation 82 'writeresp' 'Out_ddr_addr_resp' <Predicate = true> <Delay = 8.75> <Core = "m_axi">   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_11 : Operation 83 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecRegionEnd([13 x i8]* @p_str34, i32 %tmp_3)" [conv_v1.cpp:302]   --->   Operation 83 'specregionend' 'empty' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 84 [1/1] (0.00ns)   --->   "br label %2" [conv_v1.cpp:297]   --->   Operation 84 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 0.656ns
The critical path consists of the following:
	'alloca' operation ('p_0_idx') [9]  (0 ns)
	'store' operation ('store_ln293', conv_v1.cpp:293) of constant 0 on local variable 'p_0_idx' [16]  (0.656 ns)

 <State 2>: 3.42ns
The critical path consists of the following:
	'phi' operation ('r') with incoming values : ('r', conv_v1.cpp:293) [19]  (0 ns)
	'mul' operation ('mul_ln299', conv_v1.cpp:299) [26]  (3.42 ns)

 <State 3>: 1.01ns
The critical path consists of the following:
	'phi' operation ('c') with incoming values : ('c', conv_v1.cpp:295) [29]  (0 ns)
	'add' operation ('c', conv_v1.cpp:295) [32]  (1.01 ns)

 <State 4>: 7.8ns
The critical path consists of the following:
	'load' operation ('p_chout_load', conv_v1.cpp:297) on static variable 'p_chout_s' [47]  (0 ns)
	'mul' operation ('mul_ln301', conv_v1.cpp:301) [67]  (3.42 ns)
	'mul' operation ('mul_ln301_1', conv_v1.cpp:301) [68]  (3.42 ns)
	'add' operation ('add_ln301_1', conv_v1.cpp:301) [71]  (0.96 ns)

 <State 5>: 8.75ns
The critical path consists of the following:
	bus request on port 'Out_ddr' (conv_v1.cpp:299) [64]  (8.75 ns)

 <State 6>: 8.75ns
The critical path consists of the following:
	bus write on port 'Out_ddr' (conv_v1.cpp:299) [65]  (8.75 ns)

 <State 7>: 8.75ns
The critical path consists of the following:
	bus access on port 'Out_ddr' (conv_v1.cpp:299) [66]  (8.75 ns)

 <State 8>: 8.75ns
The critical path consists of the following:
	bus access on port 'Out_ddr' (conv_v1.cpp:299) [66]  (8.75 ns)

 <State 9>: 8.75ns
The critical path consists of the following:
	bus access on port 'Out_ddr' (conv_v1.cpp:299) [66]  (8.75 ns)

 <State 10>: 8.75ns
The critical path consists of the following:
	bus access on port 'Out_ddr' (conv_v1.cpp:299) [66]  (8.75 ns)

 <State 11>: 8.75ns
The critical path consists of the following:
	bus access on port 'Out_ddr' (conv_v1.cpp:299) [66]  (8.75 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
