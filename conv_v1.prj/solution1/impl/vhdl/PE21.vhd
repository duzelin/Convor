-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity PE21 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    W_pre_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    W_pre_V_empty_n : IN STD_LOGIC;
    W_pre_V_read : OUT STD_LOGIC;
    In_pre_V_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    In_pre_V_empty_n : IN STD_LOGIC;
    In_pre_V_read : OUT STD_LOGIC;
    W_next_V8_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    W_next_V8_full_n : IN STD_LOGIC;
    W_next_V8_write : OUT STD_LOGIC;
    In_next_V50_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    In_next_V50_full_n : IN STD_LOGIC;
    In_next_V50_write : OUT STD_LOGIC;
    row_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    row_empty_n : IN STD_LOGIC;
    row_read : OUT STD_LOGIC;
    cho_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    cho_empty_n : IN STD_LOGIC;
    cho_read : OUT STD_LOGIC;
    O_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    O_V_full_n : IN STD_LOGIC;
    O_V_write : OUT STD_LOGIC;
    p_c_s_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    p_c_s_empty_n : IN STD_LOGIC;
    p_c_s_read : OUT STD_LOGIC;
    p_chin_s_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    p_chin_s_empty_n : IN STD_LOGIC;
    p_chin_s_read : OUT STD_LOGIC;
    p_k_s_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    p_k_s_empty_n : IN STD_LOGIC;
    p_k_s_read : OUT STD_LOGIC;
    row_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    row_out_full_n : IN STD_LOGIC;
    row_out_write : OUT STD_LOGIC;
    cho_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    cho_out_full_n : IN STD_LOGIC;
    cho_out_write : OUT STD_LOGIC;
    cho_out1_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    cho_out1_full_n : IN STD_LOGIC;
    cho_out1_write : OUT STD_LOGIC;
    p_c_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_c_out_full_n : IN STD_LOGIC;
    p_c_out_write : OUT STD_LOGIC;
    p_c_out2_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_c_out2_full_n : IN STD_LOGIC;
    p_c_out2_write : OUT STD_LOGIC;
    p_chin_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_chin_out_full_n : IN STD_LOGIC;
    p_chin_out_write : OUT STD_LOGIC;
    p_chin_out3_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_chin_out3_full_n : IN STD_LOGIC;
    p_chin_out3_write : OUT STD_LOGIC;
    p_chout_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_chout_out_full_n : IN STD_LOGIC;
    p_chout_out_write : OUT STD_LOGIC;
    p_chout_out4_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_chout_out4_full_n : IN STD_LOGIC;
    p_chout_out4_write : OUT STD_LOGIC;
    p_k_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_k_out_full_n : IN STD_LOGIC;
    p_k_out_write : OUT STD_LOGIC;
    p_k_out5_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_k_out5_full_n : IN STD_LOGIC;
    p_k_out5_write : OUT STD_LOGIC;
    p_r_out_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_r_out_full_n : IN STD_LOGIC;
    p_r_out_write : OUT STD_LOGIC;
    p_r_out6_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    p_r_out6_full_n : IN STD_LOGIC;
    p_r_out6_write : OUT STD_LOGIC;
    p_chout_s : IN STD_LOGIC_VECTOR (31 downto 0);
    p_r_s : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of PE21 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (10 downto 0) := "00000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (10 downto 0) := "00000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (10 downto 0) := "00000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (10 downto 0) := "00000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (10 downto 0) := "00000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (10 downto 0) := "00001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (10 downto 0) := "00010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (10 downto 0) := "00100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (10 downto 0) := "01000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (10 downto 0) := "10000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv31_1 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000001";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal W_pre_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal icmp_ln126_fu_428_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal In_pre_V_blk_n : STD_LOGIC;
    signal W_next_V8_blk_n : STD_LOGIC;
    signal In_next_V50_blk_n : STD_LOGIC;
    signal row_blk_n : STD_LOGIC;
    signal cho_blk_n : STD_LOGIC;
    signal O_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal icmp_ln122_fu_402_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_c_s_blk_n : STD_LOGIC;
    signal p_chin_s_blk_n : STD_LOGIC;
    signal p_k_s_blk_n : STD_LOGIC;
    signal row_out_blk_n : STD_LOGIC;
    signal cho_out_blk_n : STD_LOGIC;
    signal cho_out1_blk_n : STD_LOGIC;
    signal p_c_out_blk_n : STD_LOGIC;
    signal p_c_out2_blk_n : STD_LOGIC;
    signal p_chin_out_blk_n : STD_LOGIC;
    signal p_chin_out3_blk_n : STD_LOGIC;
    signal p_chout_out_blk_n : STD_LOGIC;
    signal p_chout_out4_blk_n : STD_LOGIC;
    signal p_k_out_blk_n : STD_LOGIC;
    signal p_k_out5_blk_n : STD_LOGIC;
    signal p_r_out_blk_n : STD_LOGIC;
    signal p_r_out6_blk_n : STD_LOGIC;
    signal p_c_read_reg_446 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal p_chin_read_reg_451 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_k_read_reg_456 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln130_fu_377_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln130_reg_462 : STD_LOGIC_VECTOR (0 downto 0);
    signal col_fu_392_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal col_reg_470 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal chi_fu_407_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal chi_reg_478 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_block_state3 : BOOLEAN;
    signal kr_fu_422_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal kr_reg_486 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal kc_fu_433_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal kc_reg_494 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state5 : BOOLEAN;
    signal tmp_72_reg_499 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_71_reg_504 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_349_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_i_i_reg_509 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal O_temp_16_fu_439_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal col_0_i_i_reg_263 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_reg_274 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln119_fu_387_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln124_fu_417_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal chi_0_i_i_reg_287 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_0_1_i_i_reg_298 : STD_LOGIC_VECTOR (31 downto 0);
    signal kr_0_i_i_reg_310 : STD_LOGIC_VECTOR (30 downto 0);
    signal p_0_2_i_i_reg_321 : STD_LOGIC_VECTOR (31 downto 0);
    signal kc_0_i_i_reg_333 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal icmp_ln130_fu_365_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln130_16_fu_371_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln119_fu_383_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln122_fu_398_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln124_fu_413_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_344_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (10 downto 0);

    component Systolic_Array_Cocud IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component Systolic_Array_CodEe IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    Systolic_Array_Cocud_U62 : component Systolic_Array_Cocud
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => p_0_2_i_i_reg_321,
        din1 => tmp_4_i_i_reg_509,
        ce => ap_const_logic_1,
        dout => grp_fu_344_p2);

    Systolic_Array_CodEe_U63 : component Systolic_Array_CodEe
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => tmp_71_reg_504,
        din1 => tmp_72_reg_499,
        ce => ap_const_logic_1,
        dout => grp_fu_349_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln119_fu_387_p2 = ap_const_lv1_0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    chi_0_i_i_reg_287_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln124_fu_417_p2 = ap_const_lv1_0))) then 
                chi_0_i_i_reg_287 <= chi_reg_478;
            elsif (((icmp_ln119_fu_387_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                chi_0_i_i_reg_287 <= ap_const_lv31_0;
            end if; 
        end if;
    end process;

    col_0_i_i_reg_263_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_0 = O_V_full_n) and (icmp_ln122_fu_402_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln122_fu_402_p2 = ap_const_lv1_0))) then 
                col_0_i_i_reg_263 <= col_reg_470;
            elsif ((not(((p_chin_out3_full_n = ap_const_logic_0) or (p_chin_out_full_n = ap_const_logic_0) or (p_c_out2_full_n = ap_const_logic_0) or (p_c_out_full_n = ap_const_logic_0) or (cho_out1_full_n = ap_const_logic_0) or (cho_out_full_n = ap_const_logic_0) or (row_out_full_n = ap_const_logic_0) or (p_k_s_empty_n = ap_const_logic_0) or (p_chin_s_empty_n = ap_const_logic_0) or (p_c_s_empty_n = ap_const_logic_0) or (cho_empty_n = ap_const_logic_0) or (row_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (p_r_out6_full_n = ap_const_logic_0) or (p_r_out_full_n = ap_const_logic_0) or (p_k_out5_full_n = ap_const_logic_0) or (p_k_out_full_n = ap_const_logic_0) or (p_chout_out4_full_n = ap_const_logic_0) or (p_chout_out_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                col_0_i_i_reg_263 <= ap_const_lv31_0;
            end if; 
        end if;
    end process;

    kc_0_i_i_reg_333_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                kc_0_i_i_reg_333 <= kc_reg_494;
            elsif (((icmp_ln124_fu_417_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                kc_0_i_i_reg_333 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    kr_0_i_i_reg_310_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((ap_const_logic_0 = W_next_V8_full_n) and (icmp_ln126_fu_428_p2 = ap_const_lv1_0)) or ((ap_const_logic_0 = In_next_V50_full_n) and (icmp_ln126_fu_428_p2 = ap_const_lv1_0)) or ((ap_const_logic_0 = In_pre_V_empty_n) and (icmp_ln126_fu_428_p2 = ap_const_lv1_0)) or ((ap_const_logic_0 = W_pre_V_empty_n) and (icmp_ln126_fu_428_p2 = ap_const_lv1_0)))) and (ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln126_fu_428_p2 = ap_const_lv1_1))) then 
                kr_0_i_i_reg_310 <= kr_reg_486;
            elsif ((not(((ap_const_logic_0 = O_V_full_n) and (icmp_ln122_fu_402_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln122_fu_402_p2 = ap_const_lv1_1))) then 
                kr_0_i_i_reg_310 <= ap_const_lv31_0;
            end if; 
        end if;
    end process;

    p_0_1_i_i_reg_298_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((ap_const_logic_0 = W_next_V8_full_n) and (icmp_ln126_fu_428_p2 = ap_const_lv1_0)) or ((ap_const_logic_0 = In_next_V50_full_n) and (icmp_ln126_fu_428_p2 = ap_const_lv1_0)) or ((ap_const_logic_0 = In_pre_V_empty_n) and (icmp_ln126_fu_428_p2 = ap_const_lv1_0)) or ((ap_const_logic_0 = W_pre_V_empty_n) and (icmp_ln126_fu_428_p2 = ap_const_lv1_0)))) and (ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln126_fu_428_p2 = ap_const_lv1_1))) then 
                p_0_1_i_i_reg_298 <= p_0_2_i_i_reg_321;
            elsif ((not(((ap_const_logic_0 = O_V_full_n) and (icmp_ln122_fu_402_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln122_fu_402_p2 = ap_const_lv1_1))) then 
                p_0_1_i_i_reg_298 <= tmp_reg_274;
            end if; 
        end if;
    end process;

    p_0_2_i_i_reg_321_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                p_0_2_i_i_reg_321 <= O_temp_16_fu_439_p3;
            elsif (((icmp_ln124_fu_417_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                p_0_2_i_i_reg_321 <= p_0_1_i_i_reg_298;
            end if; 
        end if;
    end process;

    tmp_reg_274_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln124_fu_417_p2 = ap_const_lv1_0))) then 
                tmp_reg_274 <= p_0_1_i_i_reg_298;
            elsif (((icmp_ln119_fu_387_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                tmp_reg_274 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((p_chin_out3_full_n = ap_const_logic_0) or (p_chin_out_full_n = ap_const_logic_0) or (p_c_out2_full_n = ap_const_logic_0) or (p_c_out_full_n = ap_const_logic_0) or (cho_out1_full_n = ap_const_logic_0) or (cho_out_full_n = ap_const_logic_0) or (row_out_full_n = ap_const_logic_0) or (p_k_s_empty_n = ap_const_logic_0) or (p_chin_s_empty_n = ap_const_logic_0) or (p_c_s_empty_n = ap_const_logic_0) or (cho_empty_n = ap_const_logic_0) or (row_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (p_r_out6_full_n = ap_const_logic_0) or (p_r_out_full_n = ap_const_logic_0) or (p_k_out5_full_n = ap_const_logic_0) or (p_k_out_full_n = ap_const_logic_0) or (p_chout_out4_full_n = ap_const_logic_0) or (p_chout_out_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                and_ln130_reg_462 <= and_ln130_fu_377_p2;
                p_c_read_reg_446 <= p_c_s_dout;
                p_chin_read_reg_451 <= p_chin_s_dout;
                p_k_read_reg_456 <= p_k_s_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_logic_0 = O_V_full_n) and (icmp_ln122_fu_402_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                chi_reg_478 <= chi_fu_407_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                col_reg_470 <= col_fu_392_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((ap_const_logic_0 = W_next_V8_full_n) and (icmp_ln126_fu_428_p2 = ap_const_lv1_0)) or ((ap_const_logic_0 = In_next_V50_full_n) and (icmp_ln126_fu_428_p2 = ap_const_lv1_0)) or ((ap_const_logic_0 = In_pre_V_empty_n) and (icmp_ln126_fu_428_p2 = ap_const_lv1_0)) or ((ap_const_logic_0 = W_pre_V_empty_n) and (icmp_ln126_fu_428_p2 = ap_const_lv1_0)))) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                kc_reg_494 <= kc_fu_433_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                kr_reg_486 <= kr_fu_422_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = and_ln130_reg_462) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                tmp_4_i_i_reg_509 <= grp_fu_349_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((((ap_const_logic_0 = W_next_V8_full_n) and (icmp_ln126_fu_428_p2 = ap_const_lv1_0)) or ((ap_const_logic_0 = In_next_V50_full_n) and (icmp_ln126_fu_428_p2 = ap_const_lv1_0)) or ((ap_const_logic_0 = In_pre_V_empty_n) and (icmp_ln126_fu_428_p2 = ap_const_lv1_0)) or ((ap_const_logic_0 = W_pre_V_empty_n) and (icmp_ln126_fu_428_p2 = ap_const_lv1_0)))) and (ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln126_fu_428_p2 = ap_const_lv1_0))) then
                tmp_71_reg_504 <= In_pre_V_dout;
                tmp_72_reg_499 <= W_pre_V_dout;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, W_pre_V_empty_n, In_pre_V_empty_n, W_next_V8_full_n, In_next_V50_full_n, row_empty_n, cho_empty_n, O_V_full_n, p_c_s_empty_n, p_chin_s_empty_n, p_k_s_empty_n, row_out_full_n, cho_out_full_n, cho_out1_full_n, p_c_out_full_n, p_c_out2_full_n, p_chin_out_full_n, p_chin_out3_full_n, p_chout_out_full_n, p_chout_out4_full_n, p_k_out_full_n, p_k_out5_full_n, p_r_out_full_n, p_r_out6_full_n, ap_CS_fsm_state5, icmp_ln126_fu_428_p2, ap_CS_fsm_state3, icmp_ln122_fu_402_p2, ap_CS_fsm_state2, ap_CS_fsm_state4, icmp_ln119_fu_387_p2, icmp_ln124_fu_417_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((p_chin_out3_full_n = ap_const_logic_0) or (p_chin_out_full_n = ap_const_logic_0) or (p_c_out2_full_n = ap_const_logic_0) or (p_c_out_full_n = ap_const_logic_0) or (cho_out1_full_n = ap_const_logic_0) or (cho_out_full_n = ap_const_logic_0) or (row_out_full_n = ap_const_logic_0) or (p_k_s_empty_n = ap_const_logic_0) or (p_chin_s_empty_n = ap_const_logic_0) or (p_c_s_empty_n = ap_const_logic_0) or (cho_empty_n = ap_const_logic_0) or (row_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (p_r_out6_full_n = ap_const_logic_0) or (p_r_out_full_n = ap_const_logic_0) or (p_k_out5_full_n = ap_const_logic_0) or (p_k_out_full_n = ap_const_logic_0) or (p_chout_out4_full_n = ap_const_logic_0) or (p_chout_out_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln119_fu_387_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if ((not(((ap_const_logic_0 = O_V_full_n) and (icmp_ln122_fu_402_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln122_fu_402_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                elsif ((not(((ap_const_logic_0 = O_V_full_n) and (icmp_ln122_fu_402_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln122_fu_402_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state4) and (icmp_ln124_fu_417_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state5 => 
                if ((not((((ap_const_logic_0 = W_next_V8_full_n) and (icmp_ln126_fu_428_p2 = ap_const_lv1_0)) or ((ap_const_logic_0 = In_next_V50_full_n) and (icmp_ln126_fu_428_p2 = ap_const_lv1_0)) or ((ap_const_logic_0 = In_pre_V_empty_n) and (icmp_ln126_fu_428_p2 = ap_const_lv1_0)) or ((ap_const_logic_0 = W_pre_V_empty_n) and (icmp_ln126_fu_428_p2 = ap_const_lv1_0)))) and (ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln126_fu_428_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                elsif ((not((((ap_const_logic_0 = W_next_V8_full_n) and (icmp_ln126_fu_428_p2 = ap_const_lv1_0)) or ((ap_const_logic_0 = In_next_V50_full_n) and (icmp_ln126_fu_428_p2 = ap_const_lv1_0)) or ((ap_const_logic_0 = In_pre_V_empty_n) and (icmp_ln126_fu_428_p2 = ap_const_lv1_0)) or ((ap_const_logic_0 = W_pre_V_empty_n) and (icmp_ln126_fu_428_p2 = ap_const_lv1_0)))) and (ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln126_fu_428_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXX";
        end case;
    end process;

    In_next_V50_blk_n_assign_proc : process(In_next_V50_full_n, ap_CS_fsm_state5, icmp_ln126_fu_428_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln126_fu_428_p2 = ap_const_lv1_0))) then 
            In_next_V50_blk_n <= In_next_V50_full_n;
        else 
            In_next_V50_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    In_next_V50_din <= In_pre_V_dout;

    In_next_V50_write_assign_proc : process(W_pre_V_empty_n, In_pre_V_empty_n, W_next_V8_full_n, In_next_V50_full_n, ap_CS_fsm_state5, icmp_ln126_fu_428_p2)
    begin
        if ((not((((ap_const_logic_0 = W_next_V8_full_n) and (icmp_ln126_fu_428_p2 = ap_const_lv1_0)) or ((ap_const_logic_0 = In_next_V50_full_n) and (icmp_ln126_fu_428_p2 = ap_const_lv1_0)) or ((ap_const_logic_0 = In_pre_V_empty_n) and (icmp_ln126_fu_428_p2 = ap_const_lv1_0)) or ((ap_const_logic_0 = W_pre_V_empty_n) and (icmp_ln126_fu_428_p2 = ap_const_lv1_0)))) and (ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln126_fu_428_p2 = ap_const_lv1_0))) then 
            In_next_V50_write <= ap_const_logic_1;
        else 
            In_next_V50_write <= ap_const_logic_0;
        end if; 
    end process;


    In_pre_V_blk_n_assign_proc : process(In_pre_V_empty_n, ap_CS_fsm_state5, icmp_ln126_fu_428_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln126_fu_428_p2 = ap_const_lv1_0))) then 
            In_pre_V_blk_n <= In_pre_V_empty_n;
        else 
            In_pre_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    In_pre_V_read_assign_proc : process(W_pre_V_empty_n, In_pre_V_empty_n, W_next_V8_full_n, In_next_V50_full_n, ap_CS_fsm_state5, icmp_ln126_fu_428_p2)
    begin
        if ((not((((ap_const_logic_0 = W_next_V8_full_n) and (icmp_ln126_fu_428_p2 = ap_const_lv1_0)) or ((ap_const_logic_0 = In_next_V50_full_n) and (icmp_ln126_fu_428_p2 = ap_const_lv1_0)) or ((ap_const_logic_0 = In_pre_V_empty_n) and (icmp_ln126_fu_428_p2 = ap_const_lv1_0)) or ((ap_const_logic_0 = W_pre_V_empty_n) and (icmp_ln126_fu_428_p2 = ap_const_lv1_0)))) and (ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln126_fu_428_p2 = ap_const_lv1_0))) then 
            In_pre_V_read <= ap_const_logic_1;
        else 
            In_pre_V_read <= ap_const_logic_0;
        end if; 
    end process;


    O_V_blk_n_assign_proc : process(O_V_full_n, ap_CS_fsm_state3, icmp_ln122_fu_402_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln122_fu_402_p2 = ap_const_lv1_0))) then 
            O_V_blk_n <= O_V_full_n;
        else 
            O_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    O_V_din <= tmp_reg_274;

    O_V_write_assign_proc : process(O_V_full_n, ap_CS_fsm_state3, icmp_ln122_fu_402_p2)
    begin
        if ((not(((ap_const_logic_0 = O_V_full_n) and (icmp_ln122_fu_402_p2 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state3) and (icmp_ln122_fu_402_p2 = ap_const_lv1_0))) then 
            O_V_write <= ap_const_logic_1;
        else 
            O_V_write <= ap_const_logic_0;
        end if; 
    end process;

    O_temp_16_fu_439_p3 <= 
        grp_fu_344_p2 when (and_ln130_reg_462(0) = '1') else 
        p_0_2_i_i_reg_321;

    W_next_V8_blk_n_assign_proc : process(W_next_V8_full_n, ap_CS_fsm_state5, icmp_ln126_fu_428_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln126_fu_428_p2 = ap_const_lv1_0))) then 
            W_next_V8_blk_n <= W_next_V8_full_n;
        else 
            W_next_V8_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    W_next_V8_din <= W_pre_V_dout;

    W_next_V8_write_assign_proc : process(W_pre_V_empty_n, In_pre_V_empty_n, W_next_V8_full_n, In_next_V50_full_n, ap_CS_fsm_state5, icmp_ln126_fu_428_p2)
    begin
        if ((not((((ap_const_logic_0 = W_next_V8_full_n) and (icmp_ln126_fu_428_p2 = ap_const_lv1_0)) or ((ap_const_logic_0 = In_next_V50_full_n) and (icmp_ln126_fu_428_p2 = ap_const_lv1_0)) or ((ap_const_logic_0 = In_pre_V_empty_n) and (icmp_ln126_fu_428_p2 = ap_const_lv1_0)) or ((ap_const_logic_0 = W_pre_V_empty_n) and (icmp_ln126_fu_428_p2 = ap_const_lv1_0)))) and (ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln126_fu_428_p2 = ap_const_lv1_0))) then 
            W_next_V8_write <= ap_const_logic_1;
        else 
            W_next_V8_write <= ap_const_logic_0;
        end if; 
    end process;


    W_pre_V_blk_n_assign_proc : process(W_pre_V_empty_n, ap_CS_fsm_state5, icmp_ln126_fu_428_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln126_fu_428_p2 = ap_const_lv1_0))) then 
            W_pre_V_blk_n <= W_pre_V_empty_n;
        else 
            W_pre_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    W_pre_V_read_assign_proc : process(W_pre_V_empty_n, In_pre_V_empty_n, W_next_V8_full_n, In_next_V50_full_n, ap_CS_fsm_state5, icmp_ln126_fu_428_p2)
    begin
        if ((not((((ap_const_logic_0 = W_next_V8_full_n) and (icmp_ln126_fu_428_p2 = ap_const_lv1_0)) or ((ap_const_logic_0 = In_next_V50_full_n) and (icmp_ln126_fu_428_p2 = ap_const_lv1_0)) or ((ap_const_logic_0 = In_pre_V_empty_n) and (icmp_ln126_fu_428_p2 = ap_const_lv1_0)) or ((ap_const_logic_0 = W_pre_V_empty_n) and (icmp_ln126_fu_428_p2 = ap_const_lv1_0)))) and (ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln126_fu_428_p2 = ap_const_lv1_0))) then 
            W_pre_V_read <= ap_const_logic_1;
        else 
            W_pre_V_read <= ap_const_logic_0;
        end if; 
    end process;

    and_ln130_fu_377_p2 <= (icmp_ln130_fu_365_p2 and icmp_ln130_16_fu_371_p2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);

    ap_block_state1_assign_proc : process(ap_start, ap_done_reg, row_empty_n, cho_empty_n, p_c_s_empty_n, p_chin_s_empty_n, p_k_s_empty_n, row_out_full_n, cho_out_full_n, cho_out1_full_n, p_c_out_full_n, p_c_out2_full_n, p_chin_out_full_n, p_chin_out3_full_n, p_chout_out_full_n, p_chout_out4_full_n, p_k_out_full_n, p_k_out5_full_n, p_r_out_full_n, p_r_out6_full_n)
    begin
                ap_block_state1 <= ((p_chin_out3_full_n = ap_const_logic_0) or (p_chin_out_full_n = ap_const_logic_0) or (p_c_out2_full_n = ap_const_logic_0) or (p_c_out_full_n = ap_const_logic_0) or (cho_out1_full_n = ap_const_logic_0) or (cho_out_full_n = ap_const_logic_0) or (row_out_full_n = ap_const_logic_0) or (p_k_s_empty_n = ap_const_logic_0) or (p_chin_s_empty_n = ap_const_logic_0) or (p_c_s_empty_n = ap_const_logic_0) or (cho_empty_n = ap_const_logic_0) or (row_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (p_r_out6_full_n = ap_const_logic_0) or (p_r_out_full_n = ap_const_logic_0) or (p_k_out5_full_n = ap_const_logic_0) or (p_k_out_full_n = ap_const_logic_0) or (p_chout_out4_full_n = ap_const_logic_0) or (p_chout_out_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;


    ap_block_state3_assign_proc : process(O_V_full_n, icmp_ln122_fu_402_p2)
    begin
                ap_block_state3 <= ((ap_const_logic_0 = O_V_full_n) and (icmp_ln122_fu_402_p2 = ap_const_lv1_0));
    end process;


    ap_block_state5_assign_proc : process(W_pre_V_empty_n, In_pre_V_empty_n, W_next_V8_full_n, In_next_V50_full_n, icmp_ln126_fu_428_p2)
    begin
                ap_block_state5 <= (((ap_const_logic_0 = W_next_V8_full_n) and (icmp_ln126_fu_428_p2 = ap_const_lv1_0)) or ((ap_const_logic_0 = In_next_V50_full_n) and (icmp_ln126_fu_428_p2 = ap_const_lv1_0)) or ((ap_const_logic_0 = In_pre_V_empty_n) and (icmp_ln126_fu_428_p2 = ap_const_lv1_0)) or ((ap_const_logic_0 = W_pre_V_empty_n) and (icmp_ln126_fu_428_p2 = ap_const_lv1_0)));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state2, icmp_ln119_fu_387_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln119_fu_387_p2 = ap_const_lv1_0))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, icmp_ln119_fu_387_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln119_fu_387_p2 = ap_const_lv1_0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    chi_fu_407_p2 <= std_logic_vector(unsigned(chi_0_i_i_reg_287) + unsigned(ap_const_lv31_1));

    cho_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, cho_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            cho_blk_n <= cho_empty_n;
        else 
            cho_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    cho_out1_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, cho_out1_full_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            cho_out1_blk_n <= cho_out1_full_n;
        else 
            cho_out1_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    cho_out1_din <= cho_dout;

    cho_out1_write_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, row_empty_n, cho_empty_n, p_c_s_empty_n, p_chin_s_empty_n, p_k_s_empty_n, row_out_full_n, cho_out_full_n, cho_out1_full_n, p_c_out_full_n, p_c_out2_full_n, p_chin_out_full_n, p_chin_out3_full_n, p_chout_out_full_n, p_chout_out4_full_n, p_k_out_full_n, p_k_out5_full_n, p_r_out_full_n, p_r_out6_full_n)
    begin
        if ((not(((p_chin_out3_full_n = ap_const_logic_0) or (p_chin_out_full_n = ap_const_logic_0) or (p_c_out2_full_n = ap_const_logic_0) or (p_c_out_full_n = ap_const_logic_0) or (cho_out1_full_n = ap_const_logic_0) or (cho_out_full_n = ap_const_logic_0) or (row_out_full_n = ap_const_logic_0) or (p_k_s_empty_n = ap_const_logic_0) or (p_chin_s_empty_n = ap_const_logic_0) or (p_c_s_empty_n = ap_const_logic_0) or (cho_empty_n = ap_const_logic_0) or (row_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (p_r_out6_full_n = ap_const_logic_0) or (p_r_out_full_n = ap_const_logic_0) or (p_k_out5_full_n = ap_const_logic_0) or (p_k_out_full_n = ap_const_logic_0) or (p_chout_out4_full_n = ap_const_logic_0) or (p_chout_out_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            cho_out1_write <= ap_const_logic_1;
        else 
            cho_out1_write <= ap_const_logic_0;
        end if; 
    end process;


    cho_out_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, cho_out_full_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            cho_out_blk_n <= cho_out_full_n;
        else 
            cho_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    cho_out_din <= cho_dout;

    cho_out_write_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, row_empty_n, cho_empty_n, p_c_s_empty_n, p_chin_s_empty_n, p_k_s_empty_n, row_out_full_n, cho_out_full_n, cho_out1_full_n, p_c_out_full_n, p_c_out2_full_n, p_chin_out_full_n, p_chin_out3_full_n, p_chout_out_full_n, p_chout_out4_full_n, p_k_out_full_n, p_k_out5_full_n, p_r_out_full_n, p_r_out6_full_n)
    begin
        if ((not(((p_chin_out3_full_n = ap_const_logic_0) or (p_chin_out_full_n = ap_const_logic_0) or (p_c_out2_full_n = ap_const_logic_0) or (p_c_out_full_n = ap_const_logic_0) or (cho_out1_full_n = ap_const_logic_0) or (cho_out_full_n = ap_const_logic_0) or (row_out_full_n = ap_const_logic_0) or (p_k_s_empty_n = ap_const_logic_0) or (p_chin_s_empty_n = ap_const_logic_0) or (p_c_s_empty_n = ap_const_logic_0) or (cho_empty_n = ap_const_logic_0) or (row_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (p_r_out6_full_n = ap_const_logic_0) or (p_r_out_full_n = ap_const_logic_0) or (p_k_out5_full_n = ap_const_logic_0) or (p_k_out_full_n = ap_const_logic_0) or (p_chout_out4_full_n = ap_const_logic_0) or (p_chout_out_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            cho_out_write <= ap_const_logic_1;
        else 
            cho_out_write <= ap_const_logic_0;
        end if; 
    end process;


    cho_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, row_empty_n, cho_empty_n, p_c_s_empty_n, p_chin_s_empty_n, p_k_s_empty_n, row_out_full_n, cho_out_full_n, cho_out1_full_n, p_c_out_full_n, p_c_out2_full_n, p_chin_out_full_n, p_chin_out3_full_n, p_chout_out_full_n, p_chout_out4_full_n, p_k_out_full_n, p_k_out5_full_n, p_r_out_full_n, p_r_out6_full_n)
    begin
        if ((not(((p_chin_out3_full_n = ap_const_logic_0) or (p_chin_out_full_n = ap_const_logic_0) or (p_c_out2_full_n = ap_const_logic_0) or (p_c_out_full_n = ap_const_logic_0) or (cho_out1_full_n = ap_const_logic_0) or (cho_out_full_n = ap_const_logic_0) or (row_out_full_n = ap_const_logic_0) or (p_k_s_empty_n = ap_const_logic_0) or (p_chin_s_empty_n = ap_const_logic_0) or (p_c_s_empty_n = ap_const_logic_0) or (cho_empty_n = ap_const_logic_0) or (row_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (p_r_out6_full_n = ap_const_logic_0) or (p_r_out_full_n = ap_const_logic_0) or (p_k_out5_full_n = ap_const_logic_0) or (p_k_out_full_n = ap_const_logic_0) or (p_chout_out4_full_n = ap_const_logic_0) or (p_chout_out_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            cho_read <= ap_const_logic_1;
        else 
            cho_read <= ap_const_logic_0;
        end if; 
    end process;

    col_fu_392_p2 <= std_logic_vector(unsigned(col_0_i_i_reg_263) + unsigned(ap_const_lv31_1));
    icmp_ln119_fu_387_p2 <= "1" when (signed(zext_ln119_fu_383_p1) < signed(p_c_read_reg_446)) else "0";
    icmp_ln122_fu_402_p2 <= "1" when (signed(zext_ln122_fu_398_p1) < signed(p_chin_read_reg_451)) else "0";
    icmp_ln124_fu_417_p2 <= "1" when (signed(zext_ln124_fu_413_p1) < signed(p_k_read_reg_456)) else "0";
    icmp_ln126_fu_428_p2 <= "1" when (kc_0_i_i_reg_333 = p_k_read_reg_456) else "0";
    icmp_ln130_16_fu_371_p2 <= "1" when (signed(p_chout_s) > signed(cho_dout)) else "0";
    icmp_ln130_fu_365_p2 <= "1" when (signed(p_r_s) > signed(row_dout)) else "0";
    kc_fu_433_p2 <= std_logic_vector(unsigned(kc_0_i_i_reg_333) + unsigned(ap_const_lv32_1));
    kr_fu_422_p2 <= std_logic_vector(unsigned(kr_0_i_i_reg_310) + unsigned(ap_const_lv31_1));

    p_c_out2_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_c_out2_full_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_c_out2_blk_n <= p_c_out2_full_n;
        else 
            p_c_out2_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    p_c_out2_din <= p_c_s_dout;

    p_c_out2_write_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, row_empty_n, cho_empty_n, p_c_s_empty_n, p_chin_s_empty_n, p_k_s_empty_n, row_out_full_n, cho_out_full_n, cho_out1_full_n, p_c_out_full_n, p_c_out2_full_n, p_chin_out_full_n, p_chin_out3_full_n, p_chout_out_full_n, p_chout_out4_full_n, p_k_out_full_n, p_k_out5_full_n, p_r_out_full_n, p_r_out6_full_n)
    begin
        if ((not(((p_chin_out3_full_n = ap_const_logic_0) or (p_chin_out_full_n = ap_const_logic_0) or (p_c_out2_full_n = ap_const_logic_0) or (p_c_out_full_n = ap_const_logic_0) or (cho_out1_full_n = ap_const_logic_0) or (cho_out_full_n = ap_const_logic_0) or (row_out_full_n = ap_const_logic_0) or (p_k_s_empty_n = ap_const_logic_0) or (p_chin_s_empty_n = ap_const_logic_0) or (p_c_s_empty_n = ap_const_logic_0) or (cho_empty_n = ap_const_logic_0) or (row_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (p_r_out6_full_n = ap_const_logic_0) or (p_r_out_full_n = ap_const_logic_0) or (p_k_out5_full_n = ap_const_logic_0) or (p_k_out_full_n = ap_const_logic_0) or (p_chout_out4_full_n = ap_const_logic_0) or (p_chout_out_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_c_out2_write <= ap_const_logic_1;
        else 
            p_c_out2_write <= ap_const_logic_0;
        end if; 
    end process;


    p_c_out_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_c_out_full_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_c_out_blk_n <= p_c_out_full_n;
        else 
            p_c_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    p_c_out_din <= p_c_s_dout;

    p_c_out_write_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, row_empty_n, cho_empty_n, p_c_s_empty_n, p_chin_s_empty_n, p_k_s_empty_n, row_out_full_n, cho_out_full_n, cho_out1_full_n, p_c_out_full_n, p_c_out2_full_n, p_chin_out_full_n, p_chin_out3_full_n, p_chout_out_full_n, p_chout_out4_full_n, p_k_out_full_n, p_k_out5_full_n, p_r_out_full_n, p_r_out6_full_n)
    begin
        if ((not(((p_chin_out3_full_n = ap_const_logic_0) or (p_chin_out_full_n = ap_const_logic_0) or (p_c_out2_full_n = ap_const_logic_0) or (p_c_out_full_n = ap_const_logic_0) or (cho_out1_full_n = ap_const_logic_0) or (cho_out_full_n = ap_const_logic_0) or (row_out_full_n = ap_const_logic_0) or (p_k_s_empty_n = ap_const_logic_0) or (p_chin_s_empty_n = ap_const_logic_0) or (p_c_s_empty_n = ap_const_logic_0) or (cho_empty_n = ap_const_logic_0) or (row_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (p_r_out6_full_n = ap_const_logic_0) or (p_r_out_full_n = ap_const_logic_0) or (p_k_out5_full_n = ap_const_logic_0) or (p_k_out_full_n = ap_const_logic_0) or (p_chout_out4_full_n = ap_const_logic_0) or (p_chout_out_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_c_out_write <= ap_const_logic_1;
        else 
            p_c_out_write <= ap_const_logic_0;
        end if; 
    end process;


    p_c_s_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_c_s_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_c_s_blk_n <= p_c_s_empty_n;
        else 
            p_c_s_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_c_s_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, row_empty_n, cho_empty_n, p_c_s_empty_n, p_chin_s_empty_n, p_k_s_empty_n, row_out_full_n, cho_out_full_n, cho_out1_full_n, p_c_out_full_n, p_c_out2_full_n, p_chin_out_full_n, p_chin_out3_full_n, p_chout_out_full_n, p_chout_out4_full_n, p_k_out_full_n, p_k_out5_full_n, p_r_out_full_n, p_r_out6_full_n)
    begin
        if ((not(((p_chin_out3_full_n = ap_const_logic_0) or (p_chin_out_full_n = ap_const_logic_0) or (p_c_out2_full_n = ap_const_logic_0) or (p_c_out_full_n = ap_const_logic_0) or (cho_out1_full_n = ap_const_logic_0) or (cho_out_full_n = ap_const_logic_0) or (row_out_full_n = ap_const_logic_0) or (p_k_s_empty_n = ap_const_logic_0) or (p_chin_s_empty_n = ap_const_logic_0) or (p_c_s_empty_n = ap_const_logic_0) or (cho_empty_n = ap_const_logic_0) or (row_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (p_r_out6_full_n = ap_const_logic_0) or (p_r_out_full_n = ap_const_logic_0) or (p_k_out5_full_n = ap_const_logic_0) or (p_k_out_full_n = ap_const_logic_0) or (p_chout_out4_full_n = ap_const_logic_0) or (p_chout_out_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_c_s_read <= ap_const_logic_1;
        else 
            p_c_s_read <= ap_const_logic_0;
        end if; 
    end process;


    p_chin_out3_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_chin_out3_full_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_chin_out3_blk_n <= p_chin_out3_full_n;
        else 
            p_chin_out3_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    p_chin_out3_din <= p_chin_s_dout;

    p_chin_out3_write_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, row_empty_n, cho_empty_n, p_c_s_empty_n, p_chin_s_empty_n, p_k_s_empty_n, row_out_full_n, cho_out_full_n, cho_out1_full_n, p_c_out_full_n, p_c_out2_full_n, p_chin_out_full_n, p_chin_out3_full_n, p_chout_out_full_n, p_chout_out4_full_n, p_k_out_full_n, p_k_out5_full_n, p_r_out_full_n, p_r_out6_full_n)
    begin
        if ((not(((p_chin_out3_full_n = ap_const_logic_0) or (p_chin_out_full_n = ap_const_logic_0) or (p_c_out2_full_n = ap_const_logic_0) or (p_c_out_full_n = ap_const_logic_0) or (cho_out1_full_n = ap_const_logic_0) or (cho_out_full_n = ap_const_logic_0) or (row_out_full_n = ap_const_logic_0) or (p_k_s_empty_n = ap_const_logic_0) or (p_chin_s_empty_n = ap_const_logic_0) or (p_c_s_empty_n = ap_const_logic_0) or (cho_empty_n = ap_const_logic_0) or (row_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (p_r_out6_full_n = ap_const_logic_0) or (p_r_out_full_n = ap_const_logic_0) or (p_k_out5_full_n = ap_const_logic_0) or (p_k_out_full_n = ap_const_logic_0) or (p_chout_out4_full_n = ap_const_logic_0) or (p_chout_out_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_chin_out3_write <= ap_const_logic_1;
        else 
            p_chin_out3_write <= ap_const_logic_0;
        end if; 
    end process;


    p_chin_out_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_chin_out_full_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_chin_out_blk_n <= p_chin_out_full_n;
        else 
            p_chin_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    p_chin_out_din <= p_chin_s_dout;

    p_chin_out_write_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, row_empty_n, cho_empty_n, p_c_s_empty_n, p_chin_s_empty_n, p_k_s_empty_n, row_out_full_n, cho_out_full_n, cho_out1_full_n, p_c_out_full_n, p_c_out2_full_n, p_chin_out_full_n, p_chin_out3_full_n, p_chout_out_full_n, p_chout_out4_full_n, p_k_out_full_n, p_k_out5_full_n, p_r_out_full_n, p_r_out6_full_n)
    begin
        if ((not(((p_chin_out3_full_n = ap_const_logic_0) or (p_chin_out_full_n = ap_const_logic_0) or (p_c_out2_full_n = ap_const_logic_0) or (p_c_out_full_n = ap_const_logic_0) or (cho_out1_full_n = ap_const_logic_0) or (cho_out_full_n = ap_const_logic_0) or (row_out_full_n = ap_const_logic_0) or (p_k_s_empty_n = ap_const_logic_0) or (p_chin_s_empty_n = ap_const_logic_0) or (p_c_s_empty_n = ap_const_logic_0) or (cho_empty_n = ap_const_logic_0) or (row_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (p_r_out6_full_n = ap_const_logic_0) or (p_r_out_full_n = ap_const_logic_0) or (p_k_out5_full_n = ap_const_logic_0) or (p_k_out_full_n = ap_const_logic_0) or (p_chout_out4_full_n = ap_const_logic_0) or (p_chout_out_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_chin_out_write <= ap_const_logic_1;
        else 
            p_chin_out_write <= ap_const_logic_0;
        end if; 
    end process;


    p_chin_s_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_chin_s_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_chin_s_blk_n <= p_chin_s_empty_n;
        else 
            p_chin_s_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_chin_s_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, row_empty_n, cho_empty_n, p_c_s_empty_n, p_chin_s_empty_n, p_k_s_empty_n, row_out_full_n, cho_out_full_n, cho_out1_full_n, p_c_out_full_n, p_c_out2_full_n, p_chin_out_full_n, p_chin_out3_full_n, p_chout_out_full_n, p_chout_out4_full_n, p_k_out_full_n, p_k_out5_full_n, p_r_out_full_n, p_r_out6_full_n)
    begin
        if ((not(((p_chin_out3_full_n = ap_const_logic_0) or (p_chin_out_full_n = ap_const_logic_0) or (p_c_out2_full_n = ap_const_logic_0) or (p_c_out_full_n = ap_const_logic_0) or (cho_out1_full_n = ap_const_logic_0) or (cho_out_full_n = ap_const_logic_0) or (row_out_full_n = ap_const_logic_0) or (p_k_s_empty_n = ap_const_logic_0) or (p_chin_s_empty_n = ap_const_logic_0) or (p_c_s_empty_n = ap_const_logic_0) or (cho_empty_n = ap_const_logic_0) or (row_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (p_r_out6_full_n = ap_const_logic_0) or (p_r_out_full_n = ap_const_logic_0) or (p_k_out5_full_n = ap_const_logic_0) or (p_k_out_full_n = ap_const_logic_0) or (p_chout_out4_full_n = ap_const_logic_0) or (p_chout_out_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_chin_s_read <= ap_const_logic_1;
        else 
            p_chin_s_read <= ap_const_logic_0;
        end if; 
    end process;


    p_chout_out4_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_chout_out4_full_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_chout_out4_blk_n <= p_chout_out4_full_n;
        else 
            p_chout_out4_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    p_chout_out4_din <= p_chout_s;

    p_chout_out4_write_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, row_empty_n, cho_empty_n, p_c_s_empty_n, p_chin_s_empty_n, p_k_s_empty_n, row_out_full_n, cho_out_full_n, cho_out1_full_n, p_c_out_full_n, p_c_out2_full_n, p_chin_out_full_n, p_chin_out3_full_n, p_chout_out_full_n, p_chout_out4_full_n, p_k_out_full_n, p_k_out5_full_n, p_r_out_full_n, p_r_out6_full_n)
    begin
        if ((not(((p_chin_out3_full_n = ap_const_logic_0) or (p_chin_out_full_n = ap_const_logic_0) or (p_c_out2_full_n = ap_const_logic_0) or (p_c_out_full_n = ap_const_logic_0) or (cho_out1_full_n = ap_const_logic_0) or (cho_out_full_n = ap_const_logic_0) or (row_out_full_n = ap_const_logic_0) or (p_k_s_empty_n = ap_const_logic_0) or (p_chin_s_empty_n = ap_const_logic_0) or (p_c_s_empty_n = ap_const_logic_0) or (cho_empty_n = ap_const_logic_0) or (row_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (p_r_out6_full_n = ap_const_logic_0) or (p_r_out_full_n = ap_const_logic_0) or (p_k_out5_full_n = ap_const_logic_0) or (p_k_out_full_n = ap_const_logic_0) or (p_chout_out4_full_n = ap_const_logic_0) or (p_chout_out_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_chout_out4_write <= ap_const_logic_1;
        else 
            p_chout_out4_write <= ap_const_logic_0;
        end if; 
    end process;


    p_chout_out_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_chout_out_full_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_chout_out_blk_n <= p_chout_out_full_n;
        else 
            p_chout_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    p_chout_out_din <= p_chout_s;

    p_chout_out_write_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, row_empty_n, cho_empty_n, p_c_s_empty_n, p_chin_s_empty_n, p_k_s_empty_n, row_out_full_n, cho_out_full_n, cho_out1_full_n, p_c_out_full_n, p_c_out2_full_n, p_chin_out_full_n, p_chin_out3_full_n, p_chout_out_full_n, p_chout_out4_full_n, p_k_out_full_n, p_k_out5_full_n, p_r_out_full_n, p_r_out6_full_n)
    begin
        if ((not(((p_chin_out3_full_n = ap_const_logic_0) or (p_chin_out_full_n = ap_const_logic_0) or (p_c_out2_full_n = ap_const_logic_0) or (p_c_out_full_n = ap_const_logic_0) or (cho_out1_full_n = ap_const_logic_0) or (cho_out_full_n = ap_const_logic_0) or (row_out_full_n = ap_const_logic_0) or (p_k_s_empty_n = ap_const_logic_0) or (p_chin_s_empty_n = ap_const_logic_0) or (p_c_s_empty_n = ap_const_logic_0) or (cho_empty_n = ap_const_logic_0) or (row_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (p_r_out6_full_n = ap_const_logic_0) or (p_r_out_full_n = ap_const_logic_0) or (p_k_out5_full_n = ap_const_logic_0) or (p_k_out_full_n = ap_const_logic_0) or (p_chout_out4_full_n = ap_const_logic_0) or (p_chout_out_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_chout_out_write <= ap_const_logic_1;
        else 
            p_chout_out_write <= ap_const_logic_0;
        end if; 
    end process;


    p_k_out5_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_k_out5_full_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_k_out5_blk_n <= p_k_out5_full_n;
        else 
            p_k_out5_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    p_k_out5_din <= p_k_s_dout;

    p_k_out5_write_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, row_empty_n, cho_empty_n, p_c_s_empty_n, p_chin_s_empty_n, p_k_s_empty_n, row_out_full_n, cho_out_full_n, cho_out1_full_n, p_c_out_full_n, p_c_out2_full_n, p_chin_out_full_n, p_chin_out3_full_n, p_chout_out_full_n, p_chout_out4_full_n, p_k_out_full_n, p_k_out5_full_n, p_r_out_full_n, p_r_out6_full_n)
    begin
        if ((not(((p_chin_out3_full_n = ap_const_logic_0) or (p_chin_out_full_n = ap_const_logic_0) or (p_c_out2_full_n = ap_const_logic_0) or (p_c_out_full_n = ap_const_logic_0) or (cho_out1_full_n = ap_const_logic_0) or (cho_out_full_n = ap_const_logic_0) or (row_out_full_n = ap_const_logic_0) or (p_k_s_empty_n = ap_const_logic_0) or (p_chin_s_empty_n = ap_const_logic_0) or (p_c_s_empty_n = ap_const_logic_0) or (cho_empty_n = ap_const_logic_0) or (row_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (p_r_out6_full_n = ap_const_logic_0) or (p_r_out_full_n = ap_const_logic_0) or (p_k_out5_full_n = ap_const_logic_0) or (p_k_out_full_n = ap_const_logic_0) or (p_chout_out4_full_n = ap_const_logic_0) or (p_chout_out_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_k_out5_write <= ap_const_logic_1;
        else 
            p_k_out5_write <= ap_const_logic_0;
        end if; 
    end process;


    p_k_out_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_k_out_full_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_k_out_blk_n <= p_k_out_full_n;
        else 
            p_k_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    p_k_out_din <= p_k_s_dout;

    p_k_out_write_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, row_empty_n, cho_empty_n, p_c_s_empty_n, p_chin_s_empty_n, p_k_s_empty_n, row_out_full_n, cho_out_full_n, cho_out1_full_n, p_c_out_full_n, p_c_out2_full_n, p_chin_out_full_n, p_chin_out3_full_n, p_chout_out_full_n, p_chout_out4_full_n, p_k_out_full_n, p_k_out5_full_n, p_r_out_full_n, p_r_out6_full_n)
    begin
        if ((not(((p_chin_out3_full_n = ap_const_logic_0) or (p_chin_out_full_n = ap_const_logic_0) or (p_c_out2_full_n = ap_const_logic_0) or (p_c_out_full_n = ap_const_logic_0) or (cho_out1_full_n = ap_const_logic_0) or (cho_out_full_n = ap_const_logic_0) or (row_out_full_n = ap_const_logic_0) or (p_k_s_empty_n = ap_const_logic_0) or (p_chin_s_empty_n = ap_const_logic_0) or (p_c_s_empty_n = ap_const_logic_0) or (cho_empty_n = ap_const_logic_0) or (row_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (p_r_out6_full_n = ap_const_logic_0) or (p_r_out_full_n = ap_const_logic_0) or (p_k_out5_full_n = ap_const_logic_0) or (p_k_out_full_n = ap_const_logic_0) or (p_chout_out4_full_n = ap_const_logic_0) or (p_chout_out_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_k_out_write <= ap_const_logic_1;
        else 
            p_k_out_write <= ap_const_logic_0;
        end if; 
    end process;


    p_k_s_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_k_s_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_k_s_blk_n <= p_k_s_empty_n;
        else 
            p_k_s_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_k_s_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, row_empty_n, cho_empty_n, p_c_s_empty_n, p_chin_s_empty_n, p_k_s_empty_n, row_out_full_n, cho_out_full_n, cho_out1_full_n, p_c_out_full_n, p_c_out2_full_n, p_chin_out_full_n, p_chin_out3_full_n, p_chout_out_full_n, p_chout_out4_full_n, p_k_out_full_n, p_k_out5_full_n, p_r_out_full_n, p_r_out6_full_n)
    begin
        if ((not(((p_chin_out3_full_n = ap_const_logic_0) or (p_chin_out_full_n = ap_const_logic_0) or (p_c_out2_full_n = ap_const_logic_0) or (p_c_out_full_n = ap_const_logic_0) or (cho_out1_full_n = ap_const_logic_0) or (cho_out_full_n = ap_const_logic_0) or (row_out_full_n = ap_const_logic_0) or (p_k_s_empty_n = ap_const_logic_0) or (p_chin_s_empty_n = ap_const_logic_0) or (p_c_s_empty_n = ap_const_logic_0) or (cho_empty_n = ap_const_logic_0) or (row_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (p_r_out6_full_n = ap_const_logic_0) or (p_r_out_full_n = ap_const_logic_0) or (p_k_out5_full_n = ap_const_logic_0) or (p_k_out_full_n = ap_const_logic_0) or (p_chout_out4_full_n = ap_const_logic_0) or (p_chout_out_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_k_s_read <= ap_const_logic_1;
        else 
            p_k_s_read <= ap_const_logic_0;
        end if; 
    end process;


    p_r_out6_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_r_out6_full_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_r_out6_blk_n <= p_r_out6_full_n;
        else 
            p_r_out6_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    p_r_out6_din <= p_r_s;

    p_r_out6_write_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, row_empty_n, cho_empty_n, p_c_s_empty_n, p_chin_s_empty_n, p_k_s_empty_n, row_out_full_n, cho_out_full_n, cho_out1_full_n, p_c_out_full_n, p_c_out2_full_n, p_chin_out_full_n, p_chin_out3_full_n, p_chout_out_full_n, p_chout_out4_full_n, p_k_out_full_n, p_k_out5_full_n, p_r_out_full_n, p_r_out6_full_n)
    begin
        if ((not(((p_chin_out3_full_n = ap_const_logic_0) or (p_chin_out_full_n = ap_const_logic_0) or (p_c_out2_full_n = ap_const_logic_0) or (p_c_out_full_n = ap_const_logic_0) or (cho_out1_full_n = ap_const_logic_0) or (cho_out_full_n = ap_const_logic_0) or (row_out_full_n = ap_const_logic_0) or (p_k_s_empty_n = ap_const_logic_0) or (p_chin_s_empty_n = ap_const_logic_0) or (p_c_s_empty_n = ap_const_logic_0) or (cho_empty_n = ap_const_logic_0) or (row_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (p_r_out6_full_n = ap_const_logic_0) or (p_r_out_full_n = ap_const_logic_0) or (p_k_out5_full_n = ap_const_logic_0) or (p_k_out_full_n = ap_const_logic_0) or (p_chout_out4_full_n = ap_const_logic_0) or (p_chout_out_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_r_out6_write <= ap_const_logic_1;
        else 
            p_r_out6_write <= ap_const_logic_0;
        end if; 
    end process;


    p_r_out_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, p_r_out_full_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_r_out_blk_n <= p_r_out_full_n;
        else 
            p_r_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    p_r_out_din <= p_r_s;

    p_r_out_write_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, row_empty_n, cho_empty_n, p_c_s_empty_n, p_chin_s_empty_n, p_k_s_empty_n, row_out_full_n, cho_out_full_n, cho_out1_full_n, p_c_out_full_n, p_c_out2_full_n, p_chin_out_full_n, p_chin_out3_full_n, p_chout_out_full_n, p_chout_out4_full_n, p_k_out_full_n, p_k_out5_full_n, p_r_out_full_n, p_r_out6_full_n)
    begin
        if ((not(((p_chin_out3_full_n = ap_const_logic_0) or (p_chin_out_full_n = ap_const_logic_0) or (p_c_out2_full_n = ap_const_logic_0) or (p_c_out_full_n = ap_const_logic_0) or (cho_out1_full_n = ap_const_logic_0) or (cho_out_full_n = ap_const_logic_0) or (row_out_full_n = ap_const_logic_0) or (p_k_s_empty_n = ap_const_logic_0) or (p_chin_s_empty_n = ap_const_logic_0) or (p_c_s_empty_n = ap_const_logic_0) or (cho_empty_n = ap_const_logic_0) or (row_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (p_r_out6_full_n = ap_const_logic_0) or (p_r_out_full_n = ap_const_logic_0) or (p_k_out5_full_n = ap_const_logic_0) or (p_k_out_full_n = ap_const_logic_0) or (p_chout_out4_full_n = ap_const_logic_0) or (p_chout_out_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_r_out_write <= ap_const_logic_1;
        else 
            p_r_out_write <= ap_const_logic_0;
        end if; 
    end process;


    row_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, row_empty_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            row_blk_n <= row_empty_n;
        else 
            row_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    row_out_blk_n_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, row_out_full_n)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            row_out_blk_n <= row_out_full_n;
        else 
            row_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    row_out_din <= row_dout;

    row_out_write_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, row_empty_n, cho_empty_n, p_c_s_empty_n, p_chin_s_empty_n, p_k_s_empty_n, row_out_full_n, cho_out_full_n, cho_out1_full_n, p_c_out_full_n, p_c_out2_full_n, p_chin_out_full_n, p_chin_out3_full_n, p_chout_out_full_n, p_chout_out4_full_n, p_k_out_full_n, p_k_out5_full_n, p_r_out_full_n, p_r_out6_full_n)
    begin
        if ((not(((p_chin_out3_full_n = ap_const_logic_0) or (p_chin_out_full_n = ap_const_logic_0) or (p_c_out2_full_n = ap_const_logic_0) or (p_c_out_full_n = ap_const_logic_0) or (cho_out1_full_n = ap_const_logic_0) or (cho_out_full_n = ap_const_logic_0) or (row_out_full_n = ap_const_logic_0) or (p_k_s_empty_n = ap_const_logic_0) or (p_chin_s_empty_n = ap_const_logic_0) or (p_c_s_empty_n = ap_const_logic_0) or (cho_empty_n = ap_const_logic_0) or (row_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (p_r_out6_full_n = ap_const_logic_0) or (p_r_out_full_n = ap_const_logic_0) or (p_k_out5_full_n = ap_const_logic_0) or (p_k_out_full_n = ap_const_logic_0) or (p_chout_out4_full_n = ap_const_logic_0) or (p_chout_out_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            row_out_write <= ap_const_logic_1;
        else 
            row_out_write <= ap_const_logic_0;
        end if; 
    end process;


    row_read_assign_proc : process(ap_start, ap_done_reg, ap_CS_fsm_state1, row_empty_n, cho_empty_n, p_c_s_empty_n, p_chin_s_empty_n, p_k_s_empty_n, row_out_full_n, cho_out_full_n, cho_out1_full_n, p_c_out_full_n, p_c_out2_full_n, p_chin_out_full_n, p_chin_out3_full_n, p_chout_out_full_n, p_chout_out4_full_n, p_k_out_full_n, p_k_out5_full_n, p_r_out_full_n, p_r_out6_full_n)
    begin
        if ((not(((p_chin_out3_full_n = ap_const_logic_0) or (p_chin_out_full_n = ap_const_logic_0) or (p_c_out2_full_n = ap_const_logic_0) or (p_c_out_full_n = ap_const_logic_0) or (cho_out1_full_n = ap_const_logic_0) or (cho_out_full_n = ap_const_logic_0) or (row_out_full_n = ap_const_logic_0) or (p_k_s_empty_n = ap_const_logic_0) or (p_chin_s_empty_n = ap_const_logic_0) or (p_c_s_empty_n = ap_const_logic_0) or (cho_empty_n = ap_const_logic_0) or (row_empty_n = ap_const_logic_0) or (ap_start = ap_const_logic_0) or (p_r_out6_full_n = ap_const_logic_0) or (p_r_out_full_n = ap_const_logic_0) or (p_k_out5_full_n = ap_const_logic_0) or (p_k_out_full_n = ap_const_logic_0) or (p_chout_out4_full_n = ap_const_logic_0) or (p_chout_out_full_n = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            row_read <= ap_const_logic_1;
        else 
            row_read <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln119_fu_383_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(col_0_i_i_reg_263),32));
    zext_ln122_fu_398_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(chi_0_i_i_reg_287),32));
    zext_ln124_fu_413_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(kr_0_i_i_reg_310),32));
end behav;
