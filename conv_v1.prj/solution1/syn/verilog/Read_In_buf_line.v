// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module Read_In_buf_line (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        In_buf_address0,
        In_buf_ce0,
        In_buf_we0,
        In_buf_d0,
        m_axi_In_ddr_AWVALID,
        m_axi_In_ddr_AWREADY,
        m_axi_In_ddr_AWADDR,
        m_axi_In_ddr_AWID,
        m_axi_In_ddr_AWLEN,
        m_axi_In_ddr_AWSIZE,
        m_axi_In_ddr_AWBURST,
        m_axi_In_ddr_AWLOCK,
        m_axi_In_ddr_AWCACHE,
        m_axi_In_ddr_AWPROT,
        m_axi_In_ddr_AWQOS,
        m_axi_In_ddr_AWREGION,
        m_axi_In_ddr_AWUSER,
        m_axi_In_ddr_WVALID,
        m_axi_In_ddr_WREADY,
        m_axi_In_ddr_WDATA,
        m_axi_In_ddr_WSTRB,
        m_axi_In_ddr_WLAST,
        m_axi_In_ddr_WID,
        m_axi_In_ddr_WUSER,
        m_axi_In_ddr_ARVALID,
        m_axi_In_ddr_ARREADY,
        m_axi_In_ddr_ARADDR,
        m_axi_In_ddr_ARID,
        m_axi_In_ddr_ARLEN,
        m_axi_In_ddr_ARSIZE,
        m_axi_In_ddr_ARBURST,
        m_axi_In_ddr_ARLOCK,
        m_axi_In_ddr_ARCACHE,
        m_axi_In_ddr_ARPROT,
        m_axi_In_ddr_ARQOS,
        m_axi_In_ddr_ARREGION,
        m_axi_In_ddr_ARUSER,
        m_axi_In_ddr_RVALID,
        m_axi_In_ddr_RREADY,
        m_axi_In_ddr_RDATA,
        m_axi_In_ddr_RLAST,
        m_axi_In_ddr_RID,
        m_axi_In_ddr_RUSER,
        m_axi_In_ddr_RRESP,
        m_axi_In_ddr_BVALID,
        m_axi_In_ddr_BREADY,
        m_axi_In_ddr_BRESP,
        m_axi_In_ddr_BID,
        m_axi_In_ddr_BUSER,
        In_ddr_offset,
        row,
        p_p_s,
        p_cinp_s,
        p_chin_s,
        In_buffer_end,
        In_buffer_length,
        p_rinp_s
);

parameter    ap_ST_fsm_state1 = 117'd1;
parameter    ap_ST_fsm_state2 = 117'd2;
parameter    ap_ST_fsm_state3 = 117'd4;
parameter    ap_ST_fsm_state4 = 117'd8;
parameter    ap_ST_fsm_state5 = 117'd16;
parameter    ap_ST_fsm_state6 = 117'd32;
parameter    ap_ST_fsm_state7 = 117'd64;
parameter    ap_ST_fsm_state8 = 117'd128;
parameter    ap_ST_fsm_state9 = 117'd256;
parameter    ap_ST_fsm_state10 = 117'd512;
parameter    ap_ST_fsm_state11 = 117'd1024;
parameter    ap_ST_fsm_state12 = 117'd2048;
parameter    ap_ST_fsm_state13 = 117'd4096;
parameter    ap_ST_fsm_state14 = 117'd8192;
parameter    ap_ST_fsm_state15 = 117'd16384;
parameter    ap_ST_fsm_state16 = 117'd32768;
parameter    ap_ST_fsm_state17 = 117'd65536;
parameter    ap_ST_fsm_state18 = 117'd131072;
parameter    ap_ST_fsm_state19 = 117'd262144;
parameter    ap_ST_fsm_state20 = 117'd524288;
parameter    ap_ST_fsm_state21 = 117'd1048576;
parameter    ap_ST_fsm_state22 = 117'd2097152;
parameter    ap_ST_fsm_state23 = 117'd4194304;
parameter    ap_ST_fsm_state24 = 117'd8388608;
parameter    ap_ST_fsm_state25 = 117'd16777216;
parameter    ap_ST_fsm_state26 = 117'd33554432;
parameter    ap_ST_fsm_state27 = 117'd67108864;
parameter    ap_ST_fsm_state28 = 117'd134217728;
parameter    ap_ST_fsm_state29 = 117'd268435456;
parameter    ap_ST_fsm_state30 = 117'd536870912;
parameter    ap_ST_fsm_state31 = 117'd1073741824;
parameter    ap_ST_fsm_state32 = 117'd2147483648;
parameter    ap_ST_fsm_state33 = 117'd4294967296;
parameter    ap_ST_fsm_state34 = 117'd8589934592;
parameter    ap_ST_fsm_state35 = 117'd17179869184;
parameter    ap_ST_fsm_state36 = 117'd34359738368;
parameter    ap_ST_fsm_state37 = 117'd68719476736;
parameter    ap_ST_fsm_state38 = 117'd137438953472;
parameter    ap_ST_fsm_state39 = 117'd274877906944;
parameter    ap_ST_fsm_state40 = 117'd549755813888;
parameter    ap_ST_fsm_state41 = 117'd1099511627776;
parameter    ap_ST_fsm_state42 = 117'd2199023255552;
parameter    ap_ST_fsm_state43 = 117'd4398046511104;
parameter    ap_ST_fsm_state44 = 117'd8796093022208;
parameter    ap_ST_fsm_state45 = 117'd17592186044416;
parameter    ap_ST_fsm_state46 = 117'd35184372088832;
parameter    ap_ST_fsm_state47 = 117'd70368744177664;
parameter    ap_ST_fsm_state48 = 117'd140737488355328;
parameter    ap_ST_fsm_state49 = 117'd281474976710656;
parameter    ap_ST_fsm_state50 = 117'd562949953421312;
parameter    ap_ST_fsm_state51 = 117'd1125899906842624;
parameter    ap_ST_fsm_state52 = 117'd2251799813685248;
parameter    ap_ST_fsm_state53 = 117'd4503599627370496;
parameter    ap_ST_fsm_state54 = 117'd9007199254740992;
parameter    ap_ST_fsm_state55 = 117'd18014398509481984;
parameter    ap_ST_fsm_state56 = 117'd36028797018963968;
parameter    ap_ST_fsm_state57 = 117'd72057594037927936;
parameter    ap_ST_fsm_state58 = 117'd144115188075855872;
parameter    ap_ST_fsm_state59 = 117'd288230376151711744;
parameter    ap_ST_fsm_state60 = 117'd576460752303423488;
parameter    ap_ST_fsm_state61 = 117'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 117'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 117'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 117'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 117'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 117'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 117'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 117'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 117'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 117'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 117'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 117'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 117'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 117'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 117'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 117'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 117'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 117'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 117'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 117'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 117'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 117'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 117'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 117'd9671406556917033397649408;
parameter    ap_ST_fsm_state85 = 117'd19342813113834066795298816;
parameter    ap_ST_fsm_state86 = 117'd38685626227668133590597632;
parameter    ap_ST_fsm_state87 = 117'd77371252455336267181195264;
parameter    ap_ST_fsm_state88 = 117'd154742504910672534362390528;
parameter    ap_ST_fsm_state89 = 117'd309485009821345068724781056;
parameter    ap_ST_fsm_state90 = 117'd618970019642690137449562112;
parameter    ap_ST_fsm_state91 = 117'd1237940039285380274899124224;
parameter    ap_ST_fsm_state92 = 117'd2475880078570760549798248448;
parameter    ap_ST_fsm_state93 = 117'd4951760157141521099596496896;
parameter    ap_ST_fsm_state94 = 117'd9903520314283042199192993792;
parameter    ap_ST_fsm_state95 = 117'd19807040628566084398385987584;
parameter    ap_ST_fsm_state96 = 117'd39614081257132168796771975168;
parameter    ap_ST_fsm_state97 = 117'd79228162514264337593543950336;
parameter    ap_ST_fsm_state98 = 117'd158456325028528675187087900672;
parameter    ap_ST_fsm_state99 = 117'd316912650057057350374175801344;
parameter    ap_ST_fsm_state100 = 117'd633825300114114700748351602688;
parameter    ap_ST_fsm_state101 = 117'd1267650600228229401496703205376;
parameter    ap_ST_fsm_state102 = 117'd2535301200456458802993406410752;
parameter    ap_ST_fsm_state103 = 117'd5070602400912917605986812821504;
parameter    ap_ST_fsm_state104 = 117'd10141204801825835211973625643008;
parameter    ap_ST_fsm_state105 = 117'd20282409603651670423947251286016;
parameter    ap_ST_fsm_state106 = 117'd40564819207303340847894502572032;
parameter    ap_ST_fsm_state107 = 117'd81129638414606681695789005144064;
parameter    ap_ST_fsm_state108 = 117'd162259276829213363391578010288128;
parameter    ap_ST_fsm_state109 = 117'd324518553658426726783156020576256;
parameter    ap_ST_fsm_state110 = 117'd649037107316853453566312041152512;
parameter    ap_ST_fsm_state111 = 117'd1298074214633706907132624082305024;
parameter    ap_ST_fsm_state112 = 117'd2596148429267413814265248164610048;
parameter    ap_ST_fsm_state113 = 117'd5192296858534827628530496329220096;
parameter    ap_ST_fsm_state114 = 117'd10384593717069655257060992658440192;
parameter    ap_ST_fsm_state115 = 117'd20769187434139310514121985316880384;
parameter    ap_ST_fsm_state116 = 117'd41538374868278621028243970633760768;
parameter    ap_ST_fsm_state117 = 117'd83076749736557242056487941267521536;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [8:0] In_buf_address0;
output   In_buf_ce0;
output   In_buf_we0;
output  [31:0] In_buf_d0;
output   m_axi_In_ddr_AWVALID;
input   m_axi_In_ddr_AWREADY;
output  [31:0] m_axi_In_ddr_AWADDR;
output  [0:0] m_axi_In_ddr_AWID;
output  [31:0] m_axi_In_ddr_AWLEN;
output  [2:0] m_axi_In_ddr_AWSIZE;
output  [1:0] m_axi_In_ddr_AWBURST;
output  [1:0] m_axi_In_ddr_AWLOCK;
output  [3:0] m_axi_In_ddr_AWCACHE;
output  [2:0] m_axi_In_ddr_AWPROT;
output  [3:0] m_axi_In_ddr_AWQOS;
output  [3:0] m_axi_In_ddr_AWREGION;
output  [0:0] m_axi_In_ddr_AWUSER;
output   m_axi_In_ddr_WVALID;
input   m_axi_In_ddr_WREADY;
output  [31:0] m_axi_In_ddr_WDATA;
output  [3:0] m_axi_In_ddr_WSTRB;
output   m_axi_In_ddr_WLAST;
output  [0:0] m_axi_In_ddr_WID;
output  [0:0] m_axi_In_ddr_WUSER;
output   m_axi_In_ddr_ARVALID;
input   m_axi_In_ddr_ARREADY;
output  [31:0] m_axi_In_ddr_ARADDR;
output  [0:0] m_axi_In_ddr_ARID;
output  [31:0] m_axi_In_ddr_ARLEN;
output  [2:0] m_axi_In_ddr_ARSIZE;
output  [1:0] m_axi_In_ddr_ARBURST;
output  [1:0] m_axi_In_ddr_ARLOCK;
output  [3:0] m_axi_In_ddr_ARCACHE;
output  [2:0] m_axi_In_ddr_ARPROT;
output  [3:0] m_axi_In_ddr_ARQOS;
output  [3:0] m_axi_In_ddr_ARREGION;
output  [0:0] m_axi_In_ddr_ARUSER;
input   m_axi_In_ddr_RVALID;
output   m_axi_In_ddr_RREADY;
input  [31:0] m_axi_In_ddr_RDATA;
input   m_axi_In_ddr_RLAST;
input  [0:0] m_axi_In_ddr_RID;
input  [0:0] m_axi_In_ddr_RUSER;
input  [1:0] m_axi_In_ddr_RRESP;
input   m_axi_In_ddr_BVALID;
output   m_axi_In_ddr_BREADY;
input  [1:0] m_axi_In_ddr_BRESP;
input  [0:0] m_axi_In_ddr_BID;
input  [0:0] m_axi_In_ddr_BUSER;
input  [29:0] In_ddr_offset;
input  [31:0] row;
input  [31:0] p_p_s;
input  [31:0] p_cinp_s;
input  [31:0] p_chin_s;
input  [31:0] In_buffer_end;
input  [31:0] In_buffer_length;
input  [31:0] p_rinp_s;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[8:0] In_buf_address0;
reg In_buf_ce0;
reg In_buf_we0;
reg[31:0] In_buf_d0;
reg m_axi_In_ddr_ARVALID;
reg m_axi_In_ddr_RREADY;

(* fsm_encoding = "none" *) reg   [116:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    In_ddr_blk_n_AR;
wire    ap_CS_fsm_state3;
reg    In_ddr_blk_n_R;
wire    ap_CS_fsm_state44;
wire   [31:0] select_ln234_fu_246_p3;
reg   [31:0] select_ln234_reg_563;
wire   [0:0] icmp_ln234_fu_254_p2;
reg   [0:0] icmp_ln234_reg_568;
wire   [0:0] icmp_ln234_1_fu_348_p2;
reg   [0:0] icmp_ln234_1_reg_602;
wire   [31:0] sub_ln245_fu_354_p2;
reg   [31:0] sub_ln245_reg_606;
wire  signed [32:0] sext_ln253_fu_366_p1;
reg  signed [32:0] sext_ln253_reg_611;
wire   [33:0] zext_ln243_1_fu_370_p1;
reg   [33:0] zext_ln243_1_reg_616;
wire   [30:0] i_1_fu_383_p2;
reg   [30:0] i_1_reg_624;
wire    ap_CS_fsm_state2;
wire   [0:0] or_ln245_fu_399_p2;
reg   [0:0] or_ln245_reg_629;
wire   [0:0] icmp_ln243_fu_378_p2;
wire  signed [31:0] mul_ln248_fu_405_p2;
reg  signed [31:0] mul_ln248_reg_633;
reg   [31:0] In_ddr_addr_reg_639;
wire   [30:0] i_fu_447_p2;
reg   [30:0] i_reg_648;
wire   [31:0] mul_ln239_fu_453_p2;
reg   [31:0] mul_ln239_reg_653;
wire   [0:0] icmp_ln235_fu_442_p2;
wire   [30:0] j_2_fu_467_p2;
reg   [30:0] j_2_reg_661;
wire    ap_CS_fsm_state10;
wire   [0:0] icmp_ln251_fu_462_p2;
reg   [31:0] In_ddr_addr_read_reg_671;
wire   [30:0] j_1_fu_502_p2;
reg   [30:0] j_1_reg_679;
wire    ap_CS_fsm_state46;
wire   [0:0] icmp_ln246_fu_497_p2;
wire   [30:0] j_fu_537_p2;
reg   [30:0] j_reg_692;
wire    ap_CS_fsm_state82;
wire   [0:0] icmp_ln237_fu_532_p2;
reg   [30:0] i1_0_reg_139;
reg   [30:0] i_0_reg_150;
reg   [30:0] j3_0_reg_161;
wire    ap_CS_fsm_state45;
wire    ap_CS_fsm_state9;
reg   [30:0] j2_0_reg_172;
wire    ap_CS_fsm_state81;
reg   [30:0] j_0_reg_183;
wire    ap_CS_fsm_state117;
wire  signed [63:0] sext_ln253_3_fu_488_p1;
wire  signed [63:0] sext_ln248_fu_523_p1;
wire  signed [63:0] sext_ln239_fu_558_p1;
wire  signed [63:0] sext_ln253_4_fu_428_p1;
wire   [31:0] sub_ln234_1_fu_206_p2;
wire   [30:0] lshr_ln234_1_fu_212_p4;
wire   [31:0] zext_ln234_fu_222_p1;
wire   [30:0] lshr_ln234_2_fu_232_p4;
wire   [0:0] tmp_16_fu_198_p3;
wire   [31:0] sub_ln234_2_fu_226_p2;
wire   [31:0] zext_ln234_1_fu_242_p1;
wire  signed [31:0] icmp_ln234_fu_254_p1;
wire   [31:0] add_ln234_fu_280_p2;
wire   [31:0] sub_ln234_3_fu_294_p2;
wire   [30:0] lshr_ln234_4_fu_300_p4;
wire   [31:0] zext_ln234_2_fu_310_p1;
wire   [30:0] lshr_ln234_5_fu_320_p4;
wire   [0:0] tmp_17_fu_286_p3;
wire   [31:0] sub_ln234_4_fu_314_p2;
wire   [31:0] zext_ln234_3_fu_330_p1;
wire   [31:0] select_ln234_1_fu_334_p3;
wire   [31:0] sub_ln234_fu_342_p2;
wire  signed [31:0] icmp_ln234_1_fu_348_p1;
wire  signed [31:0] sub_ln245_fu_354_p0;
wire  signed [31:0] mul_ln253_fu_360_p0;
wire  signed [31:0] mul_ln253_fu_360_p1;
wire   [31:0] mul_ln253_fu_360_p2;
wire   [31:0] zext_ln243_fu_374_p1;
wire  signed [31:0] icmp_ln243_fu_378_p1;
wire   [0:0] icmp_ln245_fu_389_p2;
wire   [0:0] icmp_ln245_1_fu_394_p2;
wire  signed [31:0] mul_ln248_fu_405_p0;
wire   [30:0] mul_ln248_fu_405_p1;
wire  signed [32:0] sext_ln253_1_fu_410_p1;
wire   [32:0] add_ln253_fu_414_p2;
wire  signed [33:0] sext_ln253_2_fu_419_p1;
wire   [33:0] add_ln253_1_fu_423_p2;
wire   [31:0] zext_ln235_fu_438_p1;
wire  signed [31:0] icmp_ln235_fu_442_p1;
wire  signed [31:0] mul_ln239_fu_453_p0;
wire   [30:0] mul_ln239_fu_453_p1;
wire   [31:0] zext_ln251_fu_458_p1;
wire  signed [31:0] icmp_ln251_fu_462_p1;
wire   [31:0] add_ln253_2_fu_473_p2;
wire   [31:0] grp_fu_483_p0;
wire   [31:0] grp_fu_483_p2;
wire   [31:0] zext_ln246_fu_493_p1;
wire  signed [31:0] icmp_ln246_fu_497_p1;
wire   [31:0] add_ln248_fu_508_p2;
wire   [31:0] grp_fu_518_p0;
wire   [31:0] grp_fu_518_p2;
wire   [31:0] zext_ln237_fu_528_p1;
wire  signed [31:0] icmp_ln237_fu_532_p1;
wire   [31:0] add_ln239_fu_543_p2;
wire   [31:0] grp_fu_553_p0;
wire   [31:0] grp_fu_553_p2;
reg    grp_fu_483_ap_start;
wire    grp_fu_483_ap_done;
reg    grp_fu_483_ce;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state22;
wire    ap_CS_fsm_state23;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state25;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state28;
wire    ap_CS_fsm_state29;
wire    ap_CS_fsm_state30;
wire    ap_CS_fsm_state31;
wire    ap_CS_fsm_state32;
wire    ap_CS_fsm_state33;
wire    ap_CS_fsm_state34;
wire    ap_CS_fsm_state35;
wire    ap_CS_fsm_state36;
wire    ap_CS_fsm_state37;
wire    ap_CS_fsm_state38;
wire    ap_CS_fsm_state39;
wire    ap_CS_fsm_state40;
wire    ap_CS_fsm_state41;
wire    ap_CS_fsm_state42;
wire    ap_CS_fsm_state43;
reg    grp_fu_518_ap_start;
wire    grp_fu_518_ap_done;
reg    grp_fu_553_ap_start;
wire    grp_fu_553_ap_done;
reg   [116:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 117'd1;
end

Systolic_Array_Cobkb #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Systolic_Array_Cobkb_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_483_ap_start),
    .done(grp_fu_483_ap_done),
    .din0(grp_fu_483_p0),
    .din1(In_buffer_length),
    .ce(grp_fu_483_ce),
    .dout(grp_fu_483_p2)
);

Systolic_Array_Cobkb #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Systolic_Array_Cobkb_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_518_ap_start),
    .done(grp_fu_518_ap_done),
    .din0(grp_fu_518_p0),
    .din1(In_buffer_length),
    .ce(1'b1),
    .dout(grp_fu_518_p2)
);

Systolic_Array_Cobkb #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
Systolic_Array_Cobkb_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_553_ap_start),
    .done(grp_fu_553_ap_done),
    .din0(grp_fu_553_p0),
    .din1(In_buffer_length),
    .ce(1'b1),
    .dout(grp_fu_553_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (icmp_ln234_1_fu_348_p2 == 1'd0) & (icmp_ln234_fu_254_p2 == 1'd0) & (ap_start == 1'b1))) begin
        i1_0_reg_139 <= 31'd0;
    end else if (((1'b1 == ap_CS_fsm_state10) & ((or_ln245_reg_629 == 1'd1) | (icmp_ln251_fu_462_p2 == 1'd0)))) begin
        i1_0_reg_139 <= i_1_reg_624;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state82) & (icmp_ln237_fu_532_p2 == 1'd0))) begin
        i_0_reg_150 <= i_reg_648;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & ((icmp_ln234_1_fu_348_p2 == 1'd1) | (icmp_ln234_fu_254_p2 == 1'd1)))) begin
        i_0_reg_150 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln243_fu_378_p2 == 1'd1) & (or_ln245_fu_399_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln234_1_reg_602 == 1'd0) & (icmp_ln234_reg_568 == 1'd0))) begin
        j2_0_reg_172 <= 31'd0;
    end else if ((1'b1 == ap_CS_fsm_state81)) begin
        j2_0_reg_172 <= j_1_reg_679;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        j3_0_reg_161 <= 31'd0;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        j3_0_reg_161 <= j_2_reg_661;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state117)) begin
        j_0_reg_183 <= j_reg_692;
    end else if (((1'b1 == ap_CS_fsm_state2) & (((icmp_ln235_fu_442_p2 == 1'd1) & (icmp_ln234_reg_568 == 1'd1)) | ((icmp_ln235_fu_442_p2 == 1'd1) & (icmp_ln234_1_reg_602 == 1'd1))))) begin
        j_0_reg_183 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state44) & (m_axi_In_ddr_RVALID == 1'b1))) begin
        In_ddr_addr_read_reg_671 <= m_axi_In_ddr_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln243_fu_378_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2) & (or_ln245_fu_399_p2 == 1'd0) & (icmp_ln234_1_reg_602 == 1'd0) & (icmp_ln234_reg_568 == 1'd0))) begin
        In_ddr_addr_reg_639 <= sext_ln253_4_fu_428_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln234_1_reg_602 == 1'd0) & (icmp_ln234_reg_568 == 1'd0))) begin
        i_1_reg_624 <= i_1_fu_383_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & ((icmp_ln234_1_reg_602 == 1'd1) | (icmp_ln234_reg_568 == 1'd1)))) begin
        i_reg_648 <= i_fu_447_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (icmp_ln234_fu_254_p2 == 1'd0) & (ap_start == 1'b1))) begin
        icmp_ln234_1_reg_602 <= icmp_ln234_1_fu_348_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        icmp_ln234_reg_568 <= icmp_ln234_fu_254_p2;
        select_ln234_reg_563 <= select_ln234_fu_246_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        j_1_reg_679 <= j_1_fu_502_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (or_ln245_reg_629 == 1'd0))) begin
        j_2_reg_661 <= j_2_fu_467_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state82)) begin
        j_reg_692 <= j_fu_537_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (((icmp_ln235_fu_442_p2 == 1'd1) & (icmp_ln234_reg_568 == 1'd1)) | ((icmp_ln235_fu_442_p2 == 1'd1) & (icmp_ln234_1_reg_602 == 1'd1))))) begin
        mul_ln239_reg_653 <= mul_ln239_fu_453_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln243_fu_378_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln234_1_reg_602 == 1'd0) & (icmp_ln234_reg_568 == 1'd0))) begin
        mul_ln248_reg_633 <= mul_ln248_fu_405_p2;
        or_ln245_reg_629 <= or_ln245_fu_399_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (icmp_ln234_1_fu_348_p2 == 1'd0) & (icmp_ln234_fu_254_p2 == 1'd0) & (ap_start == 1'b1))) begin
        sext_ln253_reg_611 <= sext_ln253_fu_366_p1;
        sub_ln245_reg_606 <= sub_ln245_fu_354_p2;
        zext_ln243_1_reg_616[29 : 0] <= zext_ln243_1_fu_370_p1[29 : 0];
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state117)) begin
        In_buf_address0 = sext_ln239_fu_558_p1;
    end else if ((1'b1 == ap_CS_fsm_state81)) begin
        In_buf_address0 = sext_ln248_fu_523_p1;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        In_buf_address0 = sext_ln253_3_fu_488_p1;
    end else begin
        In_buf_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state117) | (1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state45))) begin
        In_buf_ce0 = 1'b1;
    end else begin
        In_buf_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state117) | (1'b1 == ap_CS_fsm_state81))) begin
        In_buf_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        In_buf_d0 = In_ddr_addr_read_reg_671;
    end else begin
        In_buf_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state117) | (1'b1 == ap_CS_fsm_state81) | (1'b1 == ap_CS_fsm_state45))) begin
        In_buf_we0 = 1'b1;
    end else begin
        In_buf_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        In_ddr_blk_n_AR = m_axi_In_ddr_ARREADY;
    end else begin
        In_ddr_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        In_ddr_blk_n_R = m_axi_In_ddr_RVALID;
    end else begin
        In_ddr_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state2) & ((((icmp_ln234_reg_568 == 1'd1) & (icmp_ln235_fu_442_p2 == 1'd0)) | ((icmp_ln234_1_reg_602 == 1'd1) & (icmp_ln235_fu_442_p2 == 1'd0))) | ((icmp_ln243_fu_378_p2 == 1'd0) & (icmp_ln234_1_reg_602 == 1'd0) & (icmp_ln234_reg_568 == 1'd0)))) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & ((((icmp_ln234_reg_568 == 1'd1) & (icmp_ln235_fu_442_p2 == 1'd0)) | ((icmp_ln234_1_reg_602 == 1'd1) & (icmp_ln235_fu_442_p2 == 1'd0))) | ((icmp_ln243_fu_378_p2 == 1'd0) & (icmp_ln234_1_reg_602 == 1'd0) & (icmp_ln234_reg_568 == 1'd0))))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln251_fu_462_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state10) & (or_ln245_reg_629 == 1'd0))) begin
        grp_fu_483_ap_start = 1'b1;
    end else begin
        grp_fu_483_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state44))) begin
        grp_fu_483_ce = 1'b1;
    end else begin
        grp_fu_483_ce = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln246_fu_497_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state46))) begin
        grp_fu_518_ap_start = 1'b1;
    end else begin
        grp_fu_518_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln237_fu_532_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state82))) begin
        grp_fu_553_ap_start = 1'b1;
    end else begin
        grp_fu_553_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & (m_axi_In_ddr_ARREADY == 1'b1))) begin
        m_axi_In_ddr_ARVALID = 1'b1;
    end else begin
        m_axi_In_ddr_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state44) & (m_axi_In_ddr_RVALID == 1'b1))) begin
        m_axi_In_ddr_RREADY = 1'b1;
    end else begin
        m_axi_In_ddr_RREADY = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & ((((icmp_ln234_reg_568 == 1'd1) & (icmp_ln235_fu_442_p2 == 1'd0)) | ((icmp_ln234_1_reg_602 == 1'd1) & (icmp_ln235_fu_442_p2 == 1'd0))) | ((icmp_ln243_fu_378_p2 == 1'd0) & (icmp_ln234_1_reg_602 == 1'd0) & (icmp_ln234_reg_568 == 1'd0))))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if (((1'b1 == ap_CS_fsm_state2) & (((icmp_ln235_fu_442_p2 == 1'd1) & (icmp_ln234_reg_568 == 1'd1)) | ((icmp_ln235_fu_442_p2 == 1'd1) & (icmp_ln234_1_reg_602 == 1'd1))))) begin
                ap_NS_fsm = ap_ST_fsm_state82;
            end else if (((icmp_ln243_fu_378_p2 == 1'd1) & (or_ln245_fu_399_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2) & (icmp_ln234_1_reg_602 == 1'd0) & (icmp_ln234_reg_568 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state46;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (m_axi_In_ddr_ARREADY == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if (((1'b1 == ap_CS_fsm_state10) & ((or_ln245_reg_629 == 1'd1) | (icmp_ln251_fu_462_p2 == 1'd0)))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            if (((1'b1 == ap_CS_fsm_state44) & (m_axi_In_ddr_RVALID == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state45;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state46 : begin
            if (((1'b1 == ap_CS_fsm_state46) & (icmp_ln246_fu_497_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state82 : begin
            if (((1'b1 == ap_CS_fsm_state82) & (icmp_ln237_fu_532_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state83;
            end
        end
        ap_ST_fsm_state83 : begin
            ap_NS_fsm = ap_ST_fsm_state84;
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state85;
        end
        ap_ST_fsm_state85 : begin
            ap_NS_fsm = ap_ST_fsm_state86;
        end
        ap_ST_fsm_state86 : begin
            ap_NS_fsm = ap_ST_fsm_state87;
        end
        ap_ST_fsm_state87 : begin
            ap_NS_fsm = ap_ST_fsm_state88;
        end
        ap_ST_fsm_state88 : begin
            ap_NS_fsm = ap_ST_fsm_state89;
        end
        ap_ST_fsm_state89 : begin
            ap_NS_fsm = ap_ST_fsm_state90;
        end
        ap_ST_fsm_state90 : begin
            ap_NS_fsm = ap_ST_fsm_state91;
        end
        ap_ST_fsm_state91 : begin
            ap_NS_fsm = ap_ST_fsm_state92;
        end
        ap_ST_fsm_state92 : begin
            ap_NS_fsm = ap_ST_fsm_state93;
        end
        ap_ST_fsm_state93 : begin
            ap_NS_fsm = ap_ST_fsm_state94;
        end
        ap_ST_fsm_state94 : begin
            ap_NS_fsm = ap_ST_fsm_state95;
        end
        ap_ST_fsm_state95 : begin
            ap_NS_fsm = ap_ST_fsm_state96;
        end
        ap_ST_fsm_state96 : begin
            ap_NS_fsm = ap_ST_fsm_state97;
        end
        ap_ST_fsm_state97 : begin
            ap_NS_fsm = ap_ST_fsm_state98;
        end
        ap_ST_fsm_state98 : begin
            ap_NS_fsm = ap_ST_fsm_state99;
        end
        ap_ST_fsm_state99 : begin
            ap_NS_fsm = ap_ST_fsm_state100;
        end
        ap_ST_fsm_state100 : begin
            ap_NS_fsm = ap_ST_fsm_state101;
        end
        ap_ST_fsm_state101 : begin
            ap_NS_fsm = ap_ST_fsm_state102;
        end
        ap_ST_fsm_state102 : begin
            ap_NS_fsm = ap_ST_fsm_state103;
        end
        ap_ST_fsm_state103 : begin
            ap_NS_fsm = ap_ST_fsm_state104;
        end
        ap_ST_fsm_state104 : begin
            ap_NS_fsm = ap_ST_fsm_state105;
        end
        ap_ST_fsm_state105 : begin
            ap_NS_fsm = ap_ST_fsm_state106;
        end
        ap_ST_fsm_state106 : begin
            ap_NS_fsm = ap_ST_fsm_state107;
        end
        ap_ST_fsm_state107 : begin
            ap_NS_fsm = ap_ST_fsm_state108;
        end
        ap_ST_fsm_state108 : begin
            ap_NS_fsm = ap_ST_fsm_state109;
        end
        ap_ST_fsm_state109 : begin
            ap_NS_fsm = ap_ST_fsm_state110;
        end
        ap_ST_fsm_state110 : begin
            ap_NS_fsm = ap_ST_fsm_state111;
        end
        ap_ST_fsm_state111 : begin
            ap_NS_fsm = ap_ST_fsm_state112;
        end
        ap_ST_fsm_state112 : begin
            ap_NS_fsm = ap_ST_fsm_state113;
        end
        ap_ST_fsm_state113 : begin
            ap_NS_fsm = ap_ST_fsm_state114;
        end
        ap_ST_fsm_state114 : begin
            ap_NS_fsm = ap_ST_fsm_state115;
        end
        ap_ST_fsm_state115 : begin
            ap_NS_fsm = ap_ST_fsm_state116;
        end
        ap_ST_fsm_state116 : begin
            ap_NS_fsm = ap_ST_fsm_state117;
        end
        ap_ST_fsm_state117 : begin
            ap_NS_fsm = ap_ST_fsm_state82;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln234_fu_280_p2 = (p_p_s + 32'd2);

assign add_ln239_fu_543_p2 = (mul_ln239_reg_653 + zext_ln237_fu_528_p1);

assign add_ln248_fu_508_p2 = ($signed(mul_ln248_reg_633) + $signed(zext_ln246_fu_493_p1));

assign add_ln253_1_fu_423_p2 = ($signed(zext_ln243_1_reg_616) + $signed(sext_ln253_2_fu_419_p1));

assign add_ln253_2_fu_473_p2 = ($signed(mul_ln248_reg_633) + $signed(zext_ln251_fu_458_p1));

assign add_ln253_fu_414_p2 = ($signed(sext_ln253_reg_611) + $signed(sext_ln253_1_fu_410_p1));

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state117 = ap_CS_fsm[32'd116];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state81 = ap_CS_fsm[32'd80];

assign ap_CS_fsm_state82 = ap_CS_fsm[32'd81];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign grp_fu_483_p0 = (add_ln253_2_fu_473_p2 + In_buffer_end);

assign grp_fu_518_p0 = (add_ln248_fu_508_p2 + In_buffer_end);

assign grp_fu_553_p0 = (add_ln239_fu_543_p2 + In_buffer_end);

assign i_1_fu_383_p2 = (i1_0_reg_139 + 31'd1);

assign i_fu_447_p2 = (i_0_reg_150 + 31'd1);

assign icmp_ln234_1_fu_348_p1 = row;

assign icmp_ln234_1_fu_348_p2 = (($signed(sub_ln234_fu_342_p2) < $signed(icmp_ln234_1_fu_348_p1)) ? 1'b1 : 1'b0);

assign icmp_ln234_fu_254_p1 = row;

assign icmp_ln234_fu_254_p2 = (($signed(select_ln234_fu_246_p3) > $signed(icmp_ln234_fu_254_p1)) ? 1'b1 : 1'b0);

assign icmp_ln235_fu_442_p1 = p_cinp_s;

assign icmp_ln235_fu_442_p2 = (($signed(zext_ln235_fu_438_p1) < $signed(icmp_ln235_fu_442_p1)) ? 1'b1 : 1'b0);

assign icmp_ln237_fu_532_p1 = p_chin_s;

assign icmp_ln237_fu_532_p2 = (($signed(zext_ln237_fu_528_p1) < $signed(icmp_ln237_fu_532_p1)) ? 1'b1 : 1'b0);

assign icmp_ln243_fu_378_p1 = p_cinp_s;

assign icmp_ln243_fu_378_p2 = (($signed(zext_ln243_fu_374_p1) < $signed(icmp_ln243_fu_378_p1)) ? 1'b1 : 1'b0);

assign icmp_ln245_1_fu_394_p2 = (($signed(zext_ln243_fu_374_p1) > $signed(sub_ln245_reg_606)) ? 1'b1 : 1'b0);

assign icmp_ln245_fu_389_p2 = (($signed(zext_ln243_fu_374_p1) < $signed(select_ln234_reg_563)) ? 1'b1 : 1'b0);

assign icmp_ln246_fu_497_p1 = p_chin_s;

assign icmp_ln246_fu_497_p2 = (($signed(zext_ln246_fu_493_p1) < $signed(icmp_ln246_fu_497_p1)) ? 1'b1 : 1'b0);

assign icmp_ln251_fu_462_p1 = p_chin_s;

assign icmp_ln251_fu_462_p2 = (($signed(zext_ln251_fu_458_p1) < $signed(icmp_ln251_fu_462_p1)) ? 1'b1 : 1'b0);

assign j_1_fu_502_p2 = (j2_0_reg_172 + 31'd1);

assign j_2_fu_467_p2 = (j3_0_reg_161 + 31'd1);

assign j_fu_537_p2 = (j_0_reg_183 + 31'd1);

assign lshr_ln234_1_fu_212_p4 = {{sub_ln234_1_fu_206_p2[31:1]}};

assign lshr_ln234_2_fu_232_p4 = {{p_p_s[31:1]}};

assign lshr_ln234_4_fu_300_p4 = {{sub_ln234_3_fu_294_p2[31:1]}};

assign lshr_ln234_5_fu_320_p4 = {{add_ln234_fu_280_p2[31:1]}};

assign m_axi_In_ddr_ARADDR = In_ddr_addr_reg_639;

assign m_axi_In_ddr_ARBURST = 2'd0;

assign m_axi_In_ddr_ARCACHE = 4'd0;

assign m_axi_In_ddr_ARID = 1'd0;

assign m_axi_In_ddr_ARLEN = p_chin_s;

assign m_axi_In_ddr_ARLOCK = 2'd0;

assign m_axi_In_ddr_ARPROT = 3'd0;

assign m_axi_In_ddr_ARQOS = 4'd0;

assign m_axi_In_ddr_ARREGION = 4'd0;

assign m_axi_In_ddr_ARSIZE = 3'd0;

assign m_axi_In_ddr_ARUSER = 1'd0;

assign m_axi_In_ddr_AWADDR = 32'd0;

assign m_axi_In_ddr_AWBURST = 2'd0;

assign m_axi_In_ddr_AWCACHE = 4'd0;

assign m_axi_In_ddr_AWID = 1'd0;

assign m_axi_In_ddr_AWLEN = 32'd0;

assign m_axi_In_ddr_AWLOCK = 2'd0;

assign m_axi_In_ddr_AWPROT = 3'd0;

assign m_axi_In_ddr_AWQOS = 4'd0;

assign m_axi_In_ddr_AWREGION = 4'd0;

assign m_axi_In_ddr_AWSIZE = 3'd0;

assign m_axi_In_ddr_AWUSER = 1'd0;

assign m_axi_In_ddr_AWVALID = 1'b0;

assign m_axi_In_ddr_BREADY = 1'b0;

assign m_axi_In_ddr_WDATA = 32'd0;

assign m_axi_In_ddr_WID = 1'd0;

assign m_axi_In_ddr_WLAST = 1'b0;

assign m_axi_In_ddr_WSTRB = 4'd0;

assign m_axi_In_ddr_WUSER = 1'd0;

assign m_axi_In_ddr_WVALID = 1'b0;

assign mul_ln239_fu_453_p0 = p_chin_s;

assign mul_ln239_fu_453_p1 = zext_ln235_fu_438_p1;

assign mul_ln239_fu_453_p2 = ($signed(mul_ln239_fu_453_p0) * $signed({{1'b0}, {mul_ln239_fu_453_p1}}));

assign mul_ln248_fu_405_p0 = p_chin_s;

assign mul_ln248_fu_405_p1 = zext_ln243_fu_374_p1;

assign mul_ln248_fu_405_p2 = ($signed(mul_ln248_fu_405_p0) * $signed({{1'b0}, {mul_ln248_fu_405_p1}}));

assign mul_ln253_fu_360_p0 = row;

assign mul_ln253_fu_360_p1 = p_cinp_s;

assign mul_ln253_fu_360_p2 = ($signed(mul_ln253_fu_360_p0) * $signed(mul_ln253_fu_360_p1));

assign or_ln245_fu_399_p2 = (icmp_ln245_fu_389_p2 | icmp_ln245_1_fu_394_p2);

assign select_ln234_1_fu_334_p3 = ((tmp_17_fu_286_p3[0:0] === 1'b1) ? sub_ln234_4_fu_314_p2 : zext_ln234_3_fu_330_p1);

assign select_ln234_fu_246_p3 = ((tmp_16_fu_198_p3[0:0] === 1'b1) ? sub_ln234_2_fu_226_p2 : zext_ln234_1_fu_242_p1);

assign sext_ln239_fu_558_p1 = $signed(grp_fu_553_p2);

assign sext_ln248_fu_523_p1 = $signed(grp_fu_518_p2);

assign sext_ln253_1_fu_410_p1 = mul_ln248_fu_405_p2;

assign sext_ln253_2_fu_419_p1 = $signed(add_ln253_fu_414_p2);

assign sext_ln253_3_fu_488_p1 = $signed(grp_fu_483_p2);

assign sext_ln253_4_fu_428_p1 = $signed(add_ln253_1_fu_423_p2);

assign sext_ln253_fu_366_p1 = $signed(mul_ln253_fu_360_p2);

assign sub_ln234_1_fu_206_p2 = (32'd0 - p_p_s);

assign sub_ln234_2_fu_226_p2 = (32'd0 - zext_ln234_fu_222_p1);

assign sub_ln234_3_fu_294_p2 = ($signed(32'd4294967294) - $signed(p_p_s));

assign sub_ln234_4_fu_314_p2 = (32'd0 - zext_ln234_2_fu_310_p1);

assign sub_ln234_fu_342_p2 = (p_rinp_s - select_ln234_1_fu_334_p3);

assign sub_ln245_fu_354_p0 = p_cinp_s;

assign sub_ln245_fu_354_p2 = ($signed(sub_ln245_fu_354_p0) - $signed(select_ln234_1_fu_334_p3));

assign tmp_16_fu_198_p3 = p_p_s[32'd31];

assign tmp_17_fu_286_p3 = add_ln234_fu_280_p2[32'd31];

assign zext_ln234_1_fu_242_p1 = lshr_ln234_2_fu_232_p4;

assign zext_ln234_2_fu_310_p1 = lshr_ln234_4_fu_300_p4;

assign zext_ln234_3_fu_330_p1 = lshr_ln234_5_fu_320_p4;

assign zext_ln234_fu_222_p1 = lshr_ln234_1_fu_212_p4;

assign zext_ln235_fu_438_p1 = i_0_reg_150;

assign zext_ln237_fu_528_p1 = j_0_reg_183;

assign zext_ln243_1_fu_370_p1 = In_ddr_offset;

assign zext_ln243_fu_374_p1 = i1_0_reg_139;

assign zext_ln246_fu_493_p1 = j2_0_reg_172;

assign zext_ln251_fu_458_p1 = j3_0_reg_161;

always @ (posedge ap_clk) begin
    zext_ln243_1_reg_616[33:30] <= 4'b0000;
end

endmodule //Read_In_buf_line
