// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "Write_C_buf.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic Write_C_buf::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic Write_C_buf::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<4> Write_C_buf::ap_ST_fsm_state1 = "1";
const sc_lv<4> Write_C_buf::ap_ST_fsm_state2 = "10";
const sc_lv<4> Write_C_buf::ap_ST_fsm_pp0_stage0 = "100";
const sc_lv<4> Write_C_buf::ap_ST_fsm_state12 = "1000";
const bool Write_C_buf::ap_const_boolean_1 = true;
const sc_lv<32> Write_C_buf::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> Write_C_buf::ap_const_lv1_0 = "0";
const sc_lv<3> Write_C_buf::ap_const_lv3_0 = "000";
const sc_lv<2> Write_C_buf::ap_const_lv2_0 = "00";
const sc_lv<4> Write_C_buf::ap_const_lv4_0 = "0000";
const bool Write_C_buf::ap_const_boolean_0 = false;
const sc_lv<1> Write_C_buf::ap_const_lv1_1 = "1";
const sc_lv<32> Write_C_buf::ap_const_lv32_1 = "1";
const sc_lv<32> Write_C_buf::ap_const_lv32_2 = "10";
const sc_lv<32> Write_C_buf::ap_const_lv32_3 = "11";
const sc_lv<64> Write_C_buf::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<31> Write_C_buf::ap_const_lv31_0 = "0000000000000000000000000000000";
const sc_lv<4> Write_C_buf::ap_const_lv4_F = "1111";
const sc_lv<64> Write_C_buf::ap_const_lv64_1 = "1";
const sc_lv<3> Write_C_buf::ap_const_lv3_1 = "1";
const sc_lv<31> Write_C_buf::ap_const_lv31_1 = "1";

Write_C_buf::Write_C_buf(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_Out_buf_address0);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( sext_ln299_fu_386_p1 );

    SC_METHOD(thread_Out_buf_address1);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( sext_ln301_fu_390_p1 );

    SC_METHOD(thread_Out_buf_ce0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_Out_buf_ce1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_Out_buf_d1);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_Out_buf_we1);
    sensitive << ( icmp_ln297_reg_460 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_Out_ddr_blk_n_AW);
    sensitive << ( m_axi_Out_ddr_AWREADY );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln297_reg_460_pp0_iter1_reg );

    SC_METHOD(thread_Out_ddr_blk_n_B);
    sensitive << ( m_axi_Out_ddr_BVALID );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( icmp_ln297_reg_460_pp0_iter7_reg );

    SC_METHOD(thread_Out_ddr_blk_n_W);
    sensitive << ( m_axi_Out_ddr_WREADY );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( icmp_ln297_reg_460_pp0_iter2_reg );

    SC_METHOD(thread_add_ln293_1_fu_255_p2);
    sensitive << ( r_0_reg_149 );

    SC_METHOD(thread_add_ln293_fu_241_p2);
    sensitive << ( indvar_flatten_reg_138 );

    SC_METHOD(thread_add_ln299_1_fu_348_p2);
    sensitive << ( add_ln299_fu_342_p2 );
    sensitive << ( mul_ln299_1_fu_333_p2 );

    SC_METHOD(thread_add_ln299_2_fu_298_p2);
    sensitive << ( p_2_rec_reg_183 );

    SC_METHOD(thread_add_ln299_fu_342_p2);
    sensitive << ( trunc_ln299_3_fu_338_p1 );
    sensitive << ( trunc_ln299_1_fu_325_p1 );

    SC_METHOD(thread_add_ln301_1_fu_374_p2);
    sensitive << ( add_ln301_fu_368_p2 );
    sensitive << ( trunc_ln301_fu_364_p1 );

    SC_METHOD(thread_add_ln301_fu_368_p2);
    sensitive << ( trunc_ln299_3_fu_338_p1 );
    sensitive << ( mul_ln299_1_fu_333_p2 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( m_axi_Out_ddr_BVALID );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( icmp_ln297_reg_460_pp0_iter7_reg );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( m_axi_Out_ddr_BVALID );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( icmp_ln297_reg_460_pp0_iter7_reg );
    sensitive << ( ap_block_state5_io );
    sensitive << ( ap_block_state6_io );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( m_axi_Out_ddr_BVALID );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( icmp_ln297_reg_460_pp0_iter7_reg );
    sensitive << ( ap_block_state5_io );
    sensitive << ( ap_block_state6_io );

    SC_METHOD(thread_ap_block_state10_pp0_stage0_iter7);

    SC_METHOD(thread_ap_block_state11_pp0_stage0_iter8);
    sensitive << ( m_axi_Out_ddr_BVALID );
    sensitive << ( icmp_ln297_reg_460_pp0_iter7_reg );

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state5_io);
    sensitive << ( m_axi_Out_ddr_AWREADY );
    sensitive << ( icmp_ln297_reg_460_pp0_iter1_reg );

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state6_io);
    sensitive << ( m_axi_Out_ddr_WREADY );
    sensitive << ( icmp_ln297_reg_460_pp0_iter2_reg );

    SC_METHOD(thread_ap_block_state6_pp0_stage0_iter3);

    SC_METHOD(thread_ap_block_state7_pp0_stage0_iter4);

    SC_METHOD(thread_ap_block_state8_pp0_stage0_iter5);

    SC_METHOD(thread_ap_block_state9_pp0_stage0_iter6);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state3);
    sensitive << ( icmp_ln297_fu_292_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( icmp_ln293_fu_236_p2 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( ap_enable_reg_pp0_iter7 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( icmp_ln293_fu_236_p2 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_bound_fu_217_p0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( bound_fu_217_p00 );

    SC_METHOD(thread_bound_fu_217_p00);
    sensitive << ( cast1_fu_213_p0 );

    SC_METHOD(thread_bound_fu_217_p1);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( bound_fu_217_p10 );

    SC_METHOD(thread_bound_fu_217_p10);
    sensitive << ( row );

    SC_METHOD(thread_bound_fu_217_p2);
    sensitive << ( bound_fu_217_p0 );
    sensitive << ( bound_fu_217_p1 );

    SC_METHOD(thread_c_fu_394_p2);
    sensitive << ( select_ln293_reg_430 );

    SC_METHOD(thread_cast1_fu_213_p0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( p_c_s );

    SC_METHOD(thread_cho_fu_380_p2);
    sensitive << ( cho_0_reg_194 );

    SC_METHOD(thread_icmp_ln293_fu_236_p2);
    sensitive << ( bound_reg_411 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( indvar_flatten_reg_138 );

    SC_METHOD(thread_icmp_ln295_fu_231_p1);
    sensitive << ( p_c_s );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_icmp_ln295_fu_231_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( zext_ln295_fu_227_p1 );
    sensitive << ( icmp_ln295_fu_231_p1 );

    SC_METHOD(thread_icmp_ln297_fu_292_p1);
    sensitive << ( p_chout_s );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_icmp_ln297_fu_292_p2);
    sensitive << ( cho_0_reg_194 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( icmp_ln297_fu_292_p1 );

    SC_METHOD(thread_m_axi_Out_ddr_ARADDR);

    SC_METHOD(thread_m_axi_Out_ddr_ARBURST);

    SC_METHOD(thread_m_axi_Out_ddr_ARCACHE);

    SC_METHOD(thread_m_axi_Out_ddr_ARID);

    SC_METHOD(thread_m_axi_Out_ddr_ARLEN);

    SC_METHOD(thread_m_axi_Out_ddr_ARLOCK);

    SC_METHOD(thread_m_axi_Out_ddr_ARPROT);

    SC_METHOD(thread_m_axi_Out_ddr_ARQOS);

    SC_METHOD(thread_m_axi_Out_ddr_ARREGION);

    SC_METHOD(thread_m_axi_Out_ddr_ARSIZE);

    SC_METHOD(thread_m_axi_Out_ddr_ARUSER);

    SC_METHOD(thread_m_axi_Out_ddr_ARVALID);

    SC_METHOD(thread_m_axi_Out_ddr_AWADDR);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln297_reg_460_pp0_iter1_reg );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( Out_ddr_addr_reg_469_pp0_iter1_reg );

    SC_METHOD(thread_m_axi_Out_ddr_AWBURST);

    SC_METHOD(thread_m_axi_Out_ddr_AWCACHE);

    SC_METHOD(thread_m_axi_Out_ddr_AWID);

    SC_METHOD(thread_m_axi_Out_ddr_AWLEN);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln297_reg_460_pp0_iter1_reg );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_m_axi_Out_ddr_AWLOCK);

    SC_METHOD(thread_m_axi_Out_ddr_AWPROT);

    SC_METHOD(thread_m_axi_Out_ddr_AWQOS);

    SC_METHOD(thread_m_axi_Out_ddr_AWREGION);

    SC_METHOD(thread_m_axi_Out_ddr_AWSIZE);

    SC_METHOD(thread_m_axi_Out_ddr_AWUSER);

    SC_METHOD(thread_m_axi_Out_ddr_AWVALID);
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( icmp_ln297_reg_460_pp0_iter1_reg );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_m_axi_Out_ddr_BREADY);
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( icmp_ln297_reg_460_pp0_iter7_reg );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_m_axi_Out_ddr_RREADY);

    SC_METHOD(thread_m_axi_Out_ddr_WDATA);
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( icmp_ln297_reg_460_pp0_iter2_reg );
    sensitive << ( Out_buf_load_reg_495 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_m_axi_Out_ddr_WID);

    SC_METHOD(thread_m_axi_Out_ddr_WLAST);

    SC_METHOD(thread_m_axi_Out_ddr_WSTRB);
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( icmp_ln297_reg_460_pp0_iter2_reg );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_m_axi_Out_ddr_WUSER);

    SC_METHOD(thread_m_axi_Out_ddr_WVALID);
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( icmp_ln297_reg_460_pp0_iter2_reg );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_mul_ln293_fu_273_p0);
    sensitive << ( p_c_s );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_mul_ln293_fu_273_p1);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( mul_ln293_fu_273_p10 );

    SC_METHOD(thread_mul_ln293_fu_273_p10);
    sensitive << ( select_ln293_1_fu_261_p3 );

    SC_METHOD(thread_mul_ln293_fu_273_p2);
    sensitive << ( mul_ln293_fu_273_p0 );
    sensitive << ( mul_ln293_fu_273_p1 );

    SC_METHOD(thread_mul_ln299_1_fu_333_p2);
    sensitive << ( trunc_ln299_reg_450 );
    sensitive << ( trunc_ln299_2_fu_329_p1 );

    SC_METHOD(thread_mul_ln299_fu_320_p1);
    sensitive << ( p_chout_s );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_mul_ln299_fu_320_p2);
    sensitive << ( mul_ln293_reg_445 );
    sensitive << ( mul_ln299_fu_320_p1 );

    SC_METHOD(thread_mul_ln301_1_fu_359_p1);
    sensitive << ( p_c_s );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_mul_ln301_1_fu_359_p2);
    sensitive << ( mul_ln301_fu_354_p2 );
    sensitive << ( mul_ln301_1_fu_359_p1 );

    SC_METHOD(thread_mul_ln301_fu_354_p0);
    sensitive << ( p_chout_s );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_mul_ln301_fu_354_p1);
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln293_reg_440 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_mul_ln301_fu_354_p2);
    sensitive << ( mul_ln301_fu_354_p0 );
    sensitive << ( mul_ln301_fu_354_p1 );

    SC_METHOD(thread_p_1_idx8_fu_282_p2);
    sensitive << ( p_2_rec_reg_183 );
    sensitive << ( p_1_idx_reg_171 );

    SC_METHOD(thread_select_ln293_1_fu_261_p3);
    sensitive << ( r_0_reg_149 );
    sensitive << ( icmp_ln295_fu_231_p2 );
    sensitive << ( add_ln293_1_fu_255_p2 );

    SC_METHOD(thread_select_ln293_fu_247_p3);
    sensitive << ( c_0_reg_160 );
    sensitive << ( icmp_ln295_fu_231_p2 );

    SC_METHOD(thread_sext_fu_223_p1);
    sensitive << ( Out_ddr_offset );

    SC_METHOD(thread_sext_ln299_fu_386_p1);
    sensitive << ( add_ln299_1_reg_475 );

    SC_METHOD(thread_sext_ln301_fu_390_p1);
    sensitive << ( add_ln301_1_reg_480 );

    SC_METHOD(thread_sum1_fu_304_p2);
    sensitive << ( Out_ddr_offset1 );
    sensitive << ( p_1_idx8_fu_282_p2 );

    SC_METHOD(thread_sum_fu_309_p2);
    sensitive << ( sext_reg_416 );
    sensitive << ( sum1_fu_304_p2 );

    SC_METHOD(thread_trunc_ln299_1_fu_325_p1);
    sensitive << ( mul_ln299_fu_320_p2 );

    SC_METHOD(thread_trunc_ln299_2_fu_329_p0);
    sensitive << ( p_chout_s );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_trunc_ln299_2_fu_329_p1);
    sensitive << ( trunc_ln299_2_fu_329_p0 );

    SC_METHOD(thread_trunc_ln299_3_fu_338_p1);
    sensitive << ( cho_0_reg_194 );

    SC_METHOD(thread_trunc_ln299_fu_278_p1);
    sensitive << ( select_ln293_fu_247_p3 );

    SC_METHOD(thread_trunc_ln301_fu_364_p1);
    sensitive << ( mul_ln301_1_fu_359_p2 );

    SC_METHOD(thread_zext_ln293_fu_269_p1);
    sensitive << ( select_ln293_1_fu_261_p3 );

    SC_METHOD(thread_zext_ln295_fu_227_p1);
    sensitive << ( c_0_reg_160 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( icmp_ln293_fu_236_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln297_fu_292_p2 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter7 );

    ap_CS_fsm = "0001";
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter8 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter4 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter5 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter6 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter7 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "Write_C_buf_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, Out_buf_address0, "(port)Out_buf_address0");
    sc_trace(mVcdFile, Out_buf_ce0, "(port)Out_buf_ce0");
    sc_trace(mVcdFile, Out_buf_q0, "(port)Out_buf_q0");
    sc_trace(mVcdFile, Out_buf_address1, "(port)Out_buf_address1");
    sc_trace(mVcdFile, Out_buf_ce1, "(port)Out_buf_ce1");
    sc_trace(mVcdFile, Out_buf_we1, "(port)Out_buf_we1");
    sc_trace(mVcdFile, Out_buf_d1, "(port)Out_buf_d1");
    sc_trace(mVcdFile, m_axi_Out_ddr_AWVALID, "(port)m_axi_Out_ddr_AWVALID");
    sc_trace(mVcdFile, m_axi_Out_ddr_AWREADY, "(port)m_axi_Out_ddr_AWREADY");
    sc_trace(mVcdFile, m_axi_Out_ddr_AWADDR, "(port)m_axi_Out_ddr_AWADDR");
    sc_trace(mVcdFile, m_axi_Out_ddr_AWID, "(port)m_axi_Out_ddr_AWID");
    sc_trace(mVcdFile, m_axi_Out_ddr_AWLEN, "(port)m_axi_Out_ddr_AWLEN");
    sc_trace(mVcdFile, m_axi_Out_ddr_AWSIZE, "(port)m_axi_Out_ddr_AWSIZE");
    sc_trace(mVcdFile, m_axi_Out_ddr_AWBURST, "(port)m_axi_Out_ddr_AWBURST");
    sc_trace(mVcdFile, m_axi_Out_ddr_AWLOCK, "(port)m_axi_Out_ddr_AWLOCK");
    sc_trace(mVcdFile, m_axi_Out_ddr_AWCACHE, "(port)m_axi_Out_ddr_AWCACHE");
    sc_trace(mVcdFile, m_axi_Out_ddr_AWPROT, "(port)m_axi_Out_ddr_AWPROT");
    sc_trace(mVcdFile, m_axi_Out_ddr_AWQOS, "(port)m_axi_Out_ddr_AWQOS");
    sc_trace(mVcdFile, m_axi_Out_ddr_AWREGION, "(port)m_axi_Out_ddr_AWREGION");
    sc_trace(mVcdFile, m_axi_Out_ddr_AWUSER, "(port)m_axi_Out_ddr_AWUSER");
    sc_trace(mVcdFile, m_axi_Out_ddr_WVALID, "(port)m_axi_Out_ddr_WVALID");
    sc_trace(mVcdFile, m_axi_Out_ddr_WREADY, "(port)m_axi_Out_ddr_WREADY");
    sc_trace(mVcdFile, m_axi_Out_ddr_WDATA, "(port)m_axi_Out_ddr_WDATA");
    sc_trace(mVcdFile, m_axi_Out_ddr_WSTRB, "(port)m_axi_Out_ddr_WSTRB");
    sc_trace(mVcdFile, m_axi_Out_ddr_WLAST, "(port)m_axi_Out_ddr_WLAST");
    sc_trace(mVcdFile, m_axi_Out_ddr_WID, "(port)m_axi_Out_ddr_WID");
    sc_trace(mVcdFile, m_axi_Out_ddr_WUSER, "(port)m_axi_Out_ddr_WUSER");
    sc_trace(mVcdFile, m_axi_Out_ddr_ARVALID, "(port)m_axi_Out_ddr_ARVALID");
    sc_trace(mVcdFile, m_axi_Out_ddr_ARREADY, "(port)m_axi_Out_ddr_ARREADY");
    sc_trace(mVcdFile, m_axi_Out_ddr_ARADDR, "(port)m_axi_Out_ddr_ARADDR");
    sc_trace(mVcdFile, m_axi_Out_ddr_ARID, "(port)m_axi_Out_ddr_ARID");
    sc_trace(mVcdFile, m_axi_Out_ddr_ARLEN, "(port)m_axi_Out_ddr_ARLEN");
    sc_trace(mVcdFile, m_axi_Out_ddr_ARSIZE, "(port)m_axi_Out_ddr_ARSIZE");
    sc_trace(mVcdFile, m_axi_Out_ddr_ARBURST, "(port)m_axi_Out_ddr_ARBURST");
    sc_trace(mVcdFile, m_axi_Out_ddr_ARLOCK, "(port)m_axi_Out_ddr_ARLOCK");
    sc_trace(mVcdFile, m_axi_Out_ddr_ARCACHE, "(port)m_axi_Out_ddr_ARCACHE");
    sc_trace(mVcdFile, m_axi_Out_ddr_ARPROT, "(port)m_axi_Out_ddr_ARPROT");
    sc_trace(mVcdFile, m_axi_Out_ddr_ARQOS, "(port)m_axi_Out_ddr_ARQOS");
    sc_trace(mVcdFile, m_axi_Out_ddr_ARREGION, "(port)m_axi_Out_ddr_ARREGION");
    sc_trace(mVcdFile, m_axi_Out_ddr_ARUSER, "(port)m_axi_Out_ddr_ARUSER");
    sc_trace(mVcdFile, m_axi_Out_ddr_RVALID, "(port)m_axi_Out_ddr_RVALID");
    sc_trace(mVcdFile, m_axi_Out_ddr_RREADY, "(port)m_axi_Out_ddr_RREADY");
    sc_trace(mVcdFile, m_axi_Out_ddr_RDATA, "(port)m_axi_Out_ddr_RDATA");
    sc_trace(mVcdFile, m_axi_Out_ddr_RLAST, "(port)m_axi_Out_ddr_RLAST");
    sc_trace(mVcdFile, m_axi_Out_ddr_RID, "(port)m_axi_Out_ddr_RID");
    sc_trace(mVcdFile, m_axi_Out_ddr_RUSER, "(port)m_axi_Out_ddr_RUSER");
    sc_trace(mVcdFile, m_axi_Out_ddr_RRESP, "(port)m_axi_Out_ddr_RRESP");
    sc_trace(mVcdFile, m_axi_Out_ddr_BVALID, "(port)m_axi_Out_ddr_BVALID");
    sc_trace(mVcdFile, m_axi_Out_ddr_BREADY, "(port)m_axi_Out_ddr_BREADY");
    sc_trace(mVcdFile, m_axi_Out_ddr_BRESP, "(port)m_axi_Out_ddr_BRESP");
    sc_trace(mVcdFile, m_axi_Out_ddr_BID, "(port)m_axi_Out_ddr_BID");
    sc_trace(mVcdFile, m_axi_Out_ddr_BUSER, "(port)m_axi_Out_ddr_BUSER");
    sc_trace(mVcdFile, Out_ddr_offset, "(port)Out_ddr_offset");
    sc_trace(mVcdFile, Out_ddr_offset1, "(port)Out_ddr_offset1");
    sc_trace(mVcdFile, row, "(port)row");
    sc_trace(mVcdFile, p_c_s, "(port)p_c_s");
    sc_trace(mVcdFile, p_chout_s, "(port)p_chout_s");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, Out_ddr_blk_n_AW, "Out_ddr_blk_n_AW");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, icmp_ln297_reg_460, "icmp_ln297_reg_460");
    sc_trace(mVcdFile, icmp_ln297_reg_460_pp0_iter1_reg, "icmp_ln297_reg_460_pp0_iter1_reg");
    sc_trace(mVcdFile, Out_ddr_blk_n_W, "Out_ddr_blk_n_W");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, icmp_ln297_reg_460_pp0_iter2_reg, "icmp_ln297_reg_460_pp0_iter2_reg");
    sc_trace(mVcdFile, Out_ddr_blk_n_B, "Out_ddr_blk_n_B");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter8, "ap_enable_reg_pp0_iter8");
    sc_trace(mVcdFile, icmp_ln297_reg_460_pp0_iter7_reg, "icmp_ln297_reg_460_pp0_iter7_reg");
    sc_trace(mVcdFile, p_2_rec_reg_183, "p_2_rec_reg_183");
    sc_trace(mVcdFile, cho_0_reg_194, "cho_0_reg_194");
    sc_trace(mVcdFile, bound_fu_217_p2, "bound_fu_217_p2");
    sc_trace(mVcdFile, bound_reg_411, "bound_reg_411");
    sc_trace(mVcdFile, sext_fu_223_p1, "sext_fu_223_p1");
    sc_trace(mVcdFile, sext_reg_416, "sext_reg_416");
    sc_trace(mVcdFile, icmp_ln293_fu_236_p2, "icmp_ln293_fu_236_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, add_ln293_fu_241_p2, "add_ln293_fu_241_p2");
    sc_trace(mVcdFile, add_ln293_reg_425, "add_ln293_reg_425");
    sc_trace(mVcdFile, select_ln293_fu_247_p3, "select_ln293_fu_247_p3");
    sc_trace(mVcdFile, select_ln293_reg_430, "select_ln293_reg_430");
    sc_trace(mVcdFile, select_ln293_1_fu_261_p3, "select_ln293_1_fu_261_p3");
    sc_trace(mVcdFile, select_ln293_1_reg_435, "select_ln293_1_reg_435");
    sc_trace(mVcdFile, zext_ln293_fu_269_p1, "zext_ln293_fu_269_p1");
    sc_trace(mVcdFile, zext_ln293_reg_440, "zext_ln293_reg_440");
    sc_trace(mVcdFile, mul_ln293_fu_273_p2, "mul_ln293_fu_273_p2");
    sc_trace(mVcdFile, mul_ln293_reg_445, "mul_ln293_reg_445");
    sc_trace(mVcdFile, trunc_ln299_fu_278_p1, "trunc_ln299_fu_278_p1");
    sc_trace(mVcdFile, trunc_ln299_reg_450, "trunc_ln299_reg_450");
    sc_trace(mVcdFile, p_1_idx8_fu_282_p2, "p_1_idx8_fu_282_p2");
    sc_trace(mVcdFile, p_1_idx8_reg_455, "p_1_idx8_reg_455");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter0, "ap_block_state3_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter1, "ap_block_state4_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter2, "ap_block_state5_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state5_io, "ap_block_state5_io");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage0_iter3, "ap_block_state6_pp0_stage0_iter3");
    sc_trace(mVcdFile, ap_block_state6_io, "ap_block_state6_io");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage0_iter4, "ap_block_state7_pp0_stage0_iter4");
    sc_trace(mVcdFile, ap_block_state8_pp0_stage0_iter5, "ap_block_state8_pp0_stage0_iter5");
    sc_trace(mVcdFile, ap_block_state9_pp0_stage0_iter6, "ap_block_state9_pp0_stage0_iter6");
    sc_trace(mVcdFile, ap_block_state10_pp0_stage0_iter7, "ap_block_state10_pp0_stage0_iter7");
    sc_trace(mVcdFile, ap_block_state11_pp0_stage0_iter8, "ap_block_state11_pp0_stage0_iter8");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, icmp_ln297_fu_292_p2, "icmp_ln297_fu_292_p2");
    sc_trace(mVcdFile, icmp_ln297_reg_460_pp0_iter3_reg, "icmp_ln297_reg_460_pp0_iter3_reg");
    sc_trace(mVcdFile, icmp_ln297_reg_460_pp0_iter4_reg, "icmp_ln297_reg_460_pp0_iter4_reg");
    sc_trace(mVcdFile, icmp_ln297_reg_460_pp0_iter5_reg, "icmp_ln297_reg_460_pp0_iter5_reg");
    sc_trace(mVcdFile, icmp_ln297_reg_460_pp0_iter6_reg, "icmp_ln297_reg_460_pp0_iter6_reg");
    sc_trace(mVcdFile, add_ln299_2_fu_298_p2, "add_ln299_2_fu_298_p2");
    sc_trace(mVcdFile, Out_ddr_addr_reg_469, "Out_ddr_addr_reg_469");
    sc_trace(mVcdFile, Out_ddr_addr_reg_469_pp0_iter1_reg, "Out_ddr_addr_reg_469_pp0_iter1_reg");
    sc_trace(mVcdFile, add_ln299_1_fu_348_p2, "add_ln299_1_fu_348_p2");
    sc_trace(mVcdFile, add_ln299_1_reg_475, "add_ln299_1_reg_475");
    sc_trace(mVcdFile, add_ln301_1_fu_374_p2, "add_ln301_1_fu_374_p2");
    sc_trace(mVcdFile, add_ln301_1_reg_480, "add_ln301_1_reg_480");
    sc_trace(mVcdFile, cho_fu_380_p2, "cho_fu_380_p2");
    sc_trace(mVcdFile, Out_buf_load_reg_495, "Out_buf_load_reg_495");
    sc_trace(mVcdFile, c_fu_394_p2, "c_fu_394_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state3, "ap_condition_pp0_exit_iter0_state3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter4, "ap_enable_reg_pp0_iter4");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter5, "ap_enable_reg_pp0_iter5");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter6, "ap_enable_reg_pp0_iter6");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter7, "ap_enable_reg_pp0_iter7");
    sc_trace(mVcdFile, indvar_flatten_reg_138, "indvar_flatten_reg_138");
    sc_trace(mVcdFile, r_0_reg_149, "r_0_reg_149");
    sc_trace(mVcdFile, c_0_reg_160, "c_0_reg_160");
    sc_trace(mVcdFile, p_1_idx_reg_171, "p_1_idx_reg_171");
    sc_trace(mVcdFile, sext_ln299_fu_386_p1, "sext_ln299_fu_386_p1");
    sc_trace(mVcdFile, sext_ln301_fu_390_p1, "sext_ln301_fu_390_p1");
    sc_trace(mVcdFile, sum_fu_309_p2, "sum_fu_309_p2");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, cast1_fu_213_p0, "cast1_fu_213_p0");
    sc_trace(mVcdFile, bound_fu_217_p0, "bound_fu_217_p0");
    sc_trace(mVcdFile, bound_fu_217_p1, "bound_fu_217_p1");
    sc_trace(mVcdFile, zext_ln295_fu_227_p1, "zext_ln295_fu_227_p1");
    sc_trace(mVcdFile, icmp_ln295_fu_231_p1, "icmp_ln295_fu_231_p1");
    sc_trace(mVcdFile, icmp_ln295_fu_231_p2, "icmp_ln295_fu_231_p2");
    sc_trace(mVcdFile, add_ln293_1_fu_255_p2, "add_ln293_1_fu_255_p2");
    sc_trace(mVcdFile, mul_ln293_fu_273_p0, "mul_ln293_fu_273_p0");
    sc_trace(mVcdFile, mul_ln293_fu_273_p1, "mul_ln293_fu_273_p1");
    sc_trace(mVcdFile, icmp_ln297_fu_292_p1, "icmp_ln297_fu_292_p1");
    sc_trace(mVcdFile, sum1_fu_304_p2, "sum1_fu_304_p2");
    sc_trace(mVcdFile, mul_ln299_fu_320_p1, "mul_ln299_fu_320_p1");
    sc_trace(mVcdFile, mul_ln299_fu_320_p2, "mul_ln299_fu_320_p2");
    sc_trace(mVcdFile, trunc_ln299_2_fu_329_p0, "trunc_ln299_2_fu_329_p0");
    sc_trace(mVcdFile, trunc_ln299_2_fu_329_p1, "trunc_ln299_2_fu_329_p1");
    sc_trace(mVcdFile, trunc_ln299_3_fu_338_p1, "trunc_ln299_3_fu_338_p1");
    sc_trace(mVcdFile, trunc_ln299_1_fu_325_p1, "trunc_ln299_1_fu_325_p1");
    sc_trace(mVcdFile, add_ln299_fu_342_p2, "add_ln299_fu_342_p2");
    sc_trace(mVcdFile, mul_ln299_1_fu_333_p2, "mul_ln299_1_fu_333_p2");
    sc_trace(mVcdFile, mul_ln301_fu_354_p0, "mul_ln301_fu_354_p0");
    sc_trace(mVcdFile, mul_ln301_fu_354_p1, "mul_ln301_fu_354_p1");
    sc_trace(mVcdFile, mul_ln301_fu_354_p2, "mul_ln301_fu_354_p2");
    sc_trace(mVcdFile, mul_ln301_1_fu_359_p1, "mul_ln301_1_fu_359_p1");
    sc_trace(mVcdFile, mul_ln301_1_fu_359_p2, "mul_ln301_1_fu_359_p2");
    sc_trace(mVcdFile, add_ln301_fu_368_p2, "add_ln301_fu_368_p2");
    sc_trace(mVcdFile, trunc_ln301_fu_364_p1, "trunc_ln301_fu_364_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, bound_fu_217_p00, "bound_fu_217_p00");
    sc_trace(mVcdFile, bound_fu_217_p10, "bound_fu_217_p10");
    sc_trace(mVcdFile, mul_ln293_fu_273_p10, "mul_ln293_fu_273_p10");
#endif

    }
}

Write_C_buf::~Write_C_buf() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void Write_C_buf::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state3.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln293_fu_236_p2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state3.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state3.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter4 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter4 = ap_enable_reg_pp0_iter3.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter5 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter5 = ap_enable_reg_pp0_iter4.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter6 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter6 = ap_enable_reg_pp0_iter5.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter7 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter7 = ap_enable_reg_pp0_iter6.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter8 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter8 = ap_enable_reg_pp0_iter7.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln293_fu_236_p2.read()))) {
            ap_enable_reg_pp0_iter8 = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        c_0_reg_160 = c_fu_394_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        c_0_reg_160 = ap_const_lv31_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln297_fu_292_p2.read()))) {
        cho_0_reg_194 = cho_fu_380_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln293_fu_236_p2.read()))) {
        cho_0_reg_194 = ap_const_lv32_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        indvar_flatten_reg_138 = add_ln293_reg_425.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        indvar_flatten_reg_138 = ap_const_lv64_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        p_1_idx_reg_171 = p_1_idx8_reg_455.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        p_1_idx_reg_171 = ap_const_lv64_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln297_fu_292_p2.read()))) {
        p_2_rec_reg_183 = add_ln299_2_fu_298_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln293_fu_236_p2.read()))) {
        p_2_rec_reg_183 = ap_const_lv64_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        r_0_reg_149 = select_ln293_1_reg_435.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        r_0_reg_149 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(icmp_ln297_reg_460_pp0_iter1_reg.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        Out_buf_load_reg_495 = Out_buf_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln297_fu_292_p2.read()))) {
        Out_ddr_addr_reg_469 =  (sc_lv<32>) (sum_fu_309_p2.read());
        add_ln299_1_reg_475 = add_ln299_1_fu_348_p2.read();
        add_ln301_1_reg_480 = add_ln301_1_fu_374_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        Out_ddr_addr_reg_469_pp0_iter1_reg = Out_ddr_addr_reg_469.read();
        icmp_ln297_reg_460 = icmp_ln297_fu_292_p2.read();
        icmp_ln297_reg_460_pp0_iter1_reg = icmp_ln297_reg_460.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        add_ln293_reg_425 = add_ln293_fu_241_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        bound_reg_411 = bound_fu_217_p2.read();
        sext_reg_416 = sext_fu_223_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) {
        icmp_ln297_reg_460_pp0_iter2_reg = icmp_ln297_reg_460_pp0_iter1_reg.read();
        icmp_ln297_reg_460_pp0_iter3_reg = icmp_ln297_reg_460_pp0_iter2_reg.read();
        icmp_ln297_reg_460_pp0_iter4_reg = icmp_ln297_reg_460_pp0_iter3_reg.read();
        icmp_ln297_reg_460_pp0_iter5_reg = icmp_ln297_reg_460_pp0_iter4_reg.read();
        icmp_ln297_reg_460_pp0_iter6_reg = icmp_ln297_reg_460_pp0_iter5_reg.read();
        icmp_ln297_reg_460_pp0_iter7_reg = icmp_ln297_reg_460_pp0_iter6_reg.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln293_fu_236_p2.read()))) {
        mul_ln293_reg_445 = mul_ln293_fu_273_p2.read();
        select_ln293_1_reg_435 = select_ln293_1_fu_261_p3.read();
        select_ln293_reg_430 = select_ln293_fu_247_p3.read();
        trunc_ln299_reg_450 = trunc_ln299_fu_278_p1.read();
        zext_ln293_reg_440 = zext_ln293_fu_269_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        p_1_idx8_reg_455 = p_1_idx8_fu_282_p2.read();
    }
}

void Write_C_buf::thread_Out_buf_address0() {
    Out_buf_address0 =  (sc_lv<9>) (sext_ln299_fu_386_p1.read());
}

void Write_C_buf::thread_Out_buf_address1() {
    Out_buf_address1 =  (sc_lv<9>) (sext_ln301_fu_390_p1.read());
}

void Write_C_buf::thread_Out_buf_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        Out_buf_ce0 = ap_const_logic_1;
    } else {
        Out_buf_ce0 = ap_const_logic_0;
    }
}

void Write_C_buf::thread_Out_buf_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        Out_buf_ce1 = ap_const_logic_1;
    } else {
        Out_buf_ce1 = ap_const_logic_0;
    }
}

void Write_C_buf::thread_Out_buf_d1() {
    Out_buf_d1 = ap_const_lv32_0;
}

void Write_C_buf::thread_Out_buf_we1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln297_reg_460.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        Out_buf_we1 = ap_const_logic_1;
    } else {
        Out_buf_we1 = ap_const_logic_0;
    }
}

void Write_C_buf::thread_Out_ddr_blk_n_AW() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln297_reg_460_pp0_iter1_reg.read(), ap_const_lv1_1))) {
        Out_ddr_blk_n_AW = m_axi_Out_ddr_AWREADY.read();
    } else {
        Out_ddr_blk_n_AW = ap_const_logic_1;
    }
}

void Write_C_buf::thread_Out_ddr_blk_n_B() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln297_reg_460_pp0_iter7_reg.read()))) {
        Out_ddr_blk_n_B = m_axi_Out_ddr_BVALID.read();
    } else {
        Out_ddr_blk_n_B = ap_const_logic_1;
    }
}

void Write_C_buf::thread_Out_ddr_blk_n_W() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln297_reg_460_pp0_iter2_reg.read()))) {
        Out_ddr_blk_n_W = m_axi_Out_ddr_WREADY.read();
    } else {
        Out_ddr_blk_n_W = ap_const_logic_1;
    }
}

void Write_C_buf::thread_add_ln293_1_fu_255_p2() {
    add_ln293_1_fu_255_p2 = (!ap_const_lv3_1.is_01() || !r_0_reg_149.read().is_01())? sc_lv<3>(): (sc_biguint<3>(ap_const_lv3_1) + sc_biguint<3>(r_0_reg_149.read()));
}

void Write_C_buf::thread_add_ln293_fu_241_p2() {
    add_ln293_fu_241_p2 = (!indvar_flatten_reg_138.read().is_01() || !ap_const_lv64_1.is_01())? sc_lv<64>(): (sc_biguint<64>(indvar_flatten_reg_138.read()) + sc_biguint<64>(ap_const_lv64_1));
}

void Write_C_buf::thread_add_ln299_1_fu_348_p2() {
    add_ln299_1_fu_348_p2 = (!add_ln299_fu_342_p2.read().is_01() || !mul_ln299_1_fu_333_p2.read().is_01())? sc_lv<10>(): (sc_biguint<10>(add_ln299_fu_342_p2.read()) + sc_biguint<10>(mul_ln299_1_fu_333_p2.read()));
}

void Write_C_buf::thread_add_ln299_2_fu_298_p2() {
    add_ln299_2_fu_298_p2 = (!p_2_rec_reg_183.read().is_01() || !ap_const_lv64_1.is_01())? sc_lv<64>(): (sc_biguint<64>(p_2_rec_reg_183.read()) + sc_biguint<64>(ap_const_lv64_1));
}

void Write_C_buf::thread_add_ln299_fu_342_p2() {
    add_ln299_fu_342_p2 = (!trunc_ln299_3_fu_338_p1.read().is_01() || !trunc_ln299_1_fu_325_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(trunc_ln299_3_fu_338_p1.read()) + sc_biguint<10>(trunc_ln299_1_fu_325_p1.read()));
}

void Write_C_buf::thread_add_ln301_1_fu_374_p2() {
    add_ln301_1_fu_374_p2 = (!add_ln301_fu_368_p2.read().is_01() || !trunc_ln301_fu_364_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(add_ln301_fu_368_p2.read()) + sc_biguint<10>(trunc_ln301_fu_364_p1.read()));
}

void Write_C_buf::thread_add_ln301_fu_368_p2() {
    add_ln301_fu_368_p2 = (!trunc_ln299_3_fu_338_p1.read().is_01() || !mul_ln299_1_fu_333_p2.read().is_01())? sc_lv<10>(): (sc_biguint<10>(trunc_ln299_3_fu_338_p1.read()) + sc_biguint<10>(mul_ln299_1_fu_333_p2.read()));
}

void Write_C_buf::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[2];
}

void Write_C_buf::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void Write_C_buf::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[3];
}

void Write_C_buf::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void Write_C_buf::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Write_C_buf::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln297_reg_460_pp0_iter7_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_Out_ddr_BVALID.read()));
}

void Write_C_buf::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state5_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state6_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln297_reg_460_pp0_iter7_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, m_axi_Out_ddr_BVALID.read())));
}

void Write_C_buf::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state5_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state6_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln297_reg_460_pp0_iter7_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, m_axi_Out_ddr_BVALID.read())));
}

void Write_C_buf::thread_ap_block_state10_pp0_stage0_iter7() {
    ap_block_state10_pp0_stage0_iter7 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Write_C_buf::thread_ap_block_state11_pp0_stage0_iter8() {
    ap_block_state11_pp0_stage0_iter8 = (esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln297_reg_460_pp0_iter7_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_Out_ddr_BVALID.read()));
}

void Write_C_buf::thread_ap_block_state3_pp0_stage0_iter0() {
    ap_block_state3_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Write_C_buf::thread_ap_block_state4_pp0_stage0_iter1() {
    ap_block_state4_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Write_C_buf::thread_ap_block_state5_io() {
    ap_block_state5_io = (esl_seteq<1,1,1>(icmp_ln297_reg_460_pp0_iter1_reg.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_Out_ddr_AWREADY.read()));
}

void Write_C_buf::thread_ap_block_state5_pp0_stage0_iter2() {
    ap_block_state5_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Write_C_buf::thread_ap_block_state6_io() {
    ap_block_state6_io = (esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln297_reg_460_pp0_iter2_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, m_axi_Out_ddr_WREADY.read()));
}

void Write_C_buf::thread_ap_block_state6_pp0_stage0_iter3() {
    ap_block_state6_pp0_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Write_C_buf::thread_ap_block_state7_pp0_stage0_iter4() {
    ap_block_state7_pp0_stage0_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Write_C_buf::thread_ap_block_state8_pp0_stage0_iter5() {
    ap_block_state8_pp0_stage0_iter5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Write_C_buf::thread_ap_block_state9_pp0_stage0_iter6() {
    ap_block_state9_pp0_stage0_iter6 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Write_C_buf::thread_ap_condition_pp0_exit_iter0_state3() {
    if (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln297_fu_292_p2.read())) {
        ap_condition_pp0_exit_iter0_state3 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state3 = ap_const_logic_0;
    }
}

void Write_C_buf::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln293_fu_236_p2.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void Write_C_buf::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void Write_C_buf::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void Write_C_buf::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter5.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter6.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter7.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter8.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void Write_C_buf::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln293_fu_236_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void Write_C_buf::thread_bound_fu_217_p0() {
    bound_fu_217_p0 =  (sc_lv<32>) (bound_fu_217_p00.read());
}

void Write_C_buf::thread_bound_fu_217_p00() {
    bound_fu_217_p00 = esl_zext<64,32>(cast1_fu_213_p0.read());
}

void Write_C_buf::thread_bound_fu_217_p1() {
    bound_fu_217_p1 =  (sc_lv<32>) (bound_fu_217_p10.read());
}

void Write_C_buf::thread_bound_fu_217_p10() {
    bound_fu_217_p10 = esl_zext<64,32>(row.read());
}

void Write_C_buf::thread_bound_fu_217_p2() {
    bound_fu_217_p2 = (!bound_fu_217_p0.read().is_01() || !bound_fu_217_p1.read().is_01())? sc_lv<64>(): sc_biguint<32>(bound_fu_217_p0.read()) * sc_biguint<32>(bound_fu_217_p1.read());
}

void Write_C_buf::thread_c_fu_394_p2() {
    c_fu_394_p2 = (!select_ln293_reg_430.read().is_01() || !ap_const_lv31_1.is_01())? sc_lv<31>(): (sc_biguint<31>(select_ln293_reg_430.read()) + sc_biguint<31>(ap_const_lv31_1));
}

void Write_C_buf::thread_cast1_fu_213_p0() {
    cast1_fu_213_p0 = p_c_s.read();
}

void Write_C_buf::thread_cho_fu_380_p2() {
    cho_fu_380_p2 = (!ap_const_lv32_1.is_01() || !cho_0_reg_194.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_1) + sc_biguint<32>(cho_0_reg_194.read()));
}

void Write_C_buf::thread_icmp_ln293_fu_236_p2() {
    icmp_ln293_fu_236_p2 = (!indvar_flatten_reg_138.read().is_01() || !bound_reg_411.read().is_01())? sc_lv<1>(): sc_lv<1>(indvar_flatten_reg_138.read() == bound_reg_411.read());
}

void Write_C_buf::thread_icmp_ln295_fu_231_p1() {
    icmp_ln295_fu_231_p1 = p_c_s.read();
}

void Write_C_buf::thread_icmp_ln295_fu_231_p2() {
    icmp_ln295_fu_231_p2 = (!zext_ln295_fu_227_p1.read().is_01() || !icmp_ln295_fu_231_p1.read().is_01())? sc_lv<1>(): (sc_bigint<32>(zext_ln295_fu_227_p1.read()) < sc_bigint<32>(icmp_ln295_fu_231_p1.read()));
}

void Write_C_buf::thread_icmp_ln297_fu_292_p1() {
    icmp_ln297_fu_292_p1 = p_chout_s.read();
}

void Write_C_buf::thread_icmp_ln297_fu_292_p2() {
    icmp_ln297_fu_292_p2 = (!cho_0_reg_194.read().is_01() || !icmp_ln297_fu_292_p1.read().is_01())? sc_lv<1>(): (sc_bigint<32>(cho_0_reg_194.read()) < sc_bigint<32>(icmp_ln297_fu_292_p1.read()));
}

void Write_C_buf::thread_m_axi_Out_ddr_ARADDR() {
    m_axi_Out_ddr_ARADDR = ap_const_lv32_0;
}

void Write_C_buf::thread_m_axi_Out_ddr_ARBURST() {
    m_axi_Out_ddr_ARBURST = ap_const_lv2_0;
}

void Write_C_buf::thread_m_axi_Out_ddr_ARCACHE() {
    m_axi_Out_ddr_ARCACHE = ap_const_lv4_0;
}

void Write_C_buf::thread_m_axi_Out_ddr_ARID() {
    m_axi_Out_ddr_ARID = ap_const_lv1_0;
}

void Write_C_buf::thread_m_axi_Out_ddr_ARLEN() {
    m_axi_Out_ddr_ARLEN = ap_const_lv32_0;
}

void Write_C_buf::thread_m_axi_Out_ddr_ARLOCK() {
    m_axi_Out_ddr_ARLOCK = ap_const_lv2_0;
}

void Write_C_buf::thread_m_axi_Out_ddr_ARPROT() {
    m_axi_Out_ddr_ARPROT = ap_const_lv3_0;
}

void Write_C_buf::thread_m_axi_Out_ddr_ARQOS() {
    m_axi_Out_ddr_ARQOS = ap_const_lv4_0;
}

void Write_C_buf::thread_m_axi_Out_ddr_ARREGION() {
    m_axi_Out_ddr_ARREGION = ap_const_lv4_0;
}

void Write_C_buf::thread_m_axi_Out_ddr_ARSIZE() {
    m_axi_Out_ddr_ARSIZE = ap_const_lv3_0;
}

void Write_C_buf::thread_m_axi_Out_ddr_ARUSER() {
    m_axi_Out_ddr_ARUSER = ap_const_lv1_0;
}

void Write_C_buf::thread_m_axi_Out_ddr_ARVALID() {
    m_axi_Out_ddr_ARVALID = ap_const_logic_0;
}

void Write_C_buf::thread_m_axi_Out_ddr_AWADDR() {
    m_axi_Out_ddr_AWADDR = Out_ddr_addr_reg_469_pp0_iter1_reg.read();
}

void Write_C_buf::thread_m_axi_Out_ddr_AWBURST() {
    m_axi_Out_ddr_AWBURST = ap_const_lv2_0;
}

void Write_C_buf::thread_m_axi_Out_ddr_AWCACHE() {
    m_axi_Out_ddr_AWCACHE = ap_const_lv4_0;
}

void Write_C_buf::thread_m_axi_Out_ddr_AWID() {
    m_axi_Out_ddr_AWID = ap_const_lv1_0;
}

void Write_C_buf::thread_m_axi_Out_ddr_AWLEN() {
    m_axi_Out_ddr_AWLEN = ap_const_lv32_1;
}

void Write_C_buf::thread_m_axi_Out_ddr_AWLOCK() {
    m_axi_Out_ddr_AWLOCK = ap_const_lv2_0;
}

void Write_C_buf::thread_m_axi_Out_ddr_AWPROT() {
    m_axi_Out_ddr_AWPROT = ap_const_lv3_0;
}

void Write_C_buf::thread_m_axi_Out_ddr_AWQOS() {
    m_axi_Out_ddr_AWQOS = ap_const_lv4_0;
}

void Write_C_buf::thread_m_axi_Out_ddr_AWREGION() {
    m_axi_Out_ddr_AWREGION = ap_const_lv4_0;
}

void Write_C_buf::thread_m_axi_Out_ddr_AWSIZE() {
    m_axi_Out_ddr_AWSIZE = ap_const_lv3_0;
}

void Write_C_buf::thread_m_axi_Out_ddr_AWUSER() {
    m_axi_Out_ddr_AWUSER = ap_const_lv1_0;
}

void Write_C_buf::thread_m_axi_Out_ddr_AWVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(icmp_ln297_reg_460_pp0_iter1_reg.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        m_axi_Out_ddr_AWVALID = ap_const_logic_1;
    } else {
        m_axi_Out_ddr_AWVALID = ap_const_logic_0;
    }
}

void Write_C_buf::thread_m_axi_Out_ddr_BREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln297_reg_460_pp0_iter7_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        m_axi_Out_ddr_BREADY = ap_const_logic_1;
    } else {
        m_axi_Out_ddr_BREADY = ap_const_logic_0;
    }
}

void Write_C_buf::thread_m_axi_Out_ddr_RREADY() {
    m_axi_Out_ddr_RREADY = ap_const_logic_0;
}

void Write_C_buf::thread_m_axi_Out_ddr_WDATA() {
    m_axi_Out_ddr_WDATA = Out_buf_load_reg_495.read();
}

void Write_C_buf::thread_m_axi_Out_ddr_WID() {
    m_axi_Out_ddr_WID = ap_const_lv1_0;
}

void Write_C_buf::thread_m_axi_Out_ddr_WLAST() {
    m_axi_Out_ddr_WLAST = ap_const_logic_0;
}

void Write_C_buf::thread_m_axi_Out_ddr_WSTRB() {
    m_axi_Out_ddr_WSTRB = ap_const_lv4_F;
}

void Write_C_buf::thread_m_axi_Out_ddr_WUSER() {
    m_axi_Out_ddr_WUSER = ap_const_lv1_0;
}

void Write_C_buf::thread_m_axi_Out_ddr_WVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln297_reg_460_pp0_iter2_reg.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        m_axi_Out_ddr_WVALID = ap_const_logic_1;
    } else {
        m_axi_Out_ddr_WVALID = ap_const_logic_0;
    }
}

void Write_C_buf::thread_mul_ln293_fu_273_p0() {
    mul_ln293_fu_273_p0 = p_c_s.read();
}

void Write_C_buf::thread_mul_ln293_fu_273_p1() {
    mul_ln293_fu_273_p1 =  (sc_lv<3>) (mul_ln293_fu_273_p10.read());
}

void Write_C_buf::thread_mul_ln293_fu_273_p10() {
    mul_ln293_fu_273_p10 = esl_zext<32,3>(select_ln293_1_fu_261_p3.read());
}

void Write_C_buf::thread_mul_ln293_fu_273_p2() {
    mul_ln293_fu_273_p2 = (!mul_ln293_fu_273_p0.read().is_01() || !mul_ln293_fu_273_p1.read().is_01())? sc_lv<32>(): sc_bigint<32>(mul_ln293_fu_273_p0.read()) * sc_biguint<3>(mul_ln293_fu_273_p1.read());
}

void Write_C_buf::thread_mul_ln299_1_fu_333_p2() {
    mul_ln299_1_fu_333_p2 = (!trunc_ln299_2_fu_329_p1.read().is_01() || !trunc_ln299_reg_450.read().is_01())? sc_lv<10>(): sc_bigint<10>(trunc_ln299_2_fu_329_p1.read()) * sc_bigint<10>(trunc_ln299_reg_450.read());
}

void Write_C_buf::thread_mul_ln299_fu_320_p1() {
    mul_ln299_fu_320_p1 = p_chout_s.read();
}

void Write_C_buf::thread_mul_ln299_fu_320_p2() {
    mul_ln299_fu_320_p2 = (!mul_ln293_reg_445.read().is_01() || !mul_ln299_fu_320_p1.read().is_01())? sc_lv<32>(): sc_bigint<32>(mul_ln293_reg_445.read()) * sc_bigint<32>(mul_ln299_fu_320_p1.read());
}

void Write_C_buf::thread_mul_ln301_1_fu_359_p1() {
    mul_ln301_1_fu_359_p1 = p_c_s.read();
}

void Write_C_buf::thread_mul_ln301_1_fu_359_p2() {
    mul_ln301_1_fu_359_p2 = (!mul_ln301_fu_354_p2.read().is_01() || !mul_ln301_1_fu_359_p1.read().is_01())? sc_lv<32>(): sc_bigint<32>(mul_ln301_fu_354_p2.read()) * sc_bigint<32>(mul_ln301_1_fu_359_p1.read());
}

void Write_C_buf::thread_mul_ln301_fu_354_p0() {
    mul_ln301_fu_354_p0 = p_chout_s.read();
}

void Write_C_buf::thread_mul_ln301_fu_354_p1() {
    mul_ln301_fu_354_p1 =  (sc_lv<3>) (zext_ln293_reg_440.read());
}

void Write_C_buf::thread_mul_ln301_fu_354_p2() {
    mul_ln301_fu_354_p2 = (!mul_ln301_fu_354_p0.read().is_01() || !mul_ln301_fu_354_p1.read().is_01())? sc_lv<32>(): sc_bigint<32>(mul_ln301_fu_354_p0.read()) * sc_biguint<3>(mul_ln301_fu_354_p1.read());
}

void Write_C_buf::thread_p_1_idx8_fu_282_p2() {
    p_1_idx8_fu_282_p2 = (!p_2_rec_reg_183.read().is_01() || !p_1_idx_reg_171.read().is_01())? sc_lv<64>(): (sc_biguint<64>(p_2_rec_reg_183.read()) + sc_biguint<64>(p_1_idx_reg_171.read()));
}

void Write_C_buf::thread_select_ln293_1_fu_261_p3() {
    select_ln293_1_fu_261_p3 = (!icmp_ln295_fu_231_p2.read()[0].is_01())? sc_lv<3>(): ((icmp_ln295_fu_231_p2.read()[0].to_bool())? r_0_reg_149.read(): add_ln293_1_fu_255_p2.read());
}

void Write_C_buf::thread_select_ln293_fu_247_p3() {
    select_ln293_fu_247_p3 = (!icmp_ln295_fu_231_p2.read()[0].is_01())? sc_lv<31>(): ((icmp_ln295_fu_231_p2.read()[0].to_bool())? c_0_reg_160.read(): ap_const_lv31_0);
}

void Write_C_buf::thread_sext_fu_223_p1() {
    sext_fu_223_p1 = esl_zext<64,30>(Out_ddr_offset.read());
}

void Write_C_buf::thread_sext_ln299_fu_386_p1() {
    sext_ln299_fu_386_p1 = esl_sext<64,10>(add_ln299_1_reg_475.read());
}

void Write_C_buf::thread_sext_ln301_fu_390_p1() {
    sext_ln301_fu_390_p1 = esl_sext<64,10>(add_ln301_1_reg_480.read());
}

void Write_C_buf::thread_sum1_fu_304_p2() {
    sum1_fu_304_p2 = (!Out_ddr_offset1.read().is_01() || !p_1_idx8_fu_282_p2.read().is_01())? sc_lv<64>(): (sc_biguint<64>(Out_ddr_offset1.read()) + sc_biguint<64>(p_1_idx8_fu_282_p2.read()));
}

void Write_C_buf::thread_sum_fu_309_p2() {
    sum_fu_309_p2 = (!sum1_fu_304_p2.read().is_01() || !sext_reg_416.read().is_01())? sc_lv<64>(): (sc_biguint<64>(sum1_fu_304_p2.read()) + sc_biguint<64>(sext_reg_416.read()));
}

void Write_C_buf::thread_trunc_ln299_1_fu_325_p1() {
    trunc_ln299_1_fu_325_p1 = mul_ln299_fu_320_p2.read().range(10-1, 0);
}

void Write_C_buf::thread_trunc_ln299_2_fu_329_p0() {
    trunc_ln299_2_fu_329_p0 = p_chout_s.read();
}

void Write_C_buf::thread_trunc_ln299_2_fu_329_p1() {
    trunc_ln299_2_fu_329_p1 = trunc_ln299_2_fu_329_p0.read().range(10-1, 0);
}

void Write_C_buf::thread_trunc_ln299_3_fu_338_p1() {
    trunc_ln299_3_fu_338_p1 = cho_0_reg_194.read().range(10-1, 0);
}

void Write_C_buf::thread_trunc_ln299_fu_278_p1() {
    trunc_ln299_fu_278_p1 = select_ln293_fu_247_p3.read().range(10-1, 0);
}

void Write_C_buf::thread_trunc_ln301_fu_364_p1() {
    trunc_ln301_fu_364_p1 = mul_ln301_1_fu_359_p2.read().range(10-1, 0);
}

void Write_C_buf::thread_zext_ln293_fu_269_p1() {
    zext_ln293_fu_269_p1 = esl_zext<32,3>(select_ln293_1_fu_261_p3.read());
}

void Write_C_buf::thread_zext_ln295_fu_227_p1() {
    zext_ln295_fu_227_p1 = esl_zext<32,31>(c_0_reg_160.read());
}

void Write_C_buf::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln293_fu_236_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter7.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln297_fu_292_p2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter8.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter7.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln297_fu_292_p2.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state12;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        default : 
            ap_NS_fsm = "XXXX";
            break;
    }
}

}

