// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "Write_C_buf.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic Write_C_buf::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic Write_C_buf::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<11> Write_C_buf::ap_ST_fsm_state1 = "1";
const sc_lv<11> Write_C_buf::ap_ST_fsm_state2 = "10";
const sc_lv<11> Write_C_buf::ap_ST_fsm_state3 = "100";
const sc_lv<11> Write_C_buf::ap_ST_fsm_state4 = "1000";
const sc_lv<11> Write_C_buf::ap_ST_fsm_state5 = "10000";
const sc_lv<11> Write_C_buf::ap_ST_fsm_state6 = "100000";
const sc_lv<11> Write_C_buf::ap_ST_fsm_state7 = "1000000";
const sc_lv<11> Write_C_buf::ap_ST_fsm_state8 = "10000000";
const sc_lv<11> Write_C_buf::ap_ST_fsm_state9 = "100000000";
const sc_lv<11> Write_C_buf::ap_ST_fsm_state10 = "1000000000";
const sc_lv<11> Write_C_buf::ap_ST_fsm_state11 = "10000000000";
const sc_lv<32> Write_C_buf::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> Write_C_buf::ap_const_lv1_0 = "0";
const sc_lv<3> Write_C_buf::ap_const_lv3_0 = "000";
const sc_lv<2> Write_C_buf::ap_const_lv2_0 = "00";
const sc_lv<4> Write_C_buf::ap_const_lv4_0 = "0000";
const sc_lv<32> Write_C_buf::ap_const_lv32_4 = "100";
const sc_lv<32> Write_C_buf::ap_const_lv32_5 = "101";
const sc_lv<32> Write_C_buf::ap_const_lv32_A = "1010";
const sc_lv<32> Write_C_buf::ap_const_lv32_1 = "1";
const sc_lv<1> Write_C_buf::ap_const_lv1_1 = "1";
const sc_lv<32> Write_C_buf::ap_const_lv32_2 = "10";
const sc_lv<32> Write_C_buf::ap_const_lv32_3 = "11";
const sc_lv<31> Write_C_buf::ap_const_lv31_0 = "0000000000000000000000000000000";
const sc_lv<64> Write_C_buf::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<4> Write_C_buf::ap_const_lv4_F = "1111";
const sc_lv<3> Write_C_buf::ap_const_lv3_1 = "1";
const sc_lv<31> Write_C_buf::ap_const_lv31_1 = "1";
const sc_lv<64> Write_C_buf::ap_const_lv64_1 = "1";
const bool Write_C_buf::ap_const_boolean_1 = true;

Write_C_buf::Write_C_buf(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_Out_buf_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( sext_ln299_fu_303_p1 );
    sensitive << ( sext_ln301_fu_345_p1 );

    SC_METHOD(thread_Out_buf_ce0);
    sensitive << ( m_axi_Out_ddr_AWREADY );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_Out_buf_d0);
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_Out_buf_we0);
    sensitive << ( m_axi_Out_ddr_AWREADY );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_Out_ddr_blk_n_AW);
    sensitive << ( m_axi_Out_ddr_AWREADY );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_Out_ddr_blk_n_B);
    sensitive << ( m_axi_Out_ddr_BVALID );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_Out_ddr_blk_n_W);
    sensitive << ( m_axi_Out_ddr_WREADY );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_add_ln299_1_fu_297_p2);
    sensitive << ( add_ln299_fu_291_p2 );
    sensitive << ( mul_ln299_2_fu_282_p2 );

    SC_METHOD(thread_add_ln299_2_fu_263_p2);
    sensitive << ( p_2_rec_reg_154 );

    SC_METHOD(thread_add_ln299_fu_291_p2);
    sensitive << ( trunc_ln299_3_fu_287_p1 );
    sensitive << ( trunc_ln299_1_fu_274_p1 );

    SC_METHOD(thread_add_ln301_1_fu_328_p2);
    sensitive << ( add_ln301_fu_322_p2 );
    sensitive << ( trunc_ln301_fu_318_p1 );

    SC_METHOD(thread_add_ln301_fu_322_p2);
    sensitive << ( trunc_ln299_3_fu_287_p1 );
    sensitive << ( mul_ln299_2_fu_282_p2 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln293_fu_193_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln293_fu_193_p2 );

    SC_METHOD(thread_c_fu_218_p2);
    sensitive << ( c_0_reg_143 );

    SC_METHOD(thread_cho_fu_334_p2);
    sensitive << ( cho_0_reg_165 );

    SC_METHOD(thread_icmp_ln293_fu_193_p2);
    sensitive << ( row );
    sensitive << ( zext_ln293_fu_189_p1 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_icmp_ln295_fu_213_p1);
    sensitive << ( p_c_s );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_icmp_ln295_fu_213_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln295_fu_209_p1 );
    sensitive << ( icmp_ln295_fu_213_p1 );

    SC_METHOD(thread_icmp_ln297_fu_257_p1);
    sensitive << ( p_chout_s );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_icmp_ln297_fu_257_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( cho_0_reg_165 );
    sensitive << ( icmp_ln297_fu_257_p1 );

    SC_METHOD(thread_m_axi_Out_ddr_ARADDR);

    SC_METHOD(thread_m_axi_Out_ddr_ARBURST);

    SC_METHOD(thread_m_axi_Out_ddr_ARCACHE);

    SC_METHOD(thread_m_axi_Out_ddr_ARID);

    SC_METHOD(thread_m_axi_Out_ddr_ARLEN);

    SC_METHOD(thread_m_axi_Out_ddr_ARLOCK);

    SC_METHOD(thread_m_axi_Out_ddr_ARPROT);

    SC_METHOD(thread_m_axi_Out_ddr_ARQOS);

    SC_METHOD(thread_m_axi_Out_ddr_ARREGION);

    SC_METHOD(thread_m_axi_Out_ddr_ARSIZE);

    SC_METHOD(thread_m_axi_Out_ddr_ARUSER);

    SC_METHOD(thread_m_axi_Out_ddr_ARVALID);

    SC_METHOD(thread_m_axi_Out_ddr_AWADDR);
    sensitive << ( m_axi_Out_ddr_AWREADY );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( Out_ddr_addr_reg_409 );

    SC_METHOD(thread_m_axi_Out_ddr_AWBURST);

    SC_METHOD(thread_m_axi_Out_ddr_AWCACHE);

    SC_METHOD(thread_m_axi_Out_ddr_AWID);

    SC_METHOD(thread_m_axi_Out_ddr_AWLEN);
    sensitive << ( m_axi_Out_ddr_AWREADY );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_m_axi_Out_ddr_AWLOCK);

    SC_METHOD(thread_m_axi_Out_ddr_AWPROT);

    SC_METHOD(thread_m_axi_Out_ddr_AWQOS);

    SC_METHOD(thread_m_axi_Out_ddr_AWREGION);

    SC_METHOD(thread_m_axi_Out_ddr_AWSIZE);

    SC_METHOD(thread_m_axi_Out_ddr_AWUSER);

    SC_METHOD(thread_m_axi_Out_ddr_AWVALID);
    sensitive << ( m_axi_Out_ddr_AWREADY );
    sensitive << ( ap_CS_fsm_state5 );

    SC_METHOD(thread_m_axi_Out_ddr_BREADY);
    sensitive << ( m_axi_Out_ddr_BVALID );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_m_axi_Out_ddr_RREADY);

    SC_METHOD(thread_m_axi_Out_ddr_WDATA);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( Out_buf_load_reg_438 );

    SC_METHOD(thread_m_axi_Out_ddr_WID);

    SC_METHOD(thread_m_axi_Out_ddr_WLAST);

    SC_METHOD(thread_m_axi_Out_ddr_WSTRB);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_m_axi_Out_ddr_WUSER);

    SC_METHOD(thread_m_axi_Out_ddr_WVALID);
    sensitive << ( m_axi_Out_ddr_WREADY );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_mul_ln299_1_fu_269_p1);
    sensitive << ( p_chout_s );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_mul_ln299_1_fu_269_p2);
    sensitive << ( mul_ln299_reg_391 );
    sensitive << ( mul_ln299_1_fu_269_p1 );

    SC_METHOD(thread_mul_ln299_2_fu_282_p2);
    sensitive << ( trunc_ln299_reg_404 );
    sensitive << ( trunc_ln299_2_fu_278_p1 );

    SC_METHOD(thread_mul_ln299_fu_204_p0);
    sensitive << ( p_c_s );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_mul_ln299_fu_204_p1);
    sensitive << ( zext_ln293_fu_189_p1 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_mul_ln299_fu_204_p2);
    sensitive << ( mul_ln299_fu_204_p0 );
    sensitive << ( mul_ln299_fu_204_p1 );

    SC_METHOD(thread_mul_ln301_1_fu_313_p1);
    sensitive << ( p_c_s );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_mul_ln301_1_fu_313_p2);
    sensitive << ( mul_ln301_fu_308_p2 );
    sensitive << ( mul_ln301_1_fu_313_p1 );

    SC_METHOD(thread_mul_ln301_fu_308_p0);
    sensitive << ( p_chout_s );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_mul_ln301_fu_308_p1);
    sensitive << ( zext_ln293_reg_378 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_mul_ln301_fu_308_p2);
    sensitive << ( mul_ln301_fu_308_p0 );
    sensitive << ( mul_ln301_fu_308_p1 );

    SC_METHOD(thread_p_1_idx8_fu_231_p2);
    sensitive << ( p_2_rec_reg_154 );
    sensitive << ( p_0_idx_fu_72 );

    SC_METHOD(thread_r_fu_198_p2);
    sensitive << ( r_0_reg_132 );

    SC_METHOD(thread_sext_fu_180_p1);
    sensitive << ( Out_ddr_offset );

    SC_METHOD(thread_sext_ln299_fu_303_p1);
    sensitive << ( add_ln299_1_fu_297_p2 );

    SC_METHOD(thread_sext_ln301_fu_345_p1);
    sensitive << ( add_ln301_1_reg_428 );

    SC_METHOD(thread_sum1_fu_237_p2);
    sensitive << ( Out_ddr_offset1 );
    sensitive << ( p_1_idx8_fu_231_p2 );

    SC_METHOD(thread_sum_fu_242_p2);
    sensitive << ( sext_reg_373 );
    sensitive << ( sum1_fu_237_p2 );

    SC_METHOD(thread_trunc_ln299_1_fu_274_p1);
    sensitive << ( mul_ln299_1_fu_269_p2 );

    SC_METHOD(thread_trunc_ln299_2_fu_278_p0);
    sensitive << ( p_chout_s );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_trunc_ln299_2_fu_278_p1);
    sensitive << ( trunc_ln299_2_fu_278_p0 );

    SC_METHOD(thread_trunc_ln299_3_fu_287_p1);
    sensitive << ( cho_0_reg_165 );

    SC_METHOD(thread_trunc_ln299_fu_224_p1);
    sensitive << ( c_0_reg_143 );

    SC_METHOD(thread_trunc_ln301_fu_318_p1);
    sensitive << ( mul_ln301_1_fu_313_p2 );

    SC_METHOD(thread_zext_ln293_fu_189_p1);
    sensitive << ( r_0_reg_132 );

    SC_METHOD(thread_zext_ln295_fu_209_p1);
    sensitive << ( c_0_reg_143 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( m_axi_Out_ddr_AWREADY );
    sensitive << ( m_axi_Out_ddr_WREADY );
    sensitive << ( m_axi_Out_ddr_BVALID );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln293_fu_193_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln295_fu_213_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln297_fu_257_p2 );

    ap_CS_fsm = "00000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "Write_C_buf_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, Out_buf_address0, "(port)Out_buf_address0");
    sc_trace(mVcdFile, Out_buf_ce0, "(port)Out_buf_ce0");
    sc_trace(mVcdFile, Out_buf_we0, "(port)Out_buf_we0");
    sc_trace(mVcdFile, Out_buf_d0, "(port)Out_buf_d0");
    sc_trace(mVcdFile, Out_buf_q0, "(port)Out_buf_q0");
    sc_trace(mVcdFile, m_axi_Out_ddr_AWVALID, "(port)m_axi_Out_ddr_AWVALID");
    sc_trace(mVcdFile, m_axi_Out_ddr_AWREADY, "(port)m_axi_Out_ddr_AWREADY");
    sc_trace(mVcdFile, m_axi_Out_ddr_AWADDR, "(port)m_axi_Out_ddr_AWADDR");
    sc_trace(mVcdFile, m_axi_Out_ddr_AWID, "(port)m_axi_Out_ddr_AWID");
    sc_trace(mVcdFile, m_axi_Out_ddr_AWLEN, "(port)m_axi_Out_ddr_AWLEN");
    sc_trace(mVcdFile, m_axi_Out_ddr_AWSIZE, "(port)m_axi_Out_ddr_AWSIZE");
    sc_trace(mVcdFile, m_axi_Out_ddr_AWBURST, "(port)m_axi_Out_ddr_AWBURST");
    sc_trace(mVcdFile, m_axi_Out_ddr_AWLOCK, "(port)m_axi_Out_ddr_AWLOCK");
    sc_trace(mVcdFile, m_axi_Out_ddr_AWCACHE, "(port)m_axi_Out_ddr_AWCACHE");
    sc_trace(mVcdFile, m_axi_Out_ddr_AWPROT, "(port)m_axi_Out_ddr_AWPROT");
    sc_trace(mVcdFile, m_axi_Out_ddr_AWQOS, "(port)m_axi_Out_ddr_AWQOS");
    sc_trace(mVcdFile, m_axi_Out_ddr_AWREGION, "(port)m_axi_Out_ddr_AWREGION");
    sc_trace(mVcdFile, m_axi_Out_ddr_AWUSER, "(port)m_axi_Out_ddr_AWUSER");
    sc_trace(mVcdFile, m_axi_Out_ddr_WVALID, "(port)m_axi_Out_ddr_WVALID");
    sc_trace(mVcdFile, m_axi_Out_ddr_WREADY, "(port)m_axi_Out_ddr_WREADY");
    sc_trace(mVcdFile, m_axi_Out_ddr_WDATA, "(port)m_axi_Out_ddr_WDATA");
    sc_trace(mVcdFile, m_axi_Out_ddr_WSTRB, "(port)m_axi_Out_ddr_WSTRB");
    sc_trace(mVcdFile, m_axi_Out_ddr_WLAST, "(port)m_axi_Out_ddr_WLAST");
    sc_trace(mVcdFile, m_axi_Out_ddr_WID, "(port)m_axi_Out_ddr_WID");
    sc_trace(mVcdFile, m_axi_Out_ddr_WUSER, "(port)m_axi_Out_ddr_WUSER");
    sc_trace(mVcdFile, m_axi_Out_ddr_ARVALID, "(port)m_axi_Out_ddr_ARVALID");
    sc_trace(mVcdFile, m_axi_Out_ddr_ARREADY, "(port)m_axi_Out_ddr_ARREADY");
    sc_trace(mVcdFile, m_axi_Out_ddr_ARADDR, "(port)m_axi_Out_ddr_ARADDR");
    sc_trace(mVcdFile, m_axi_Out_ddr_ARID, "(port)m_axi_Out_ddr_ARID");
    sc_trace(mVcdFile, m_axi_Out_ddr_ARLEN, "(port)m_axi_Out_ddr_ARLEN");
    sc_trace(mVcdFile, m_axi_Out_ddr_ARSIZE, "(port)m_axi_Out_ddr_ARSIZE");
    sc_trace(mVcdFile, m_axi_Out_ddr_ARBURST, "(port)m_axi_Out_ddr_ARBURST");
    sc_trace(mVcdFile, m_axi_Out_ddr_ARLOCK, "(port)m_axi_Out_ddr_ARLOCK");
    sc_trace(mVcdFile, m_axi_Out_ddr_ARCACHE, "(port)m_axi_Out_ddr_ARCACHE");
    sc_trace(mVcdFile, m_axi_Out_ddr_ARPROT, "(port)m_axi_Out_ddr_ARPROT");
    sc_trace(mVcdFile, m_axi_Out_ddr_ARQOS, "(port)m_axi_Out_ddr_ARQOS");
    sc_trace(mVcdFile, m_axi_Out_ddr_ARREGION, "(port)m_axi_Out_ddr_ARREGION");
    sc_trace(mVcdFile, m_axi_Out_ddr_ARUSER, "(port)m_axi_Out_ddr_ARUSER");
    sc_trace(mVcdFile, m_axi_Out_ddr_RVALID, "(port)m_axi_Out_ddr_RVALID");
    sc_trace(mVcdFile, m_axi_Out_ddr_RREADY, "(port)m_axi_Out_ddr_RREADY");
    sc_trace(mVcdFile, m_axi_Out_ddr_RDATA, "(port)m_axi_Out_ddr_RDATA");
    sc_trace(mVcdFile, m_axi_Out_ddr_RLAST, "(port)m_axi_Out_ddr_RLAST");
    sc_trace(mVcdFile, m_axi_Out_ddr_RID, "(port)m_axi_Out_ddr_RID");
    sc_trace(mVcdFile, m_axi_Out_ddr_RUSER, "(port)m_axi_Out_ddr_RUSER");
    sc_trace(mVcdFile, m_axi_Out_ddr_RRESP, "(port)m_axi_Out_ddr_RRESP");
    sc_trace(mVcdFile, m_axi_Out_ddr_BVALID, "(port)m_axi_Out_ddr_BVALID");
    sc_trace(mVcdFile, m_axi_Out_ddr_BREADY, "(port)m_axi_Out_ddr_BREADY");
    sc_trace(mVcdFile, m_axi_Out_ddr_BRESP, "(port)m_axi_Out_ddr_BRESP");
    sc_trace(mVcdFile, m_axi_Out_ddr_BID, "(port)m_axi_Out_ddr_BID");
    sc_trace(mVcdFile, m_axi_Out_ddr_BUSER, "(port)m_axi_Out_ddr_BUSER");
    sc_trace(mVcdFile, Out_ddr_offset, "(port)Out_ddr_offset");
    sc_trace(mVcdFile, Out_ddr_offset1, "(port)Out_ddr_offset1");
    sc_trace(mVcdFile, row, "(port)row");
    sc_trace(mVcdFile, p_c_s, "(port)p_c_s");
    sc_trace(mVcdFile, p_chout_s, "(port)p_chout_s");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, Out_ddr_blk_n_AW, "Out_ddr_blk_n_AW");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, Out_ddr_blk_n_W, "Out_ddr_blk_n_W");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, Out_ddr_blk_n_B, "Out_ddr_blk_n_B");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, sext_fu_180_p1, "sext_fu_180_p1");
    sc_trace(mVcdFile, sext_reg_373, "sext_reg_373");
    sc_trace(mVcdFile, zext_ln293_fu_189_p1, "zext_ln293_fu_189_p1");
    sc_trace(mVcdFile, zext_ln293_reg_378, "zext_ln293_reg_378");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, r_fu_198_p2, "r_fu_198_p2");
    sc_trace(mVcdFile, r_reg_386, "r_reg_386");
    sc_trace(mVcdFile, mul_ln299_fu_204_p2, "mul_ln299_fu_204_p2");
    sc_trace(mVcdFile, mul_ln299_reg_391, "mul_ln299_reg_391");
    sc_trace(mVcdFile, icmp_ln293_fu_193_p2, "icmp_ln293_fu_193_p2");
    sc_trace(mVcdFile, c_fu_218_p2, "c_fu_218_p2");
    sc_trace(mVcdFile, c_reg_399, "c_reg_399");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, trunc_ln299_fu_224_p1, "trunc_ln299_fu_224_p1");
    sc_trace(mVcdFile, trunc_ln299_reg_404, "trunc_ln299_reg_404");
    sc_trace(mVcdFile, icmp_ln295_fu_213_p2, "icmp_ln295_fu_213_p2");
    sc_trace(mVcdFile, Out_ddr_addr_reg_409, "Out_ddr_addr_reg_409");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, add_ln299_2_fu_263_p2, "add_ln299_2_fu_263_p2");
    sc_trace(mVcdFile, add_ln299_2_reg_418, "add_ln299_2_reg_418");
    sc_trace(mVcdFile, icmp_ln297_fu_257_p2, "icmp_ln297_fu_257_p2");
    sc_trace(mVcdFile, add_ln301_1_fu_328_p2, "add_ln301_1_fu_328_p2");
    sc_trace(mVcdFile, add_ln301_1_reg_428, "add_ln301_1_reg_428");
    sc_trace(mVcdFile, cho_fu_334_p2, "cho_fu_334_p2");
    sc_trace(mVcdFile, cho_reg_433, "cho_reg_433");
    sc_trace(mVcdFile, Out_buf_load_reg_438, "Out_buf_load_reg_438");
    sc_trace(mVcdFile, r_0_reg_132, "r_0_reg_132");
    sc_trace(mVcdFile, c_0_reg_143, "c_0_reg_143");
    sc_trace(mVcdFile, p_2_rec_reg_154, "p_2_rec_reg_154");
    sc_trace(mVcdFile, cho_0_reg_165, "cho_0_reg_165");
    sc_trace(mVcdFile, sext_ln299_fu_303_p1, "sext_ln299_fu_303_p1");
    sc_trace(mVcdFile, sext_ln301_fu_345_p1, "sext_ln301_fu_345_p1");
    sc_trace(mVcdFile, sum_fu_242_p2, "sum_fu_242_p2");
    sc_trace(mVcdFile, p_0_idx_fu_72, "p_0_idx_fu_72");
    sc_trace(mVcdFile, p_1_idx8_fu_231_p2, "p_1_idx8_fu_231_p2");
    sc_trace(mVcdFile, mul_ln299_fu_204_p0, "mul_ln299_fu_204_p0");
    sc_trace(mVcdFile, mul_ln299_fu_204_p1, "mul_ln299_fu_204_p1");
    sc_trace(mVcdFile, zext_ln295_fu_209_p1, "zext_ln295_fu_209_p1");
    sc_trace(mVcdFile, icmp_ln295_fu_213_p1, "icmp_ln295_fu_213_p1");
    sc_trace(mVcdFile, sum1_fu_237_p2, "sum1_fu_237_p2");
    sc_trace(mVcdFile, icmp_ln297_fu_257_p1, "icmp_ln297_fu_257_p1");
    sc_trace(mVcdFile, mul_ln299_1_fu_269_p1, "mul_ln299_1_fu_269_p1");
    sc_trace(mVcdFile, mul_ln299_1_fu_269_p2, "mul_ln299_1_fu_269_p2");
    sc_trace(mVcdFile, trunc_ln299_2_fu_278_p0, "trunc_ln299_2_fu_278_p0");
    sc_trace(mVcdFile, trunc_ln299_2_fu_278_p1, "trunc_ln299_2_fu_278_p1");
    sc_trace(mVcdFile, trunc_ln299_3_fu_287_p1, "trunc_ln299_3_fu_287_p1");
    sc_trace(mVcdFile, trunc_ln299_1_fu_274_p1, "trunc_ln299_1_fu_274_p1");
    sc_trace(mVcdFile, add_ln299_fu_291_p2, "add_ln299_fu_291_p2");
    sc_trace(mVcdFile, mul_ln299_2_fu_282_p2, "mul_ln299_2_fu_282_p2");
    sc_trace(mVcdFile, add_ln299_1_fu_297_p2, "add_ln299_1_fu_297_p2");
    sc_trace(mVcdFile, mul_ln301_fu_308_p0, "mul_ln301_fu_308_p0");
    sc_trace(mVcdFile, mul_ln301_fu_308_p1, "mul_ln301_fu_308_p1");
    sc_trace(mVcdFile, mul_ln301_fu_308_p2, "mul_ln301_fu_308_p2");
    sc_trace(mVcdFile, mul_ln301_1_fu_313_p1, "mul_ln301_1_fu_313_p1");
    sc_trace(mVcdFile, mul_ln301_1_fu_313_p2, "mul_ln301_1_fu_313_p2");
    sc_trace(mVcdFile, add_ln301_fu_322_p2, "add_ln301_fu_322_p2");
    sc_trace(mVcdFile, trunc_ln301_fu_318_p1, "trunc_ln301_fu_318_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

Write_C_buf::~Write_C_buf() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void Write_C_buf::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln293_fu_193_p2.read(), ap_const_lv1_1))) {
        c_0_reg_143 = ap_const_lv31_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln297_fu_257_p2.read()))) {
        c_0_reg_143 = c_reg_399.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
         esl_seteq<1,1,1>(m_axi_Out_ddr_BVALID.read(), ap_const_logic_1))) {
        cho_0_reg_165 = cho_reg_433.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln295_fu_213_p2.read()))) {
        cho_0_reg_165 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln297_fu_257_p2.read()))) {
        p_0_idx_fu_72 = p_1_idx8_fu_231_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        p_0_idx_fu_72 = ap_const_lv64_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
         esl_seteq<1,1,1>(m_axi_Out_ddr_BVALID.read(), ap_const_logic_1))) {
        p_2_rec_reg_154 = add_ln299_2_reg_418.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln295_fu_213_p2.read()))) {
        p_2_rec_reg_154 = ap_const_lv64_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln295_fu_213_p2.read()))) {
        r_0_reg_132 = r_reg_386.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        r_0_reg_132 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(m_axi_Out_ddr_AWREADY.read(), ap_const_logic_1))) {
        Out_buf_load_reg_438 = Out_buf_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        Out_ddr_addr_reg_409 =  (sc_lv<32>) (sum_fu_242_p2.read());
        add_ln299_2_reg_418 = add_ln299_2_fu_263_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln297_fu_257_p2.read()))) {
        add_ln301_1_reg_428 = add_ln301_1_fu_328_p2.read();
        cho_reg_433 = cho_fu_334_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        c_reg_399 = c_fu_218_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln293_fu_193_p2.read(), ap_const_lv1_1))) {
        mul_ln299_reg_391 = mul_ln299_fu_204_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        r_reg_386 = r_fu_198_p2.read();
        zext_ln293_reg_378 = zext_ln293_fu_189_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        sext_reg_373 = sext_fu_180_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln295_fu_213_p2.read()))) {
        trunc_ln299_reg_404 = trunc_ln299_fu_224_p1.read();
    }
}

void Write_C_buf::thread_Out_buf_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        Out_buf_address0 =  (sc_lv<9>) (sext_ln301_fu_345_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        Out_buf_address0 =  (sc_lv<9>) (sext_ln299_fu_303_p1.read());
    } else {
        Out_buf_address0 = "XXXXXXXXX";
    }
}

void Write_C_buf::thread_Out_buf_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
          esl_seteq<1,1,1>(m_axi_Out_ddr_AWREADY.read(), ap_const_logic_1)))) {
        Out_buf_ce0 = ap_const_logic_1;
    } else {
        Out_buf_ce0 = ap_const_logic_0;
    }
}

void Write_C_buf::thread_Out_buf_d0() {
    Out_buf_d0 = ap_const_lv32_0;
}

void Write_C_buf::thread_Out_buf_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(m_axi_Out_ddr_AWREADY.read(), ap_const_logic_1))) {
        Out_buf_we0 = ap_const_logic_1;
    } else {
        Out_buf_we0 = ap_const_logic_0;
    }
}

void Write_C_buf::thread_Out_ddr_blk_n_AW() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        Out_ddr_blk_n_AW = m_axi_Out_ddr_AWREADY.read();
    } else {
        Out_ddr_blk_n_AW = ap_const_logic_1;
    }
}

void Write_C_buf::thread_Out_ddr_blk_n_B() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        Out_ddr_blk_n_B = m_axi_Out_ddr_BVALID.read();
    } else {
        Out_ddr_blk_n_B = ap_const_logic_1;
    }
}

void Write_C_buf::thread_Out_ddr_blk_n_W() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        Out_ddr_blk_n_W = m_axi_Out_ddr_WREADY.read();
    } else {
        Out_ddr_blk_n_W = ap_const_logic_1;
    }
}

void Write_C_buf::thread_add_ln299_1_fu_297_p2() {
    add_ln299_1_fu_297_p2 = (!add_ln299_fu_291_p2.read().is_01() || !mul_ln299_2_fu_282_p2.read().is_01())? sc_lv<10>(): (sc_biguint<10>(add_ln299_fu_291_p2.read()) + sc_biguint<10>(mul_ln299_2_fu_282_p2.read()));
}

void Write_C_buf::thread_add_ln299_2_fu_263_p2() {
    add_ln299_2_fu_263_p2 = (!p_2_rec_reg_154.read().is_01() || !ap_const_lv64_1.is_01())? sc_lv<64>(): (sc_biguint<64>(p_2_rec_reg_154.read()) + sc_biguint<64>(ap_const_lv64_1));
}

void Write_C_buf::thread_add_ln299_fu_291_p2() {
    add_ln299_fu_291_p2 = (!trunc_ln299_3_fu_287_p1.read().is_01() || !trunc_ln299_1_fu_274_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(trunc_ln299_3_fu_287_p1.read()) + sc_biguint<10>(trunc_ln299_1_fu_274_p1.read()));
}

void Write_C_buf::thread_add_ln301_1_fu_328_p2() {
    add_ln301_1_fu_328_p2 = (!add_ln301_fu_322_p2.read().is_01() || !trunc_ln301_fu_318_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(add_ln301_fu_322_p2.read()) + sc_biguint<10>(trunc_ln301_fu_318_p1.read()));
}

void Write_C_buf::thread_add_ln301_fu_322_p2() {
    add_ln301_fu_322_p2 = (!trunc_ln299_3_fu_287_p1.read().is_01() || !mul_ln299_2_fu_282_p2.read().is_01())? sc_lv<10>(): (sc_biguint<10>(trunc_ln299_3_fu_287_p1.read()) + sc_biguint<10>(mul_ln299_2_fu_282_p2.read()));
}

void Write_C_buf::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void Write_C_buf::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void Write_C_buf::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void Write_C_buf::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void Write_C_buf::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void Write_C_buf::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void Write_C_buf::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void Write_C_buf::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln293_fu_193_p2.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void Write_C_buf::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void Write_C_buf::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln293_fu_193_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void Write_C_buf::thread_c_fu_218_p2() {
    c_fu_218_p2 = (!c_0_reg_143.read().is_01() || !ap_const_lv31_1.is_01())? sc_lv<31>(): (sc_biguint<31>(c_0_reg_143.read()) + sc_biguint<31>(ap_const_lv31_1));
}

void Write_C_buf::thread_cho_fu_334_p2() {
    cho_fu_334_p2 = (!ap_const_lv32_1.is_01() || !cho_0_reg_165.read().is_01())? sc_lv<32>(): (sc_biguint<32>(ap_const_lv32_1) + sc_biguint<32>(cho_0_reg_165.read()));
}

void Write_C_buf::thread_icmp_ln293_fu_193_p2() {
    icmp_ln293_fu_193_p2 = (!zext_ln293_fu_189_p1.read().is_01() || !row.read().is_01())? sc_lv<1>(): (sc_bigint<32>(zext_ln293_fu_189_p1.read()) < sc_bigint<32>(row.read()));
}

void Write_C_buf::thread_icmp_ln295_fu_213_p1() {
    icmp_ln295_fu_213_p1 = p_c_s.read();
}

void Write_C_buf::thread_icmp_ln295_fu_213_p2() {
    icmp_ln295_fu_213_p2 = (!zext_ln295_fu_209_p1.read().is_01() || !icmp_ln295_fu_213_p1.read().is_01())? sc_lv<1>(): (sc_bigint<32>(zext_ln295_fu_209_p1.read()) < sc_bigint<32>(icmp_ln295_fu_213_p1.read()));
}

void Write_C_buf::thread_icmp_ln297_fu_257_p1() {
    icmp_ln297_fu_257_p1 = p_chout_s.read();
}

void Write_C_buf::thread_icmp_ln297_fu_257_p2() {
    icmp_ln297_fu_257_p2 = (!cho_0_reg_165.read().is_01() || !icmp_ln297_fu_257_p1.read().is_01())? sc_lv<1>(): (sc_bigint<32>(cho_0_reg_165.read()) < sc_bigint<32>(icmp_ln297_fu_257_p1.read()));
}

void Write_C_buf::thread_m_axi_Out_ddr_ARADDR() {
    m_axi_Out_ddr_ARADDR = ap_const_lv32_0;
}

void Write_C_buf::thread_m_axi_Out_ddr_ARBURST() {
    m_axi_Out_ddr_ARBURST = ap_const_lv2_0;
}

void Write_C_buf::thread_m_axi_Out_ddr_ARCACHE() {
    m_axi_Out_ddr_ARCACHE = ap_const_lv4_0;
}

void Write_C_buf::thread_m_axi_Out_ddr_ARID() {
    m_axi_Out_ddr_ARID = ap_const_lv1_0;
}

void Write_C_buf::thread_m_axi_Out_ddr_ARLEN() {
    m_axi_Out_ddr_ARLEN = ap_const_lv32_0;
}

void Write_C_buf::thread_m_axi_Out_ddr_ARLOCK() {
    m_axi_Out_ddr_ARLOCK = ap_const_lv2_0;
}

void Write_C_buf::thread_m_axi_Out_ddr_ARPROT() {
    m_axi_Out_ddr_ARPROT = ap_const_lv3_0;
}

void Write_C_buf::thread_m_axi_Out_ddr_ARQOS() {
    m_axi_Out_ddr_ARQOS = ap_const_lv4_0;
}

void Write_C_buf::thread_m_axi_Out_ddr_ARREGION() {
    m_axi_Out_ddr_ARREGION = ap_const_lv4_0;
}

void Write_C_buf::thread_m_axi_Out_ddr_ARSIZE() {
    m_axi_Out_ddr_ARSIZE = ap_const_lv3_0;
}

void Write_C_buf::thread_m_axi_Out_ddr_ARUSER() {
    m_axi_Out_ddr_ARUSER = ap_const_lv1_0;
}

void Write_C_buf::thread_m_axi_Out_ddr_ARVALID() {
    m_axi_Out_ddr_ARVALID = ap_const_logic_0;
}

void Write_C_buf::thread_m_axi_Out_ddr_AWADDR() {
    m_axi_Out_ddr_AWADDR = Out_ddr_addr_reg_409.read();
}

void Write_C_buf::thread_m_axi_Out_ddr_AWBURST() {
    m_axi_Out_ddr_AWBURST = ap_const_lv2_0;
}

void Write_C_buf::thread_m_axi_Out_ddr_AWCACHE() {
    m_axi_Out_ddr_AWCACHE = ap_const_lv4_0;
}

void Write_C_buf::thread_m_axi_Out_ddr_AWID() {
    m_axi_Out_ddr_AWID = ap_const_lv1_0;
}

void Write_C_buf::thread_m_axi_Out_ddr_AWLEN() {
    m_axi_Out_ddr_AWLEN = ap_const_lv32_1;
}

void Write_C_buf::thread_m_axi_Out_ddr_AWLOCK() {
    m_axi_Out_ddr_AWLOCK = ap_const_lv2_0;
}

void Write_C_buf::thread_m_axi_Out_ddr_AWPROT() {
    m_axi_Out_ddr_AWPROT = ap_const_lv3_0;
}

void Write_C_buf::thread_m_axi_Out_ddr_AWQOS() {
    m_axi_Out_ddr_AWQOS = ap_const_lv4_0;
}

void Write_C_buf::thread_m_axi_Out_ddr_AWREGION() {
    m_axi_Out_ddr_AWREGION = ap_const_lv4_0;
}

void Write_C_buf::thread_m_axi_Out_ddr_AWSIZE() {
    m_axi_Out_ddr_AWSIZE = ap_const_lv3_0;
}

void Write_C_buf::thread_m_axi_Out_ddr_AWUSER() {
    m_axi_Out_ddr_AWUSER = ap_const_lv1_0;
}

void Write_C_buf::thread_m_axi_Out_ddr_AWVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(m_axi_Out_ddr_AWREADY.read(), ap_const_logic_1))) {
        m_axi_Out_ddr_AWVALID = ap_const_logic_1;
    } else {
        m_axi_Out_ddr_AWVALID = ap_const_logic_0;
    }
}

void Write_C_buf::thread_m_axi_Out_ddr_BREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
         esl_seteq<1,1,1>(m_axi_Out_ddr_BVALID.read(), ap_const_logic_1))) {
        m_axi_Out_ddr_BREADY = ap_const_logic_1;
    } else {
        m_axi_Out_ddr_BREADY = ap_const_logic_0;
    }
}

void Write_C_buf::thread_m_axi_Out_ddr_RREADY() {
    m_axi_Out_ddr_RREADY = ap_const_logic_0;
}

void Write_C_buf::thread_m_axi_Out_ddr_WDATA() {
    m_axi_Out_ddr_WDATA = Out_buf_load_reg_438.read();
}

void Write_C_buf::thread_m_axi_Out_ddr_WID() {
    m_axi_Out_ddr_WID = ap_const_lv1_0;
}

void Write_C_buf::thread_m_axi_Out_ddr_WLAST() {
    m_axi_Out_ddr_WLAST = ap_const_logic_0;
}

void Write_C_buf::thread_m_axi_Out_ddr_WSTRB() {
    m_axi_Out_ddr_WSTRB = ap_const_lv4_F;
}

void Write_C_buf::thread_m_axi_Out_ddr_WUSER() {
    m_axi_Out_ddr_WUSER = ap_const_lv1_0;
}

void Write_C_buf::thread_m_axi_Out_ddr_WVALID() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(m_axi_Out_ddr_WREADY.read(), ap_const_logic_1))) {
        m_axi_Out_ddr_WVALID = ap_const_logic_1;
    } else {
        m_axi_Out_ddr_WVALID = ap_const_logic_0;
    }
}

void Write_C_buf::thread_mul_ln299_1_fu_269_p1() {
    mul_ln299_1_fu_269_p1 = p_chout_s.read();
}

void Write_C_buf::thread_mul_ln299_1_fu_269_p2() {
    mul_ln299_1_fu_269_p2 = (!mul_ln299_reg_391.read().is_01() || !mul_ln299_1_fu_269_p1.read().is_01())? sc_lv<32>(): sc_bigint<32>(mul_ln299_reg_391.read()) * sc_bigint<32>(mul_ln299_1_fu_269_p1.read());
}

void Write_C_buf::thread_mul_ln299_2_fu_282_p2() {
    mul_ln299_2_fu_282_p2 = (!trunc_ln299_2_fu_278_p1.read().is_01() || !trunc_ln299_reg_404.read().is_01())? sc_lv<10>(): sc_bigint<10>(trunc_ln299_2_fu_278_p1.read()) * sc_bigint<10>(trunc_ln299_reg_404.read());
}

void Write_C_buf::thread_mul_ln299_fu_204_p0() {
    mul_ln299_fu_204_p0 = p_c_s.read();
}

void Write_C_buf::thread_mul_ln299_fu_204_p1() {
    mul_ln299_fu_204_p1 =  (sc_lv<3>) (zext_ln293_fu_189_p1.read());
}

void Write_C_buf::thread_mul_ln299_fu_204_p2() {
    mul_ln299_fu_204_p2 = (!mul_ln299_fu_204_p0.read().is_01() || !mul_ln299_fu_204_p1.read().is_01())? sc_lv<32>(): sc_bigint<32>(mul_ln299_fu_204_p0.read()) * sc_biguint<3>(mul_ln299_fu_204_p1.read());
}

void Write_C_buf::thread_mul_ln301_1_fu_313_p1() {
    mul_ln301_1_fu_313_p1 = p_c_s.read();
}

void Write_C_buf::thread_mul_ln301_1_fu_313_p2() {
    mul_ln301_1_fu_313_p2 = (!mul_ln301_fu_308_p2.read().is_01() || !mul_ln301_1_fu_313_p1.read().is_01())? sc_lv<32>(): sc_bigint<32>(mul_ln301_fu_308_p2.read()) * sc_bigint<32>(mul_ln301_1_fu_313_p1.read());
}

void Write_C_buf::thread_mul_ln301_fu_308_p0() {
    mul_ln301_fu_308_p0 = p_chout_s.read();
}

void Write_C_buf::thread_mul_ln301_fu_308_p1() {
    mul_ln301_fu_308_p1 =  (sc_lv<3>) (zext_ln293_reg_378.read());
}

void Write_C_buf::thread_mul_ln301_fu_308_p2() {
    mul_ln301_fu_308_p2 = (!mul_ln301_fu_308_p0.read().is_01() || !mul_ln301_fu_308_p1.read().is_01())? sc_lv<32>(): sc_bigint<32>(mul_ln301_fu_308_p0.read()) * sc_biguint<3>(mul_ln301_fu_308_p1.read());
}

void Write_C_buf::thread_p_1_idx8_fu_231_p2() {
    p_1_idx8_fu_231_p2 = (!p_2_rec_reg_154.read().is_01() || !p_0_idx_fu_72.read().is_01())? sc_lv<64>(): (sc_biguint<64>(p_2_rec_reg_154.read()) + sc_biguint<64>(p_0_idx_fu_72.read()));
}

void Write_C_buf::thread_r_fu_198_p2() {
    r_fu_198_p2 = (!r_0_reg_132.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(r_0_reg_132.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void Write_C_buf::thread_sext_fu_180_p1() {
    sext_fu_180_p1 = esl_zext<64,30>(Out_ddr_offset.read());
}

void Write_C_buf::thread_sext_ln299_fu_303_p1() {
    sext_ln299_fu_303_p1 = esl_sext<64,10>(add_ln299_1_fu_297_p2.read());
}

void Write_C_buf::thread_sext_ln301_fu_345_p1() {
    sext_ln301_fu_345_p1 = esl_sext<64,10>(add_ln301_1_reg_428.read());
}

void Write_C_buf::thread_sum1_fu_237_p2() {
    sum1_fu_237_p2 = (!p_1_idx8_fu_231_p2.read().is_01() || !Out_ddr_offset1.read().is_01())? sc_lv<64>(): (sc_biguint<64>(p_1_idx8_fu_231_p2.read()) + sc_biguint<64>(Out_ddr_offset1.read()));
}

void Write_C_buf::thread_sum_fu_242_p2() {
    sum_fu_242_p2 = (!sum1_fu_237_p2.read().is_01() || !sext_reg_373.read().is_01())? sc_lv<64>(): (sc_biguint<64>(sum1_fu_237_p2.read()) + sc_biguint<64>(sext_reg_373.read()));
}

void Write_C_buf::thread_trunc_ln299_1_fu_274_p1() {
    trunc_ln299_1_fu_274_p1 = mul_ln299_1_fu_269_p2.read().range(10-1, 0);
}

void Write_C_buf::thread_trunc_ln299_2_fu_278_p0() {
    trunc_ln299_2_fu_278_p0 = p_chout_s.read();
}

void Write_C_buf::thread_trunc_ln299_2_fu_278_p1() {
    trunc_ln299_2_fu_278_p1 = trunc_ln299_2_fu_278_p0.read().range(10-1, 0);
}

void Write_C_buf::thread_trunc_ln299_3_fu_287_p1() {
    trunc_ln299_3_fu_287_p1 = cho_0_reg_165.read().range(10-1, 0);
}

void Write_C_buf::thread_trunc_ln299_fu_224_p1() {
    trunc_ln299_fu_224_p1 = c_0_reg_143.read().range(10-1, 0);
}

void Write_C_buf::thread_trunc_ln301_fu_318_p1() {
    trunc_ln301_fu_318_p1 = mul_ln301_1_fu_313_p2.read().range(10-1, 0);
}

void Write_C_buf::thread_zext_ln293_fu_189_p1() {
    zext_ln293_fu_189_p1 = esl_zext<32,3>(r_0_reg_132.read());
}

void Write_C_buf::thread_zext_ln295_fu_209_p1() {
    zext_ln295_fu_209_p1 = esl_zext<32,31>(c_0_reg_143.read());
}

void Write_C_buf::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln293_fu_193_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln295_fu_213_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln297_fu_257_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(m_axi_Out_ddr_AWREADY.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(m_axi_Out_ddr_WREADY.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && esl_seteq<1,1,1>(m_axi_Out_ddr_BVALID.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state11;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<11>) ("XXXXXXXXXXX");
            break;
    }
}

}

