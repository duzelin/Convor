

================================================================
== Vivado HLS Report for 'Load_W_ALL'
================================================================
* Date:           Sun Feb 28 11:05:26 2021

* Version:        2020.1 (Build 2897737 on Wed May 27 20:21:37 MDT 2020)
* Project:        conv_v1.prj
* Solution:       solution2
* Product family: zynquplus
* Target device:  xczu7ev-ffvc1156-2-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  | 10.00 ns | 7.950 ns |   1.25 ns  |
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+-----+------+---------+
    |  Latency (cycles) |   Latency (absolute)  |  Interval  | Pipeline|
    |   min   |   max   |    min    |    max    | min |  max |   Type  |
    +---------+---------+-----------+-----------+-----+------+---------+
    |        7|     1805| 70.000 ns | 18.050 us |    7|  1805|   none  |
    +---------+---------+-----------+-----------+-----+------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------------------+---------+---------+----------+-----------+-----------+---------+----------+
        |                      |  Latency (cycles) | Iteration|  Initiation Interval  |   Trip  |          |
        |       Loop Name      |   min   |   max   |  Latency |  achieved |   target  |  Count  | Pipelined|
        +----------------------+---------+---------+----------+-----------+-----------+---------+----------+
        |- Load_W_Out_L_Inner  |        3|     1801|         4|          2|          1| 1 ~ 900 |    yes   |
        +----------------------+---------+---------+----------+-----------+-----------+---------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 2, depth = 4


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 8
* Pipeline : 1
  Pipeline-0 : II = 2, D = 4, States = { 4 5 6 7 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 
5 --> 8 6 
6 --> 7 
7 --> 4 
8 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.83>
ST_1 : Operation 9 [1/1] (1.83ns)   --->   "%cho_read = call i32 @_ssdm_op_Read.ap_fifo.i32P(i32* %cho)" [conv_v1.cpp:68]   --->   Operation 9 'read' 'cho_read' <Predicate = true> <Delay = 1.83> <Core = "FIFO">   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 1.83> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 2> <FIFO>
ST_1 : Operation 10 [1/1] (1.83ns)   --->   "%p_c_read = call i32 @_ssdm_op_Read.ap_fifo.i32P(i32* %p_c_s)" [conv_v1.cpp:69]   --->   Operation 10 'read' 'p_c_read' <Predicate = true> <Delay = 1.83> <Core = "FIFO">   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 1.83> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 2> <FIFO>
ST_1 : Operation 11 [1/1] (1.83ns)   --->   "%p_chin_read = call i32 @_ssdm_op_Read.ap_fifo.i32P(i32* %p_chin_s)" [conv_v1.cpp:71]   --->   Operation 11 'read' 'p_chin_read' <Predicate = true> <Delay = 1.83> <Core = "FIFO">   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 1.83> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 2> <FIFO>
ST_1 : Operation 12 [1/1] (1.83ns)   --->   "%p_k_read = call i32 @_ssdm_op_Read.ap_fifo.i32P(i32* %p_k_s)" [conv_v1.cpp:73]   --->   Operation 12 'read' 'p_k_read' <Predicate = true> <Delay = 1.83> <Core = "FIFO">   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 1.83> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 2> <FIFO>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%trunc_ln78_1 = trunc i32 %p_k_read to i10" [conv_v1.cpp:78]   --->   Operation 13 'trunc' 'trunc_ln78_1' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 7.95>
ST_2 : Operation 14 [1/1] (3.42ns)   --->   "%mul_ln78 = mul i32 %cho_read, %p_chin_read" [conv_v1.cpp:78]   --->   Operation 14 'mul' 'mul_ln78' <Predicate = true> <Delay = 3.42> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 5.45> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 15 [1/1] (3.42ns)   --->   "%mul_ln78_1 = mul i32 %p_k_read, %p_k_read" [conv_v1.cpp:78]   --->   Operation 15 'mul' 'mul_ln78_1' <Predicate = true> <Delay = 3.42> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 5.45> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 16 [1/1] (3.42ns)   --->   "%mul_ln78_2 = mul i32 %mul_ln78_1, %mul_ln78" [conv_v1.cpp:78]   --->   Operation 16 'mul' 'mul_ln78_2' <Predicate = true> <Delay = 3.42> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 5.45> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 17 [1/1] (0.00ns)   --->   "%trunc_ln78 = trunc i32 %mul_ln78_2 to i10" [conv_v1.cpp:78]   --->   Operation 17 'trunc' 'trunc_ln78' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 18 [1/1] (1.01ns)   --->   "%add_ln78 = add nsw i32 1, %cho_read" [conv_v1.cpp:78]   --->   Operation 18 'add' 'add_ln78' <Predicate = true> <Delay = 1.01> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 19 [1/1] (3.42ns)   --->   "%mul_ln78_3 = mul i32 %p_chin_read, %p_k_read" [conv_v1.cpp:78]   --->   Operation 19 'mul' 'mul_ln78_3' <Predicate = true> <Delay = 3.42> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 5.45> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 20 [1/1] (3.42ns)   --->   "%mul_ln78_4 = mul i32 %p_k_read, %add_ln78" [conv_v1.cpp:78]   --->   Operation 20 'mul' 'mul_ln78_4' <Predicate = true> <Delay = 3.42> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 5.45> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 21 [1/1] (3.42ns)   --->   "%mul_ln78_5 = mul i32 %mul_ln78_4, %mul_ln78_3" [conv_v1.cpp:78]   --->   Operation 21 'mul' 'mul_ln78_5' <Predicate = true> <Delay = 3.42> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 5.45> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "%trunc_ln78_2 = trunc i32 %mul_ln78_5 to i10" [conv_v1.cpp:78]   --->   Operation 22 'trunc' 'trunc_ln78_2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 23 [1/1] (1.01ns)   --->   "%add_ln78_1 = add nsw i32 2, %cho_read" [conv_v1.cpp:78]   --->   Operation 23 'add' 'add_ln78_1' <Predicate = true> <Delay = 1.01> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 24 [1/1] (3.42ns)   --->   "%mul_ln78_6 = mul i32 %p_k_read, %add_ln78_1" [conv_v1.cpp:78]   --->   Operation 24 'mul' 'mul_ln78_6' <Predicate = true> <Delay = 3.42> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 5.45> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 25 [1/1] (3.42ns)   --->   "%mul_ln78_7 = mul i32 %mul_ln78_6, %mul_ln78_3" [conv_v1.cpp:78]   --->   Operation 25 'mul' 'mul_ln78_7' <Predicate = true> <Delay = 3.42> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 5.45> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "%trunc_ln78_3 = trunc i32 %mul_ln78_7 to i10" [conv_v1.cpp:78]   --->   Operation 26 'trunc' 'trunc_ln78_3' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 27 [1/1] (1.01ns)   --->   "%add_ln78_2 = add nsw i32 3, %cho_read" [conv_v1.cpp:78]   --->   Operation 27 'add' 'add_ln78_2' <Predicate = true> <Delay = 1.01> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 28 [1/1] (3.42ns)   --->   "%mul_ln78_8 = mul i32 %p_k_read, %add_ln78_2" [conv_v1.cpp:78]   --->   Operation 28 'mul' 'mul_ln78_8' <Predicate = true> <Delay = 3.42> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 5.45> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 29 [1/1] (3.42ns)   --->   "%mul_ln78_9 = mul i32 %mul_ln78_8, %mul_ln78_3" [conv_v1.cpp:78]   --->   Operation 29 'mul' 'mul_ln78_9' <Predicate = true> <Delay = 3.42> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 5.45> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "%trunc_ln78_4 = trunc i32 %mul_ln78_9 to i10" [conv_v1.cpp:78]   --->   Operation 30 'trunc' 'trunc_ln78_4' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "%cast = zext i32 %p_k_read to i64" [conv_v1.cpp:73]   --->   Operation 31 'zext' 'cast' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 32 [1/1] (3.42ns)   --->   "%bound = mul i64 %cast, %cast" [conv_v1.cpp:73]   --->   Operation 32 'mul' 'bound' <Predicate = true> <Delay = 3.42> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 5.45> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 33 [1/1] (0.00ns)   --->   "%cast2 = zext i32 %p_chin_read to i96" [conv_v1.cpp:71]   --->   Operation 33 'zext' 'cast2' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "%cast3 = zext i64 %bound to i96" [conv_v1.cpp:73]   --->   Operation 34 'zext' 'cast3' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 35 [1/1] (4.53ns)   --->   "%bound4 = mul i96 %cast3, %cast2" [conv_v1.cpp:73]   --->   Operation 35 'mul' 'bound4' <Predicate = true> <Delay = 4.53> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 5.45> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>

State 3 <SV = 2> <Delay = 5.45>
ST_3 : Operation 36 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(float* %W_next_0_3_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"   --->   Operation 36 'specinterface' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 37 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(float* %W_next_0_2_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"   --->   Operation 37 'specinterface' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 38 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(float* %W_next_0_1_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"   --->   Operation 38 'specinterface' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 39 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(float* %W_next_0_0_V, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [1 x i8]* @p_str)"   --->   Operation 39 'specinterface' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 40 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %p_c_s, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [11 x i8]* @ScalarProp_str)"   --->   Operation 40 'specinterface' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 41 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %cho, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [11 x i8]* @ScalarProp_str)"   --->   Operation 41 'specinterface' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 42 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %p_chin_s, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [11 x i8]* @ScalarProp_str)"   --->   Operation 42 'specinterface' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 43 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %p_k_s, [8 x i8]* @ap_fifo_str, i32 0, i32 0, [1 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str, [1 x i8]* @p_str, [1 x i8]* @p_str, i32 2, i32 2, i32 16, i32 16, [1 x i8]* @p_str, [11 x i8]* @ScalarProp_str)"   --->   Operation 43 'specinterface' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 44 [1/1] (0.00ns)   --->   "%cast24 = zext i32 %p_c_read to i128" [conv_v1.cpp:69]   --->   Operation 44 'zext' 'cast24' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 45 [1/1] (0.00ns)   --->   "%cast25 = zext i96 %bound4 to i128" [conv_v1.cpp:73]   --->   Operation 45 'zext' 'cast25' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 46 [1/1] (5.45ns)   --->   "%bound26 = mul i128 %cast25, %cast24" [conv_v1.cpp:73]   --->   Operation 46 'mul' 'bound26' <Predicate = true> <Delay = 5.45> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 5.45> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 47 [1/1] (0.99ns)   --->   "%icmp_ln75 = icmp eq i32 %p_k_read, 0" [conv_v1.cpp:75]   --->   Operation 47 'icmp' 'icmp_ln75' <Predicate = true> <Delay = 0.99> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 48 [1/1] (1.13ns)   --->   "%icmp_ln73 = icmp eq i64 %bound, 0" [conv_v1.cpp:73]   --->   Operation 48 'icmp' 'icmp_ln73' <Predicate = true> <Delay = 1.13> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 49 [1/1] (0.65ns)   --->   "br label %0" [conv_v1.cpp:69]   --->   Operation 49 'br' <Predicate = true> <Delay = 0.65>

State 4 <SV = 3> <Delay = 6.84>
ST_4 : Operation 50 [1/1] (0.00ns)   --->   "%indvar_flatten58 = phi i128 [ 0, %entry ], [ %add_ln69, %Inner ]" [conv_v1.cpp:69]   --->   Operation 50 'phi' 'indvar_flatten58' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 51 [1/1] (0.00ns)   --->   "%indvar_flatten21 = phi i96 [ 0, %entry ], [ %select_ln71_9, %Inner ]" [conv_v1.cpp:71]   --->   Operation 51 'phi' 'indvar_flatten21' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 52 [1/1] (0.00ns)   --->   "%chi_0_i_i = phi i31 [ 0, %entry ], [ %select_ln71_8, %Inner ]" [conv_v1.cpp:71]   --->   Operation 52 'phi' 'chi_0_i_i' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 53 [1/1] (0.00ns)   --->   "%indvar_flatten = phi i64 [ 0, %entry ], [ %select_ln73_3, %Inner ]" [conv_v1.cpp:73]   --->   Operation 53 'phi' 'indvar_flatten' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 54 [1/1] (0.00ns)   --->   "%kc_0_i_i = phi i32 [ 0, %entry ], [ %kc, %Inner ]"   --->   Operation 54 'phi' 'kc_0_i_i' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 55 [1/1] (0.00ns)   --->   "%zext_ln71_1 = zext i31 %chi_0_i_i to i32" [conv_v1.cpp:71]   --->   Operation 55 'zext' 'zext_ln71_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 56 [1/1] (3.42ns)   --->   "%mul_ln78_10 = mul i32 %p_k_read, %zext_ln71_1" [conv_v1.cpp:78]   --->   Operation 56 'mul' 'mul_ln78_10' <Predicate = true> <Delay = 3.42> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 5.45> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 57 [1/1] (3.42ns)   --->   "%mul_ln78_11 = mul i32 %mul_ln78_10, %p_k_read" [conv_v1.cpp:78]   --->   Operation 57 'mul' 'mul_ln78_11' <Predicate = true> <Delay = 3.42> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 5.45> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 58 [1/1] (0.00ns)   --->   "%trunc_ln78_5 = trunc i32 %mul_ln78_11 to i10" [conv_v1.cpp:78]   --->   Operation 58 'trunc' 'trunc_ln78_5' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 59 [1/1] (1.30ns)   --->   "%icmp_ln69 = icmp eq i128 %indvar_flatten58, %bound26" [conv_v1.cpp:69]   --->   Operation 59 'icmp' 'icmp_ln69' <Predicate = true> <Delay = 1.30> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 60 [1/1] (1.21ns)   --->   "%icmp_ln71 = icmp eq i96 %indvar_flatten21, %bound4" [conv_v1.cpp:71]   --->   Operation 60 'icmp' 'icmp_ln71' <Predicate = (!icmp_ln69)> <Delay = 1.21> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 61 [1/1] (0.41ns)   --->   "%select_ln71 = select i1 %icmp_ln71, i31 0, i31 %chi_0_i_i" [conv_v1.cpp:71]   --->   Operation 61 'select' 'select_ln71' <Predicate = (!icmp_ln69)> <Delay = 0.41> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 62 [1/1] (0.99ns)   --->   "%icmp_ln75_1 = icmp eq i32 %kc_0_i_i, %p_k_read" [conv_v1.cpp:75]   --->   Operation 62 'icmp' 'icmp_ln75_1' <Predicate = (!icmp_ln69)> <Delay = 0.99> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 63 [1/1] (0.00ns) (grouped into LUT with out node select_ln71_7)   --->   "%select_ln71_2 = select i1 %icmp_ln71, i1 %icmp_ln75, i1 %icmp_ln75_1" [conv_v1.cpp:71]   --->   Operation 63 'select' 'select_ln71_2' <Predicate = (!icmp_ln69)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 64 [1/1] (1.13ns)   --->   "%icmp_ln73_1 = icmp eq i64 %indvar_flatten, %bound" [conv_v1.cpp:73]   --->   Operation 64 'icmp' 'icmp_ln73_1' <Predicate = (!icmp_ln69)> <Delay = 1.13> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.13> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 65 [1/1] (0.17ns)   --->   "%select_ln71_3 = select i1 %icmp_ln71, i1 %icmp_ln73, i1 %icmp_ln73_1" [conv_v1.cpp:71]   --->   Operation 65 'select' 'select_ln71_3' <Predicate = (!icmp_ln69)> <Delay = 0.17> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 66 [1/1] (1.00ns)   --->   "%chi = add i31 1, %select_ln71" [conv_v1.cpp:71]   --->   Operation 66 'add' 'chi' <Predicate = (!icmp_ln69)> <Delay = 1.00> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 67 [1/1] (0.00ns)   --->   "%zext_ln71 = zext i31 %chi to i32" [conv_v1.cpp:71]   --->   Operation 67 'zext' 'zext_ln71' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_4 : Operation 68 [1/1] (0.28ns)   --->   "%or_ln71 = or i1 %select_ln71_3, %icmp_ln71" [conv_v1.cpp:71]   --->   Operation 68 'or' 'or_ln71' <Predicate = (!icmp_ln69)> <Delay = 0.28> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 69 [1/1] (3.42ns)   --->   "%mul_ln78_13 = mul i32 %zext_ln71, %p_k_read" [conv_v1.cpp:78]   --->   Operation 69 'mul' 'mul_ln78_13' <Predicate = (!icmp_ln69)> <Delay = 3.42> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 5.45> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 70 [1/1] (0.17ns) (out node of the LUT)   --->   "%select_ln71_7 = select i1 %select_ln71_3, i1 %icmp_ln75, i1 %select_ln71_2" [conv_v1.cpp:71]   --->   Operation 70 'select' 'select_ln71_7' <Predicate = (!icmp_ln69)> <Delay = 0.17> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 71 [1/1] (0.00ns) (grouped into LUT with out node select_ln73)   --->   "%or_ln73 = or i1 %select_ln71_7, %select_ln71_3" [conv_v1.cpp:73]   --->   Operation 71 'or' 'or_ln73' <Predicate = (!icmp_ln69)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 72 [1/1] (0.00ns) (grouped into LUT with out node select_ln73)   --->   "%or_ln73_1 = or i1 %or_ln73, %icmp_ln71" [conv_v1.cpp:73]   --->   Operation 72 'or' 'or_ln73_1' <Predicate = (!icmp_ln69)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.28> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 73 [1/1] (0.44ns) (out node of the LUT)   --->   "%select_ln73 = select i1 %or_ln73_1, i32 0, i32 %kc_0_i_i" [conv_v1.cpp:73]   --->   Operation 73 'select' 'select_ln73' <Predicate = (!icmp_ln69)> <Delay = 0.44> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 74 [1/1] (0.00ns)   --->   "%trunc_ln78_9 = trunc i32 %select_ln73 to i10" [conv_v1.cpp:78]   --->   Operation 74 'trunc' 'trunc_ln78_9' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_4 : Operation 75 [1/1] (1.08ns)   --->   "%add_ln73_1 = add i64 1, %indvar_flatten" [conv_v1.cpp:73]   --->   Operation 75 'add' 'add_ln73_1' <Predicate = (!icmp_ln69)> <Delay = 1.08> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 76 [1/1] (1.33ns)   --->   "%add_ln71_1 = add i96 1, %indvar_flatten21" [conv_v1.cpp:71]   --->   Operation 76 'add' 'add_ln71_1' <Predicate = (!icmp_ln69)> <Delay = 1.33> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 5 <SV = 4> <Delay = 6.92>
ST_5 : Operation 77 [1/1] (0.00ns)   --->   "%kr_0_i_i = phi i31 [ 0, %entry ], [ %select_ln73_2, %Inner ]" [conv_v1.cpp:73]   --->   Operation 77 'phi' 'kr_0_i_i' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 78 [1/1] (0.00ns)   --->   "%trunc_ln78_6 = trunc i31 %kr_0_i_i to i10" [conv_v1.cpp:78]   --->   Operation 78 'trunc' 'trunc_ln78_6' <Predicate = (!or_ln71 & !select_ln71_7)> <Delay = 0.00>
ST_5 : Operation 79 [1/1] (2.11ns)   --->   "%mul_ln78_12 = mul i10 %trunc_ln78_6, %trunc_ln78_1" [conv_v1.cpp:78]   --->   Operation 79 'mul' 'mul_ln78_12' <Predicate = (!or_ln71 & !select_ln71_7)> <Delay = 2.11> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 5.45> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 80 [1/1] (1.57ns)   --->   "%add_ln69 = add i128 1, %indvar_flatten58" [conv_v1.cpp:69]   --->   Operation 80 'add' 'add_ln69' <Predicate = true> <Delay = 1.57> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 81 [1/1] (0.00ns)   --->   "br i1 %icmp_ln69, label %.exit, label %Inner" [conv_v1.cpp:69]   --->   Operation 81 'br' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 82 [1/1] (0.00ns) (grouped into LUT with out node select_ln71_5)   --->   "%select_ln71_1 = select i1 %icmp_ln71, i10 0, i10 %trunc_ln78_5" [conv_v1.cpp:71]   --->   Operation 82 'select' 'select_ln71_1' <Predicate = (!icmp_ln69 & !select_ln71_3)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 83 [1/1] (0.41ns)   --->   "%select_ln71_4 = select i1 %or_ln71, i31 0, i31 %kr_0_i_i" [conv_v1.cpp:71]   --->   Operation 83 'select' 'select_ln71_4' <Predicate = (!icmp_ln69)> <Delay = 0.41> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 84 [1/1] (3.42ns)   --->   "%mul_ln78_14 = mul i32 %p_k_read, %mul_ln78_13" [conv_v1.cpp:78]   --->   Operation 84 'mul' 'mul_ln78_14' <Predicate = (!icmp_ln69 & select_ln71_3)> <Delay = 3.42> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 5.45> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 85 [1/1] (0.00ns) (grouped into LUT with out node select_ln71_5)   --->   "%trunc_ln78_7 = trunc i32 %mul_ln78_14 to i10" [conv_v1.cpp:78]   --->   Operation 85 'trunc' 'trunc_ln78_7' <Predicate = (!icmp_ln69 & select_ln71_3)> <Delay = 0.00>
ST_5 : Operation 86 [1/1] (0.40ns) (out node of the LUT)   --->   "%select_ln71_5 = select i1 %select_ln71_3, i10 %trunc_ln78_7, i10 %select_ln71_1" [conv_v1.cpp:71]   --->   Operation 86 'select' 'select_ln71_5' <Predicate = (!icmp_ln69)> <Delay = 0.40> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 87 [1/1] (0.00ns) (grouped into LUT with out node select_ln73_1)   --->   "%select_ln71_6 = select i1 %or_ln71, i10 0, i10 %mul_ln78_12" [conv_v1.cpp:71]   --->   Operation 87 'select' 'select_ln71_6' <Predicate = (!icmp_ln69 & !select_ln71_7)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 88 [1/1] (0.41ns)   --->   "%select_ln71_8 = select i1 %select_ln71_3, i31 %chi, i31 %select_ln71" [conv_v1.cpp:71]   --->   Operation 88 'select' 'select_ln71_8' <Predicate = (!icmp_ln69)> <Delay = 0.41> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 89 [1/1] (1.00ns)   --->   "%kr = add i31 1, %select_ln71_4" [conv_v1.cpp:73]   --->   Operation 89 'add' 'kr' <Predicate = (!icmp_ln69)> <Delay = 1.00> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 90 [1/1] (0.00ns)   --->   "%trunc_ln78_8 = trunc i31 %kr to i10" [conv_v1.cpp:78]   --->   Operation 90 'trunc' 'trunc_ln78_8' <Predicate = (!icmp_ln69 & select_ln71_7)> <Delay = 0.00>
ST_5 : Operation 91 [1/1] (2.11ns)   --->   "%mul_ln78_15 = mul i10 %trunc_ln78_1, %trunc_ln78_8" [conv_v1.cpp:78]   --->   Operation 91 'mul' 'mul_ln78_15' <Predicate = (!icmp_ln69 & select_ln71_7)> <Delay = 2.11> <Core = "Mul">   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 5.45> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 92 [1/1] (0.40ns) (out node of the LUT)   --->   "%select_ln73_1 = select i1 %select_ln71_7, i10 %mul_ln78_15, i10 %select_ln71_6" [conv_v1.cpp:73]   --->   Operation 92 'select' 'select_ln73_1' <Predicate = (!icmp_ln69)> <Delay = 0.40> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 93 [1/1] (0.41ns)   --->   "%select_ln73_2 = select i1 %select_ln71_7, i31 %kr, i31 %select_ln71_4" [conv_v1.cpp:73]   --->   Operation 93 'select' 'select_ln73_2' <Predicate = (!icmp_ln69)> <Delay = 0.41> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 94 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%add_ln78_3 = add i10 %select_ln73_1, %trunc_ln78_9" [conv_v1.cpp:78]   --->   Operation 94 'add' 'add_ln78_3' <Predicate = (!icmp_ln69)> <Delay = 0.00> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.48> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 95 [1/1] (0.96ns) (root node of TernaryAdder)   --->   "%add_ln78_4 = add i10 %select_ln71_5, %add_ln78_3" [conv_v1.cpp:78]   --->   Operation 95 'add' 'add_ln78_4' <Predicate = (!icmp_ln69)> <Delay = 0.96> <Core = "TAddSub">   --->   Core 83 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.48> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 96 [1/1] (0.78ns)   --->   "%add_ln78_5 = add i10 %trunc_ln78, %add_ln78_4" [conv_v1.cpp:78]   --->   Operation 96 'add' 'add_ln78_5' <Predicate = (!icmp_ln69)> <Delay = 0.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 97 [1/1] (0.00ns)   --->   "%sext_ln78 = sext i10 %add_ln78_5 to i64" [conv_v1.cpp:78]   --->   Operation 97 'sext' 'sext_ln78' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_5 : Operation 98 [1/1] (0.00ns)   --->   "%W_buf_addr = getelementptr [500 x float]* %W_buf, i64 0, i64 %sext_ln78" [conv_v1.cpp:78]   --->   Operation 98 'getelementptr' 'W_buf_addr' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_5 : Operation 99 [2/2] (1.23ns)   --->   "%tmp = load float* %W_buf_addr, align 4" [conv_v1.cpp:78]   --->   Operation 99 'load' 'tmp' <Predicate = (!icmp_ln69)> <Delay = 1.23> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 500> <RAM>
ST_5 : Operation 100 [1/1] (0.78ns)   --->   "%add_ln78_6 = add i10 %trunc_ln78_2, %add_ln78_4" [conv_v1.cpp:78]   --->   Operation 100 'add' 'add_ln78_6' <Predicate = (!icmp_ln69)> <Delay = 0.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 101 [1/1] (0.00ns)   --->   "%sext_ln78_1 = sext i10 %add_ln78_6 to i64" [conv_v1.cpp:78]   --->   Operation 101 'sext' 'sext_ln78_1' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_5 : Operation 102 [1/1] (0.00ns)   --->   "%W_buf_addr_1 = getelementptr [500 x float]* %W_buf, i64 0, i64 %sext_ln78_1" [conv_v1.cpp:78]   --->   Operation 102 'getelementptr' 'W_buf_addr_1' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_5 : Operation 103 [2/2] (1.23ns)   --->   "%tmp_73 = load float* %W_buf_addr_1, align 4" [conv_v1.cpp:78]   --->   Operation 103 'load' 'tmp_73' <Predicate = (!icmp_ln69)> <Delay = 1.23> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 500> <RAM>
ST_5 : Operation 104 [1/1] (1.01ns)   --->   "%kc = add nsw i32 1, %select_ln73" [conv_v1.cpp:75]   --->   Operation 104 'add' 'kc' <Predicate = (!icmp_ln69)> <Delay = 1.01> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 105 [1/1] (0.42ns)   --->   "%select_ln73_3 = select i1 %or_ln71, i64 1, i64 %add_ln73_1" [conv_v1.cpp:73]   --->   Operation 105 'select' 'select_ln73_3' <Predicate = (!icmp_ln69)> <Delay = 0.42> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 106 [1/1] (0.37ns)   --->   "%select_ln71_9 = select i1 %icmp_ln71, i96 1, i96 %add_ln71_1" [conv_v1.cpp:71]   --->   Operation 106 'select' 'select_ln71_9' <Predicate = (!icmp_ln69)> <Delay = 0.37> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.37> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 6 <SV = 5> <Delay = 2.02>
ST_6 : Operation 107 [1/2] (1.23ns)   --->   "%tmp = load float* %W_buf_addr, align 4" [conv_v1.cpp:78]   --->   Operation 107 'load' 'tmp' <Predicate = (!icmp_ln69)> <Delay = 1.23> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 500> <RAM>
ST_6 : Operation 108 [1/2] (1.23ns)   --->   "%tmp_73 = load float* %W_buf_addr_1, align 4" [conv_v1.cpp:78]   --->   Operation 108 'load' 'tmp_73' <Predicate = (!icmp_ln69)> <Delay = 1.23> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 500> <RAM>
ST_6 : Operation 109 [1/1] (0.78ns)   --->   "%add_ln78_7 = add i10 %trunc_ln78_3, %add_ln78_4" [conv_v1.cpp:78]   --->   Operation 109 'add' 'add_ln78_7' <Predicate = (!icmp_ln69)> <Delay = 0.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 110 [1/1] (0.00ns)   --->   "%sext_ln78_2 = sext i10 %add_ln78_7 to i64" [conv_v1.cpp:78]   --->   Operation 110 'sext' 'sext_ln78_2' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_6 : Operation 111 [1/1] (0.00ns)   --->   "%W_buf_addr_2 = getelementptr [500 x float]* %W_buf, i64 0, i64 %sext_ln78_2" [conv_v1.cpp:78]   --->   Operation 111 'getelementptr' 'W_buf_addr_2' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_6 : Operation 112 [2/2] (1.23ns)   --->   "%tmp_74 = load float* %W_buf_addr_2, align 4" [conv_v1.cpp:78]   --->   Operation 112 'load' 'tmp_74' <Predicate = (!icmp_ln69)> <Delay = 1.23> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 500> <RAM>
ST_6 : Operation 113 [1/1] (0.78ns)   --->   "%add_ln78_8 = add i10 %trunc_ln78_4, %add_ln78_4" [conv_v1.cpp:78]   --->   Operation 113 'add' 'add_ln78_8' <Predicate = (!icmp_ln69)> <Delay = 0.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.01> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 114 [1/1] (0.00ns)   --->   "%sext_ln78_3 = sext i10 %add_ln78_8 to i64" [conv_v1.cpp:78]   --->   Operation 114 'sext' 'sext_ln78_3' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_6 : Operation 115 [1/1] (0.00ns)   --->   "%W_buf_addr_3 = getelementptr [500 x float]* %W_buf, i64 0, i64 %sext_ln78_3" [conv_v1.cpp:78]   --->   Operation 115 'getelementptr' 'W_buf_addr_3' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_6 : Operation 116 [2/2] (1.23ns)   --->   "%tmp_75 = load float* %W_buf_addr_3, align 4" [conv_v1.cpp:78]   --->   Operation 116 'load' 'tmp_75' <Predicate = (!icmp_ln69)> <Delay = 1.23> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 500> <RAM>

State 7 <SV = 6> <Delay = 3.07>
ST_7 : Operation 117 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([19 x i8]* @Load_W_Out_L_Inner_s)"   --->   Operation 117 'specloopname' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_7 : Operation 118 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopTripCount(i64 1, i64 900, i64 100)"   --->   Operation 118 'speclooptripcount' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_7 : Operation 119 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([10 x i8]* @L_L_Inner_str)"   --->   Operation 119 'specloopname' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_7 : Operation 120 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([8 x i8]* @L_Inner_str)"   --->   Operation 120 'specloopname' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_7 : Operation 121 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([6 x i8]* @p_str4) nounwind" [conv_v1.cpp:75]   --->   Operation 121 'specloopname' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_7 : Operation 122 [1/1] (0.00ns)   --->   "%tmp_109_i_i = call i32 (...)* @_ssdm_op_SpecRegionBegin([6 x i8]* @p_str4)" [conv_v1.cpp:75]   --->   Operation 122 'specregionbegin' 'tmp_109_i_i' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_7 : Operation 123 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str) nounwind" [conv_v1.cpp:76]   --->   Operation 123 'specpipeline' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_7 : Operation 124 [1/1] (1.83ns)   --->   "call void @_ssdm_op_Write.ap_fifo.volatile.floatP(float* %W_next_0_0_V, float %tmp)" [conv_v1.cpp:78]   --->   Operation 124 'write' <Predicate = (!icmp_ln69)> <Delay = 1.83> <Core = "FIFO">   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 1.83> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 2> <FIFO>
ST_7 : Operation 125 [1/1] (1.83ns)   --->   "call void @_ssdm_op_Write.ap_fifo.volatile.floatP(float* %W_next_0_1_V, float %tmp_73)" [conv_v1.cpp:78]   --->   Operation 125 'write' <Predicate = (!icmp_ln69)> <Delay = 1.83> <Core = "FIFO">   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 1.83> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 2> <FIFO>
ST_7 : Operation 126 [1/2] (1.23ns)   --->   "%tmp_74 = load float* %W_buf_addr_2, align 4" [conv_v1.cpp:78]   --->   Operation 126 'load' 'tmp_74' <Predicate = (!icmp_ln69)> <Delay = 1.23> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 500> <RAM>
ST_7 : Operation 127 [1/1] (1.83ns)   --->   "call void @_ssdm_op_Write.ap_fifo.volatile.floatP(float* %W_next_0_2_V, float %tmp_74)" [conv_v1.cpp:78]   --->   Operation 127 'write' <Predicate = (!icmp_ln69)> <Delay = 1.83> <Core = "FIFO">   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 1.83> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 2> <FIFO>
ST_7 : Operation 128 [1/2] (1.23ns)   --->   "%tmp_75 = load float* %W_buf_addr_3, align 4" [conv_v1.cpp:78]   --->   Operation 128 'load' 'tmp_75' <Predicate = (!icmp_ln69)> <Delay = 1.23> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.23> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 500> <RAM>
ST_7 : Operation 129 [1/1] (1.83ns)   --->   "call void @_ssdm_op_Write.ap_fifo.volatile.floatP(float* %W_next_0_3_V, float %tmp_75)" [conv_v1.cpp:78]   --->   Operation 129 'write' <Predicate = (!icmp_ln69)> <Delay = 1.83> <Core = "FIFO">   --->   Core 32 'FIFO' <Latency = 0> <II = 1> <Delay = 1.83> <Storage> <Opcode : 'read' 'write' 'nbread' 'nbwrite'> <Ports = 0> <Width = 32> <Depth = 2> <FIFO>
ST_7 : Operation 130 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecRegionEnd([6 x i8]* @p_str4, i32 %tmp_109_i_i)" [conv_v1.cpp:82]   --->   Operation 130 'specregionend' 'empty' <Predicate = (!icmp_ln69)> <Delay = 0.00>
ST_7 : Operation 131 [1/1] (0.00ns)   --->   "br label %0" [conv_v1.cpp:75]   --->   Operation 131 'br' <Predicate = (!icmp_ln69)> <Delay = 0.00>

State 8 <SV = 5> <Delay = 0.00>
ST_8 : Operation 132 [1/1] (0.00ns)   --->   "ret void"   --->   Operation 132 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.84ns
The critical path consists of the following:
	fifo read on port 'cho' (conv_v1.cpp:68) [18]  (1.84 ns)

 <State 2>: 7.95ns
The critical path consists of the following:
	'mul' operation ('bound', conv_v1.cpp:73) [41]  (3.42 ns)
	'mul' operation ('bound4', conv_v1.cpp:73) [44]  (4.53 ns)

 <State 3>: 5.45ns
The critical path consists of the following:
	'mul' operation ('bound26', conv_v1.cpp:73) [47]  (5.45 ns)

 <State 4>: 6.84ns
The critical path consists of the following:
	'phi' operation ('chi_0_i_i', conv_v1.cpp:71) with incoming values : ('select_ln71_8', conv_v1.cpp:71) [54]  (0 ns)
	'mul' operation ('mul_ln78_10', conv_v1.cpp:78) [59]  (3.42 ns)
	'mul' operation ('mul_ln78_11', conv_v1.cpp:78) [60]  (3.42 ns)

 <State 5>: 6.92ns
The critical path consists of the following:
	'phi' operation ('kr_0_i_i', conv_v1.cpp:73) with incoming values : ('select_ln73_2', conv_v1.cpp:73) [56]  (0 ns)
	'select' operation ('select_ln71_4', conv_v1.cpp:71) [81]  (0.418 ns)
	'add' operation ('kr', conv_v1.cpp:73) [89]  (1.01 ns)
	'mul' operation ('mul_ln78_15', conv_v1.cpp:78) [95]  (2.11 ns)
	'select' operation ('select_ln73_1', conv_v1.cpp:73) [96]  (0.403 ns)
	'add' operation ('add_ln78_3', conv_v1.cpp:78) [102]  (0 ns)
	'add' operation ('add_ln78_4', conv_v1.cpp:78) [103]  (0.96 ns)
	'add' operation ('add_ln78_5', conv_v1.cpp:78) [104]  (0.787 ns)
	'getelementptr' operation ('W_buf_addr', conv_v1.cpp:78) [106]  (0 ns)
	'load' operation ('tmp', conv_v1.cpp:78) on array 'W_buf' [107]  (1.24 ns)

 <State 6>: 2.02ns
The critical path consists of the following:
	'add' operation ('add_ln78_7', conv_v1.cpp:78) [114]  (0.787 ns)
	'getelementptr' operation ('W_buf_addr_2', conv_v1.cpp:78) [116]  (0 ns)
	'load' operation ('tmp', conv_v1.cpp:78) on array 'W_buf' [117]  (1.24 ns)

 <State 7>: 3.08ns
The critical path consists of the following:
	'load' operation ('tmp', conv_v1.cpp:78) on array 'W_buf' [117]  (1.24 ns)
	fifo write on port 'W_next_0_2_V' (conv_v1.cpp:78) [118]  (1.84 ns)

 <State 8>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
