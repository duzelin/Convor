// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _Write_C_buf_HH_
#define _Write_C_buf_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct Write_C_buf : public sc_module {
    // Port declarations 63
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<9> > Out_buf_address0;
    sc_out< sc_logic > Out_buf_ce0;
    sc_in< sc_lv<32> > Out_buf_q0;
    sc_out< sc_lv<9> > Out_buf_address1;
    sc_out< sc_logic > Out_buf_ce1;
    sc_out< sc_logic > Out_buf_we1;
    sc_out< sc_lv<32> > Out_buf_d1;
    sc_out< sc_logic > m_axi_Out_ddr_AWVALID;
    sc_in< sc_logic > m_axi_Out_ddr_AWREADY;
    sc_out< sc_lv<32> > m_axi_Out_ddr_AWADDR;
    sc_out< sc_lv<1> > m_axi_Out_ddr_AWID;
    sc_out< sc_lv<32> > m_axi_Out_ddr_AWLEN;
    sc_out< sc_lv<3> > m_axi_Out_ddr_AWSIZE;
    sc_out< sc_lv<2> > m_axi_Out_ddr_AWBURST;
    sc_out< sc_lv<2> > m_axi_Out_ddr_AWLOCK;
    sc_out< sc_lv<4> > m_axi_Out_ddr_AWCACHE;
    sc_out< sc_lv<3> > m_axi_Out_ddr_AWPROT;
    sc_out< sc_lv<4> > m_axi_Out_ddr_AWQOS;
    sc_out< sc_lv<4> > m_axi_Out_ddr_AWREGION;
    sc_out< sc_lv<1> > m_axi_Out_ddr_AWUSER;
    sc_out< sc_logic > m_axi_Out_ddr_WVALID;
    sc_in< sc_logic > m_axi_Out_ddr_WREADY;
    sc_out< sc_lv<32> > m_axi_Out_ddr_WDATA;
    sc_out< sc_lv<4> > m_axi_Out_ddr_WSTRB;
    sc_out< sc_logic > m_axi_Out_ddr_WLAST;
    sc_out< sc_lv<1> > m_axi_Out_ddr_WID;
    sc_out< sc_lv<1> > m_axi_Out_ddr_WUSER;
    sc_out< sc_logic > m_axi_Out_ddr_ARVALID;
    sc_in< sc_logic > m_axi_Out_ddr_ARREADY;
    sc_out< sc_lv<32> > m_axi_Out_ddr_ARADDR;
    sc_out< sc_lv<1> > m_axi_Out_ddr_ARID;
    sc_out< sc_lv<32> > m_axi_Out_ddr_ARLEN;
    sc_out< sc_lv<3> > m_axi_Out_ddr_ARSIZE;
    sc_out< sc_lv<2> > m_axi_Out_ddr_ARBURST;
    sc_out< sc_lv<2> > m_axi_Out_ddr_ARLOCK;
    sc_out< sc_lv<4> > m_axi_Out_ddr_ARCACHE;
    sc_out< sc_lv<3> > m_axi_Out_ddr_ARPROT;
    sc_out< sc_lv<4> > m_axi_Out_ddr_ARQOS;
    sc_out< sc_lv<4> > m_axi_Out_ddr_ARREGION;
    sc_out< sc_lv<1> > m_axi_Out_ddr_ARUSER;
    sc_in< sc_logic > m_axi_Out_ddr_RVALID;
    sc_out< sc_logic > m_axi_Out_ddr_RREADY;
    sc_in< sc_lv<32> > m_axi_Out_ddr_RDATA;
    sc_in< sc_logic > m_axi_Out_ddr_RLAST;
    sc_in< sc_lv<1> > m_axi_Out_ddr_RID;
    sc_in< sc_lv<1> > m_axi_Out_ddr_RUSER;
    sc_in< sc_lv<2> > m_axi_Out_ddr_RRESP;
    sc_in< sc_logic > m_axi_Out_ddr_BVALID;
    sc_out< sc_logic > m_axi_Out_ddr_BREADY;
    sc_in< sc_lv<2> > m_axi_Out_ddr_BRESP;
    sc_in< sc_lv<1> > m_axi_Out_ddr_BID;
    sc_in< sc_lv<1> > m_axi_Out_ddr_BUSER;
    sc_in< sc_lv<30> > Out_ddr_offset;
    sc_in< sc_lv<64> > Out_ddr_offset1;
    sc_in< sc_lv<32> > row;
    sc_in< sc_lv<32> > p_c_s;
    sc_in< sc_lv<32> > p_chout_s;


    // Module declarations
    Write_C_buf(sc_module_name name);
    SC_HAS_PROCESS(Write_C_buf);

    ~Write_C_buf();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > Out_ddr_blk_n_AW;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > icmp_ln297_reg_460;
    sc_signal< sc_lv<1> > icmp_ln297_reg_460_pp0_iter1_reg;
    sc_signal< sc_logic > Out_ddr_blk_n_W;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_lv<1> > icmp_ln297_reg_460_pp0_iter2_reg;
    sc_signal< sc_logic > Out_ddr_blk_n_B;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter8;
    sc_signal< sc_lv<1> > icmp_ln297_reg_460_pp0_iter7_reg;
    sc_signal< sc_lv<64> > p_2_rec_reg_183;
    sc_signal< sc_lv<32> > cho_0_reg_194;
    sc_signal< sc_lv<64> > bound_fu_217_p2;
    sc_signal< sc_lv<64> > bound_reg_411;
    sc_signal< sc_lv<64> > sext_fu_223_p1;
    sc_signal< sc_lv<64> > sext_reg_416;
    sc_signal< sc_lv<1> > icmp_ln293_fu_236_p2;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<64> > add_ln293_fu_241_p2;
    sc_signal< sc_lv<64> > add_ln293_reg_425;
    sc_signal< sc_lv<31> > select_ln293_fu_247_p3;
    sc_signal< sc_lv<31> > select_ln293_reg_430;
    sc_signal< sc_lv<3> > select_ln293_1_fu_261_p3;
    sc_signal< sc_lv<3> > select_ln293_1_reg_435;
    sc_signal< sc_lv<32> > zext_ln293_fu_269_p1;
    sc_signal< sc_lv<32> > zext_ln293_reg_440;
    sc_signal< sc_lv<32> > mul_ln293_fu_273_p2;
    sc_signal< sc_lv<32> > mul_ln293_reg_445;
    sc_signal< sc_lv<10> > trunc_ln299_fu_278_p1;
    sc_signal< sc_lv<10> > trunc_ln299_reg_450;
    sc_signal< sc_lv<64> > p_1_idx8_fu_282_p2;
    sc_signal< sc_lv<64> > p_1_idx8_reg_455;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state5_io;
    sc_signal< bool > ap_block_state6_pp0_stage0_iter3;
    sc_signal< bool > ap_block_state6_io;
    sc_signal< bool > ap_block_state7_pp0_stage0_iter4;
    sc_signal< bool > ap_block_state8_pp0_stage0_iter5;
    sc_signal< bool > ap_block_state9_pp0_stage0_iter6;
    sc_signal< bool > ap_block_state10_pp0_stage0_iter7;
    sc_signal< bool > ap_block_state11_pp0_stage0_iter8;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > icmp_ln297_fu_292_p2;
    sc_signal< sc_lv<1> > icmp_ln297_reg_460_pp0_iter3_reg;
    sc_signal< sc_lv<1> > icmp_ln297_reg_460_pp0_iter4_reg;
    sc_signal< sc_lv<1> > icmp_ln297_reg_460_pp0_iter5_reg;
    sc_signal< sc_lv<1> > icmp_ln297_reg_460_pp0_iter6_reg;
    sc_signal< sc_lv<64> > add_ln299_2_fu_298_p2;
    sc_signal< sc_lv<32> > Out_ddr_addr_reg_469;
    sc_signal< sc_lv<32> > Out_ddr_addr_reg_469_pp0_iter1_reg;
    sc_signal< sc_lv<10> > add_ln299_1_fu_348_p2;
    sc_signal< sc_lv<10> > add_ln299_1_reg_475;
    sc_signal< sc_lv<10> > add_ln301_1_fu_374_p2;
    sc_signal< sc_lv<10> > add_ln301_1_reg_480;
    sc_signal< sc_lv<32> > cho_fu_380_p2;
    sc_signal< sc_lv<32> > Out_buf_load_reg_495;
    sc_signal< sc_lv<31> > c_fu_394_p2;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter4;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter5;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter6;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter7;
    sc_signal< sc_lv<64> > indvar_flatten_reg_138;
    sc_signal< sc_lv<3> > r_0_reg_149;
    sc_signal< sc_lv<31> > c_0_reg_160;
    sc_signal< sc_lv<64> > p_1_idx_reg_171;
    sc_signal< sc_lv<64> > sext_ln299_fu_386_p1;
    sc_signal< sc_lv<64> > sext_ln301_fu_390_p1;
    sc_signal< sc_lv<64> > sum_fu_309_p2;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<32> > cast1_fu_213_p0;
    sc_signal< sc_lv<32> > bound_fu_217_p0;
    sc_signal< sc_lv<32> > bound_fu_217_p1;
    sc_signal< sc_lv<32> > zext_ln295_fu_227_p1;
    sc_signal< sc_lv<32> > icmp_ln295_fu_231_p1;
    sc_signal< sc_lv<1> > icmp_ln295_fu_231_p2;
    sc_signal< sc_lv<3> > add_ln293_1_fu_255_p2;
    sc_signal< sc_lv<32> > mul_ln293_fu_273_p0;
    sc_signal< sc_lv<3> > mul_ln293_fu_273_p1;
    sc_signal< sc_lv<32> > icmp_ln297_fu_292_p1;
    sc_signal< sc_lv<64> > sum1_fu_304_p2;
    sc_signal< sc_lv<32> > mul_ln299_fu_320_p1;
    sc_signal< sc_lv<32> > mul_ln299_fu_320_p2;
    sc_signal< sc_lv<32> > trunc_ln299_2_fu_329_p0;
    sc_signal< sc_lv<10> > trunc_ln299_2_fu_329_p1;
    sc_signal< sc_lv<10> > trunc_ln299_3_fu_338_p1;
    sc_signal< sc_lv<10> > trunc_ln299_1_fu_325_p1;
    sc_signal< sc_lv<10> > add_ln299_fu_342_p2;
    sc_signal< sc_lv<10> > mul_ln299_1_fu_333_p2;
    sc_signal< sc_lv<32> > mul_ln301_fu_354_p0;
    sc_signal< sc_lv<3> > mul_ln301_fu_354_p1;
    sc_signal< sc_lv<32> > mul_ln301_fu_354_p2;
    sc_signal< sc_lv<32> > mul_ln301_1_fu_359_p1;
    sc_signal< sc_lv<32> > mul_ln301_1_fu_359_p2;
    sc_signal< sc_lv<10> > add_ln301_fu_368_p2;
    sc_signal< sc_lv<10> > trunc_ln301_fu_364_p1;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_lv<64> > bound_fu_217_p00;
    sc_signal< sc_lv<64> > bound_fu_217_p10;
    sc_signal< sc_lv<32> > mul_ln293_fu_273_p10;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_fsm_state1;
    static const sc_lv<4> ap_ST_fsm_state2;
    static const sc_lv<4> ap_ST_fsm_pp0_stage0;
    static const sc_lv<4> ap_ST_fsm_state12;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<31> ap_const_lv31_0;
    static const sc_lv<4> ap_const_lv4_F;
    static const sc_lv<64> ap_const_lv64_1;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<31> ap_const_lv31_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_Out_buf_address0();
    void thread_Out_buf_address1();
    void thread_Out_buf_ce0();
    void thread_Out_buf_ce1();
    void thread_Out_buf_d1();
    void thread_Out_buf_we1();
    void thread_Out_ddr_blk_n_AW();
    void thread_Out_ddr_blk_n_B();
    void thread_Out_ddr_blk_n_W();
    void thread_add_ln293_1_fu_255_p2();
    void thread_add_ln293_fu_241_p2();
    void thread_add_ln299_1_fu_348_p2();
    void thread_add_ln299_2_fu_298_p2();
    void thread_add_ln299_fu_342_p2();
    void thread_add_ln301_1_fu_374_p2();
    void thread_add_ln301_fu_368_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state2();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state10_pp0_stage0_iter7();
    void thread_ap_block_state11_pp0_stage0_iter8();
    void thread_ap_block_state3_pp0_stage0_iter0();
    void thread_ap_block_state4_pp0_stage0_iter1();
    void thread_ap_block_state5_io();
    void thread_ap_block_state5_pp0_stage0_iter2();
    void thread_ap_block_state6_io();
    void thread_ap_block_state6_pp0_stage0_iter3();
    void thread_ap_block_state7_pp0_stage0_iter4();
    void thread_ap_block_state8_pp0_stage0_iter5();
    void thread_ap_block_state9_pp0_stage0_iter6();
    void thread_ap_condition_pp0_exit_iter0_state3();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_ready();
    void thread_bound_fu_217_p0();
    void thread_bound_fu_217_p00();
    void thread_bound_fu_217_p1();
    void thread_bound_fu_217_p10();
    void thread_bound_fu_217_p2();
    void thread_c_fu_394_p2();
    void thread_cast1_fu_213_p0();
    void thread_cho_fu_380_p2();
    void thread_icmp_ln293_fu_236_p2();
    void thread_icmp_ln295_fu_231_p1();
    void thread_icmp_ln295_fu_231_p2();
    void thread_icmp_ln297_fu_292_p1();
    void thread_icmp_ln297_fu_292_p2();
    void thread_m_axi_Out_ddr_ARADDR();
    void thread_m_axi_Out_ddr_ARBURST();
    void thread_m_axi_Out_ddr_ARCACHE();
    void thread_m_axi_Out_ddr_ARID();
    void thread_m_axi_Out_ddr_ARLEN();
    void thread_m_axi_Out_ddr_ARLOCK();
    void thread_m_axi_Out_ddr_ARPROT();
    void thread_m_axi_Out_ddr_ARQOS();
    void thread_m_axi_Out_ddr_ARREGION();
    void thread_m_axi_Out_ddr_ARSIZE();
    void thread_m_axi_Out_ddr_ARUSER();
    void thread_m_axi_Out_ddr_ARVALID();
    void thread_m_axi_Out_ddr_AWADDR();
    void thread_m_axi_Out_ddr_AWBURST();
    void thread_m_axi_Out_ddr_AWCACHE();
    void thread_m_axi_Out_ddr_AWID();
    void thread_m_axi_Out_ddr_AWLEN();
    void thread_m_axi_Out_ddr_AWLOCK();
    void thread_m_axi_Out_ddr_AWPROT();
    void thread_m_axi_Out_ddr_AWQOS();
    void thread_m_axi_Out_ddr_AWREGION();
    void thread_m_axi_Out_ddr_AWSIZE();
    void thread_m_axi_Out_ddr_AWUSER();
    void thread_m_axi_Out_ddr_AWVALID();
    void thread_m_axi_Out_ddr_BREADY();
    void thread_m_axi_Out_ddr_RREADY();
    void thread_m_axi_Out_ddr_WDATA();
    void thread_m_axi_Out_ddr_WID();
    void thread_m_axi_Out_ddr_WLAST();
    void thread_m_axi_Out_ddr_WSTRB();
    void thread_m_axi_Out_ddr_WUSER();
    void thread_m_axi_Out_ddr_WVALID();
    void thread_mul_ln293_fu_273_p0();
    void thread_mul_ln293_fu_273_p1();
    void thread_mul_ln293_fu_273_p10();
    void thread_mul_ln293_fu_273_p2();
    void thread_mul_ln299_1_fu_333_p2();
    void thread_mul_ln299_fu_320_p1();
    void thread_mul_ln299_fu_320_p2();
    void thread_mul_ln301_1_fu_359_p1();
    void thread_mul_ln301_1_fu_359_p2();
    void thread_mul_ln301_fu_354_p0();
    void thread_mul_ln301_fu_354_p1();
    void thread_mul_ln301_fu_354_p2();
    void thread_p_1_idx8_fu_282_p2();
    void thread_select_ln293_1_fu_261_p3();
    void thread_select_ln293_fu_247_p3();
    void thread_sext_fu_223_p1();
    void thread_sext_ln299_fu_386_p1();
    void thread_sext_ln301_fu_390_p1();
    void thread_sum1_fu_304_p2();
    void thread_sum_fu_309_p2();
    void thread_trunc_ln299_1_fu_325_p1();
    void thread_trunc_ln299_2_fu_329_p0();
    void thread_trunc_ln299_2_fu_329_p1();
    void thread_trunc_ln299_3_fu_338_p1();
    void thread_trunc_ln299_fu_278_p1();
    void thread_trunc_ln301_fu_364_p1();
    void thread_zext_ln293_fu_269_p1();
    void thread_zext_ln295_fu_227_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
