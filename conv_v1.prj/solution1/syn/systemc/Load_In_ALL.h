// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _Load_In_ALL_HH_
#define _Load_In_ALL_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "Systolic_Array_Cobkb.h"

namespace ap_rtl {

struct Load_In_ALL : public sc_module {
    // Port declarations 50
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_in< sc_logic > start_full_n;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > start_out;
    sc_out< sc_logic > start_write;
    sc_out< sc_lv<9> > In_buf_address0;
    sc_out< sc_logic > In_buf_ce0;
    sc_in< sc_lv<32> > In_buf_q0;
    sc_out< sc_lv<32> > In_next_0_0_V_din;
    sc_in< sc_logic > In_next_0_0_V_full_n;
    sc_out< sc_logic > In_next_0_0_V_write;
    sc_out< sc_lv<32> > In_next_1_0_V_din;
    sc_in< sc_logic > In_next_1_0_V_full_n;
    sc_out< sc_logic > In_next_1_0_V_write;
    sc_out< sc_lv<32> > In_next_2_0_V_din;
    sc_in< sc_logic > In_next_2_0_V_full_n;
    sc_out< sc_logic > In_next_2_0_V_write;
    sc_out< sc_lv<32> > In_next_3_0_V_din;
    sc_in< sc_logic > In_next_3_0_V_full_n;
    sc_out< sc_logic > In_next_3_0_V_write;
    sc_out< sc_lv<32> > p_c_out_din;
    sc_in< sc_logic > p_c_out_full_n;
    sc_out< sc_logic > p_c_out_write;
    sc_out< sc_lv<32> > p_c_out1_din;
    sc_in< sc_logic > p_c_out1_full_n;
    sc_out< sc_logic > p_c_out1_write;
    sc_out< sc_lv<32> > p_chin_out_din;
    sc_in< sc_logic > p_chin_out_full_n;
    sc_out< sc_logic > p_chin_out_write;
    sc_out< sc_lv<32> > p_chin_out2_din;
    sc_in< sc_logic > p_chin_out2_full_n;
    sc_out< sc_logic > p_chin_out2_write;
    sc_out< sc_lv<32> > p_k_out_din;
    sc_in< sc_logic > p_k_out_full_n;
    sc_out< sc_logic > p_k_out_write;
    sc_out< sc_lv<32> > p_k_out3_din;
    sc_in< sc_logic > p_k_out3_full_n;
    sc_out< sc_logic > p_k_out3_write;
    sc_in< sc_lv<32> > p_c_s;
    sc_in< sc_lv<32> > p_chin_s;
    sc_in< sc_lv<32> > p_k_s;
    sc_in< sc_lv<32> > p_s_s;
    sc_in< sc_lv<32> > In_buffer_start;
    sc_in< sc_lv<32> > p_cin_s;
    sc_in< sc_lv<32> > In_buffer_length;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    Load_In_ALL(sc_module_name name);
    SC_HAS_PROCESS(Load_In_ALL);

    ~Load_In_ALL();

    sc_trace_file* mVcdFile;

    Systolic_Array_Cobkb<1,36,32,32,32>* Systolic_Array_Cobkb_U34;
    sc_signal< sc_logic > real_start;
    sc_signal< sc_logic > start_once_reg;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<43> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > internal_ap_ready;
    sc_signal< sc_logic > In_next_0_0_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state43;
    sc_signal< sc_lv<2> > trunc_ln182_reg_488;
    sc_signal< sc_logic > In_next_1_0_V_blk_n;
    sc_signal< sc_logic > In_next_2_0_V_blk_n;
    sc_signal< sc_logic > In_next_3_0_V_blk_n;
    sc_signal< sc_logic > p_c_out_blk_n;
    sc_signal< sc_logic > p_c_out1_blk_n;
    sc_signal< sc_logic > p_chin_out_blk_n;
    sc_signal< sc_logic > p_chin_out2_blk_n;
    sc_signal< sc_logic > p_k_out_blk_n;
    sc_signal< sc_logic > p_k_out3_blk_n;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<32> > zext_ln32_fu_259_p1;
    sc_signal< sc_lv<32> > zext_ln32_reg_428;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<31> > col_fu_268_p2;
    sc_signal< sc_lv<31> > col_reg_436;
    sc_signal< sc_lv<32> > zext_ln34_fu_274_p1;
    sc_signal< sc_lv<32> > zext_ln34_reg_441;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<31> > chi_fu_283_p2;
    sc_signal< sc_lv<31> > chi_reg_449;
    sc_signal< sc_lv<32> > zext_ln36_fu_289_p1;
    sc_signal< sc_lv<32> > zext_ln36_reg_454;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<31> > kr_fu_298_p2;
    sc_signal< sc_lv<31> > kr_reg_462;
    sc_signal< sc_lv<32> > kc_fu_309_p2;
    sc_signal< sc_lv<32> > kc_reg_470;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<3> > r_fu_325_p2;
    sc_signal< sc_lv<3> > r_reg_478;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<32> > tmp_i_i_fu_367_p2;
    sc_signal< sc_lv<32> > tmp_i_i_reg_483;
    sc_signal< sc_lv<1> > icmp_ln40_fu_319_p2;
    sc_signal< sc_lv<2> > trunc_ln182_fu_373_p1;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_logic > ap_CS_fsm_state42;
    sc_signal< sc_lv<31> > col_0_i_i_reg_185;
    sc_signal< sc_lv<1> > icmp_ln34_fu_278_p2;
    sc_signal< sc_lv<31> > chi_0_i_i_reg_196;
    sc_signal< sc_lv<1> > icmp_ln32_fu_263_p2;
    sc_signal< sc_lv<1> > icmp_ln36_fu_293_p2;
    sc_signal< sc_lv<31> > kr_0_i_i_reg_207;
    sc_signal< sc_lv<1> > icmp_ln38_fu_304_p2;
    sc_signal< sc_lv<32> > kc_0_i_i_reg_218;
    sc_signal< sc_lv<3> > r_0_i_i_reg_230;
    sc_signal< bool > ap_block_state43;
    sc_signal< sc_lv<64> > sext_ln43_fu_406_p1;
    sc_signal< sc_lv<32> > icmp_ln34_fu_278_p1;
    sc_signal< sc_lv<32> > mul_ln41_fu_335_p0;
    sc_signal< sc_lv<3> > mul_ln41_fu_335_p1;
    sc_signal< sc_lv<32> > mul_ln41_fu_335_p2;
    sc_signal< sc_lv<32> > mul_ln42_fu_346_p0;
    sc_signal< sc_lv<31> > mul_ln42_fu_346_p1;
    sc_signal< sc_lv<32> > mul_ln43_fu_355_p0;
    sc_signal< sc_lv<32> > r_in_fu_341_p2;
    sc_signal< sc_lv<32> > mul_ln42_fu_346_p2;
    sc_signal< sc_lv<32> > mul_ln43_fu_355_p2;
    sc_signal< sc_lv<32> > tmp1_fu_361_p2;
    sc_signal< sc_lv<32> > tmp1_i_i_fu_381_p0;
    sc_signal< sc_lv<32> > tmp1_i_i_fu_381_p2;
    sc_signal< sc_lv<32> > add_ln43_fu_385_p2;
    sc_signal< sc_lv<32> > grp_fu_400_p0;
    sc_signal< sc_lv<32> > grp_fu_400_p2;
    sc_signal< sc_logic > grp_fu_400_ap_start;
    sc_signal< sc_logic > grp_fu_400_ap_done;
    sc_signal< sc_lv<43> > ap_NS_fsm;
    sc_signal< sc_lv<32> > mul_ln41_fu_335_p10;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<43> ap_ST_fsm_state1;
    static const sc_lv<43> ap_ST_fsm_state2;
    static const sc_lv<43> ap_ST_fsm_state3;
    static const sc_lv<43> ap_ST_fsm_state4;
    static const sc_lv<43> ap_ST_fsm_state5;
    static const sc_lv<43> ap_ST_fsm_state6;
    static const sc_lv<43> ap_ST_fsm_state7;
    static const sc_lv<43> ap_ST_fsm_state8;
    static const sc_lv<43> ap_ST_fsm_state9;
    static const sc_lv<43> ap_ST_fsm_state10;
    static const sc_lv<43> ap_ST_fsm_state11;
    static const sc_lv<43> ap_ST_fsm_state12;
    static const sc_lv<43> ap_ST_fsm_state13;
    static const sc_lv<43> ap_ST_fsm_state14;
    static const sc_lv<43> ap_ST_fsm_state15;
    static const sc_lv<43> ap_ST_fsm_state16;
    static const sc_lv<43> ap_ST_fsm_state17;
    static const sc_lv<43> ap_ST_fsm_state18;
    static const sc_lv<43> ap_ST_fsm_state19;
    static const sc_lv<43> ap_ST_fsm_state20;
    static const sc_lv<43> ap_ST_fsm_state21;
    static const sc_lv<43> ap_ST_fsm_state22;
    static const sc_lv<43> ap_ST_fsm_state23;
    static const sc_lv<43> ap_ST_fsm_state24;
    static const sc_lv<43> ap_ST_fsm_state25;
    static const sc_lv<43> ap_ST_fsm_state26;
    static const sc_lv<43> ap_ST_fsm_state27;
    static const sc_lv<43> ap_ST_fsm_state28;
    static const sc_lv<43> ap_ST_fsm_state29;
    static const sc_lv<43> ap_ST_fsm_state30;
    static const sc_lv<43> ap_ST_fsm_state31;
    static const sc_lv<43> ap_ST_fsm_state32;
    static const sc_lv<43> ap_ST_fsm_state33;
    static const sc_lv<43> ap_ST_fsm_state34;
    static const sc_lv<43> ap_ST_fsm_state35;
    static const sc_lv<43> ap_ST_fsm_state36;
    static const sc_lv<43> ap_ST_fsm_state37;
    static const sc_lv<43> ap_ST_fsm_state38;
    static const sc_lv<43> ap_ST_fsm_state39;
    static const sc_lv<43> ap_ST_fsm_state40;
    static const sc_lv<43> ap_ST_fsm_state41;
    static const sc_lv<43> ap_ST_fsm_state42;
    static const sc_lv<43> ap_ST_fsm_state43;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_2A;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_29;
    static const sc_lv<31> ap_const_lv31_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<31> ap_const_lv31_1;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<3> ap_const_lv3_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_In_buf_address0();
    void thread_In_buf_ce0();
    void thread_In_next_0_0_V_blk_n();
    void thread_In_next_0_0_V_din();
    void thread_In_next_0_0_V_write();
    void thread_In_next_1_0_V_blk_n();
    void thread_In_next_1_0_V_din();
    void thread_In_next_1_0_V_write();
    void thread_In_next_2_0_V_blk_n();
    void thread_In_next_2_0_V_din();
    void thread_In_next_2_0_V_write();
    void thread_In_next_3_0_V_blk_n();
    void thread_In_next_3_0_V_din();
    void thread_In_next_3_0_V_write();
    void thread_add_ln43_fu_385_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state42();
    void thread_ap_CS_fsm_state43();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_block_state1();
    void thread_ap_block_state43();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_chi_fu_283_p2();
    void thread_col_fu_268_p2();
    void thread_grp_fu_400_ap_start();
    void thread_grp_fu_400_p0();
    void thread_icmp_ln32_fu_263_p2();
    void thread_icmp_ln34_fu_278_p1();
    void thread_icmp_ln34_fu_278_p2();
    void thread_icmp_ln36_fu_293_p2();
    void thread_icmp_ln38_fu_304_p2();
    void thread_icmp_ln40_fu_319_p2();
    void thread_internal_ap_ready();
    void thread_kc_fu_309_p2();
    void thread_kr_fu_298_p2();
    void thread_mul_ln41_fu_335_p0();
    void thread_mul_ln41_fu_335_p1();
    void thread_mul_ln41_fu_335_p10();
    void thread_mul_ln41_fu_335_p2();
    void thread_mul_ln42_fu_346_p0();
    void thread_mul_ln42_fu_346_p1();
    void thread_mul_ln42_fu_346_p2();
    void thread_mul_ln43_fu_355_p0();
    void thread_mul_ln43_fu_355_p2();
    void thread_p_c_out1_blk_n();
    void thread_p_c_out1_din();
    void thread_p_c_out1_write();
    void thread_p_c_out_blk_n();
    void thread_p_c_out_din();
    void thread_p_c_out_write();
    void thread_p_chin_out2_blk_n();
    void thread_p_chin_out2_din();
    void thread_p_chin_out2_write();
    void thread_p_chin_out_blk_n();
    void thread_p_chin_out_din();
    void thread_p_chin_out_write();
    void thread_p_k_out3_blk_n();
    void thread_p_k_out3_din();
    void thread_p_k_out3_write();
    void thread_p_k_out_blk_n();
    void thread_p_k_out_din();
    void thread_p_k_out_write();
    void thread_r_fu_325_p2();
    void thread_r_in_fu_341_p2();
    void thread_real_start();
    void thread_sext_ln43_fu_406_p1();
    void thread_start_out();
    void thread_start_write();
    void thread_tmp1_fu_361_p2();
    void thread_tmp1_i_i_fu_381_p0();
    void thread_tmp1_i_i_fu_381_p2();
    void thread_tmp_i_i_fu_367_p2();
    void thread_trunc_ln182_fu_373_p1();
    void thread_zext_ln32_fu_259_p1();
    void thread_zext_ln34_fu_274_p1();
    void thread_zext_ln36_fu_289_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
